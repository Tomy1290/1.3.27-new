import { AppState } from '../store/useStore';

function t(lang: 'de'|'en'|'pl', de: string, en: string, pl?: string) { return lang==='en'?en:(lang==='pl'?(pl||en):de); }

export function answerCycle(state: AppState, q?: string) {
  const lang = state.language as 'de'|'en'|'pl';
  const txt = t(lang,
    'Zyklus ‚Äì √úberblick: Periode (Blutung), Follikelphase (Aufbau), Ovulation (Eisprung, fruchtbares Fenster), Lutealphase (Regeneration). In der App: Zyklusstart/‚Äëende setzen, Kalender zeigt Prognosen und fertile Tage. Beobachte Energie, Schlaf und Schmerzen ‚Äì plane entlastende Tage (W√§rme, Ruhe, sanfte Bewegung).',
    'Cycle ‚Äì overview: Period (bleeding), follicular (build-up), ovulation (fertile window), luteal (regeneration). In the app: set start/end, calendar shows predictions and fertile days. Watch energy, sleep, pain ‚Äì plan lighter days (warmth, rest, gentle movement).',
    'Cykl ‚Äì przeglƒÖd: Okres (krwawienie), faza pƒôcherzykowa, owulacja (okno p≈Çodne), lutealna. W aplikacji: ustaw start/koniec, kalendarz pokazuje prognozy i dni p≈Çodne. Obserwuj energiƒô, sen, b√≥l ‚Äì zaplanuj l≈ºejsze dni (ciep≈Ço, odpoczynek, lekki ruch).'
  );
  return txt;
}

export function cycleFertileWindow(state: AppState) {
  const lang = state.language as 'de'|'en'|'pl';
  return t(lang,
    'Fruchtbares Fenster: startet meist 3‚Äì5 Tage vor dem Eisprung und endet ca. am Eisprungtag. Stress, Schlafmangel und Erkrankungen k√∂nnen den Zeitpunkt verschieben. Nutze den Kalender f√ºr eine vorsichtige Sch√§tzung ‚Äì reale Zyklen schwanken.',
    'Fertile window: typically begins 3‚Äì5 days before ovulation and ends around ovulation day. Stress, poor sleep, illness can shift timing. Use the calendar as a cautious estimate ‚Äì real cycles vary.',
    'Okno p≈Çodne: zwykle zaczyna siƒô 3‚Äì5 dni przed owulacjƒÖ i ko≈Ñczy w dniu owulacji. Stres, sen, choroba mogƒÖ zmieniaƒá termin. Kalendarz daje ostro≈ºne oszacowanie ‚Äì cykle siƒô r√≥≈ºniƒÖ.'
  );
}

export function cyclePainManagement(state: AppState) {
  const lang = state.language as 'de'|'en'|'pl';
  return t(lang,
    'Umgang mit Schmerzen/Kr√§mpfen: W√§rme (W√§rmflasche, warmes Bad), ruhige Bewegung/Dehnen, ausreichend trinken und leicht verdauliche Kost. Achte auf Ruhephasen. Bei starken Beschwerden medizinischen Rat einholen.',
    'Managing pain/cramps: warmth (hot water bottle, warm bath), gentle movement/stretching, hydration and light foods. Add rest periods. Seek medical advice if severe.',
    'Radzenie sobie z b√≥lem/skurczami: ciep≈Ço (termofor, ciep≈Ça kƒÖpiel), ≈Çagodny ruch/rozciƒÖganie, nawodnienie i lekkostrawna dieta. Planuj odpoczynek. Przy silnych dolegliwo≈õciach skonsultuj lekarza.'
  );
}

export function cycleEnergySleep(state: AppState) {
  const lang = state.language as 'de'|'en'|'pl';
  return t(lang,
    'Energie & Schlaf √ºber den Zyklus: Viele erleben mehr Energie in der Follikelphase und leichte Tiefs rund um Periode/Lutealphase. Unterst√ºtze dich mit Rhythmus (feste Schlafzeiten), Tageslicht am Morgen und abends weniger Bildschirmzeit.',
    'Energy & sleep over cycle: Many feel more energy in follicular phase and dips around period/luteal. Support with rhythm (consistent sleep), morning daylight, and less screens at night.',
    'Energia i sen w cyklu: Czƒôsto wiƒôcej energii w fazie pƒôcherzykowej i spadki w okresie/lutealnej. PomagajƒÖ rytm snu, ≈õwiat≈Ço poranne i mniej ekran√≥w wieczorem.'
  );
}

export function answerWeight(state: AppState, q?: string) {
  const lang = state.language as 'de'|'en'|'pl';
  const ws = Object.values(state.days||{}).filter((d:any)=>typeof d.weight==='number');
  let trendTxt = '';
  if (ws.length>=3) {
    const first = (ws[0] as any).weight as number; const last = (ws[ws.length-1] as any).weight as number; const trend = (last-first)/Math.max(1, ws.length-1);
    trendTxt = t(lang, `Trend/Tag: ${trend>=0?'+':''}${trend.toFixed(2)} kg.`, `Trend/day: ${trend>=0?'+':''}${trend.toFixed(2)} kg.`, `Trend/dzie≈Ñ: ${trend>=0?'+':''}${trend.toFixed(2)} kg.`);
  }
  const core = t(lang,
    'Bewerte Gewicht √ºber mehrere Tage/Wochen. Plateaus sind normal ‚Äì kleine Hebel: Wasser (35 ml/kg), Bewegung, Schlaf, salzarme Kost abends. Morgens wiegen erh√∂ht Vergleichbarkeit.',
    'Assess weight across days/weeks. Plateaus are normal ‚Äì small levers: water (35 ml/kg), activity, sleep, lower salt at night. Morning weighing improves comparability.',
    'Oceniaj wagƒô w dniach/tygodniach. Plateau to norma ‚Äì d≈∫wignie: woda (35 ml/kg), ruch, sen, mniej soli wieczorem. Wa≈ºenie rano u≈Çatwia por√≥wnanie.'
  );
  return `${trendTxt} ${core}`.trim();
}

export function weightPlateauStrategies(state: AppState) {
  const lang = state.language as 'de'|'en'|'pl';
  return t(lang,
    'Plateau‚ÄëStrategien: +0,5‚Äì1,0 L Wasser/Tag (angepasst), kurze Alltagswege zu Fu√ü, 10‚Äì15 Min. Aktivit√§t, Abend-Snack salzarm, gleichm√§√üige Mahlzeiten. Keine Crash‚ÄëDi√§ten.',
    'Plateau strategies: +0.5‚Äì1.0 L water/day (adjusted), short walks, 10‚Äì15 min activity, low‚Äësalt evening snack, regular meals. Avoid crash diets.',
    'Strategie na plateau: +0,5‚Äì1,0 L wody/dzie≈Ñ (dopasuj), kr√≥tkie spacery, 10‚Äì15 min aktywno≈õci, ma≈Ço soli wieczorem, regularne posi≈Çki. Unikaj drastycznych diet.'
  );
}

export function hydrationWeightRelation(state: AppState) {
  const lang = state.language as 'de'|'en'|'pl';
  return t(lang,
    'Hydration & Gewicht: Zu wenig Trinken f√∂rdert Wasserhaushalts‚ÄëSchwankungen und Hungergef√ºhl. Richtwert: 35 ml/kg/Tag, +500 ml bei Sport. Morgendlicher ‚ÄûStart‚ÄëSchluck‚Äú hilft.',
    'Hydration & weight: Low intake increases water balance swings and hunger. Guide: 35 ml/kg/day, +500 ml with exercise. A morning ‚Äústart sip‚Äù helps.',
    'Nawodnienie & waga: Za ma≈Ço picia = wahania wody i g≈Ç√≥d. Wskaz√≥wka: 35 ml/kg/dzie≈Ñ, +500 ml przy sporcie. Poranny ‚Äû≈Çyk startowy‚Äù pomaga.'
  );
}

export function weightSleepImpact(state: AppState) {
  const lang = state.language as 'de'|'en'|'pl';
  return t(lang,
    'Schlaf & Gewicht: Wenig Schlaf st√∂rt Appetit‚ÄëHormone. Ziel: Konsistente Schlafzeiten, Tageslicht am Morgen, abends weniger Screens, Koffein fr√ºher drosseln.',
    'Sleep & weight: Short sleep disrupts appetite hormones. Aim for consistent sleep, morning daylight, fewer screens at night, earlier caffeine cut‚Äëoff.',
    'Sen & waga: Ma≈Ço snu zaburza hormony apetytu. Cel: sta≈Çe pory snu, ≈õwiat≈Ço rano, mniej ekran√≥w wieczorem, ogranicz kofeinƒô wcze≈õniej.'
  );
}

export function answerReminders(state: AppState) {
  const lang = state.language as 'de'|'en'|'pl';
  return t(lang,
    'Erinnerungen: Zeiten im Format HH:MM. Die App normalisiert Eingaben (z. B. 7 30, 0730, 7.30 ‚Üí 07:30). Android‚ÄëKanal: hohe Priorit√§t, Vibration. Plane Uhrzeiten, die zu deiner Routine passen.',
    'Reminders: Use HH:MM. The app normalizes inputs (e.g., 7 30, 0730, 7.30 ‚Üí 07:30). Android channel: high priority, vibration. Choose times that fit your routine.',
    'Przypomnienia: HH:MM. Aplikacja normalizuje wpisy (np. 7 30, 0730, 7.30 ‚Üí 07:30). Kana≈Ç Android: wysoki priorytet, wibracje. Planuj godziny do rutyny.'
  );
}

// Cache previous responses to avoid repetition
const responseCache = new Map<string, { response: string; timestamp: number }>();
const CACHE_DURATION = 30 * 60 * 1000; // 30 minutes

function getCacheKey(state: AppState, q: string): string {
  return `${state.language}_${q.toLowerCase().replace(/\s+/g, '_')}`;
}

function getVariedResponse(responses: string[], cacheKey: string): string {
  const cached = responseCache.get(cacheKey);
  const now = Date.now();
  
  // If cached and still fresh, get next variation
  if (cached && (now - cached.timestamp) < CACHE_DURATION) {
    const currentIndex = responses.indexOf(cached.response);
    const nextIndex = (currentIndex + 1) % responses.length;
    const response = responses[nextIndex];
    responseCache.set(cacheKey, { response, timestamp: now });
    return response;
  }
  
  // Return first response and cache it
  const response = responses[0];
  responseCache.set(cacheKey, { response, timestamp: now });
  return response;
}

export function answerKnowledge(state: AppState, q: string) {
  const s = q.toLowerCase();
  const cacheKey = getCacheKey(state, q);
  
  // Spezifische Zyklus-Fragen with variations
  if (/(fruchtbar|fertile|eisprung|ovul)/i.test(q)) {
    const responses = [
      cycleFertileWindow(state),
      cycleFertileWindow(state) + '\n\nüí° ' + (state.language === 'de' ? 'Tipp: Beobachte auch andere Anzeichen wie K√∂rpertemperatur.' : state.language === 'pl' ? 'Wskaz√≥wka: Obserwuj te≈º inne oznaki jak temperatura cia≈Ça.' : 'Tip: Also watch for other signs like body temperature.')
    ];
    return getVariedResponse(responses, cacheKey);
  }
  
  if (/(schmerz|kramp|cramp|kopfschmerz|√ºbelsch|nausea)/i.test(q)) {
    const responses = [
      cyclePainManagement(state),
      cyclePainManagement(state) + '\n\n' + (state.language === 'de' ? 'üåø Zus√§tzlich k√∂nnen Kr√§utertees (Kamille, Frauenmantel) helfen.' : state.language === 'pl' ? 'üåø Dodatkowo mogƒÖ pom√≥c herbatki zio≈Çowe (rumianek, przywrotnik).' : 'üåø Additionally, herbal teas (chamomile, lady\'s mantle) may help.')
    ];
    return getVariedResponse(responses, cacheKey);
  }
  
  if (/(energie|energy|schlaf|sleep|m√ºde|tired)/i.test(q)) {
    const responses = [
      cycleEnergySleep(state),
      cycleEnergySleep(state) + '\n\n' + (state.language === 'de' ? '‚ö° Auch leichte Bewegung am Morgen kann Energie steigern.' : state.language === 'pl' ? '‚ö° Lekki ruch rano te≈º mo≈ºe zwiƒôkszyƒá energiƒô.' : '‚ö° Light morning movement can also boost energy.')
    ];
    return getVariedResponse(responses, cacheKey);
  }
  
  if (/(pms|periode|period|menstruation|blut)/i.test(q)) {
    const responses = [
      answerCycle(state),
      answerCycle(state) + '\n\n' + (state.language === 'de' ? 'üìä In der App kannst du Symptome verfolgen, um Muster zu erkennen.' : state.language === 'pl' ? 'üìä W aplikacji mo≈ºesz ≈õledziƒá objawy, aby rozpoznaƒá wzorce.' : 'üìä In the app you can track symptoms to recognize patterns.')
    ];
    return getVariedResponse(responses, cacheKey);
  }
  
  // Allgemeine Zyklus-Fragen - nur Basis-Info
  if (/(zyklus|cycle)/i.test(q)) {
    return answerCycle(state);
  }
  
  // Spezifische Gewichts-Fragen with variations
  if (/(plateau|stagnation|stillstand)/i.test(q)) {
    const responses = [
      weightPlateauStrategies(state),
      weightPlateauStrategies(state) + '\n\n' + (state.language === 'de' ? 'üéØ Geduld ist wichtig - Plateaus sind Teil des Prozesses.' : state.language === 'pl' ? 'üéØ Cierpliwo≈õƒá jest wa≈ºna - plateau to czƒô≈õƒá procesu.' : 'üéØ Patience is key - plateaus are part of the process.')
    ];
    return getVariedResponse(responses, cacheKey);
  }
  
  if (/(wasser|hydration|trinken|dehydr)/i.test(q)) {
    const responses = [
      hydrationWeightRelation(state),
      hydrationWeightRelation(state) + '\n\n' + (state.language === 'de' ? 'üíß Versuche, alle 2 Stunden ein Glas zu trinken.' : state.language === 'pl' ? 'üíß Spr√≥buj piƒá szklankƒô co 2 godziny.' : 'üíß Try to drink a glass every 2 hours.')
    ];
    return getVariedResponse(responses, cacheKey);
  }
  
  if (/(abnehmen|lose.*weight|di√§t)/i.test(q)) {
    const responses = [
      [answerWeight(state), weightPlateauStrategies(state)].join('\n\n'),
      [answerWeight(state), hydrationWeightRelation(state)].join('\n\n'),
      [answerWeight(state), weightSleepImpact(state)].join('\n\n')
    ];
    return getVariedResponse(responses, cacheKey);
  }
  
  // Allgemeine Gewichts-Fragen
  if (/(gewicht|weight|waga|masa)/i.test(q)) {
    const responses = [
      answerWeight(state),
      answerWeight(state) + '\n\n' + (state.language === 'de' ? 'üìà Fokussiere dich auf langfristige Trends, nicht t√§gliche Schwankungen.' : state.language === 'pl' ? 'üìà Skup siƒô na d≈Çugoterminowych trendach, nie codziennych wahaniach.' : 'üìà Focus on long-term trends, not daily fluctuations.')
    ];
    return getVariedResponse(responses, cacheKey);
  }
  
  if (/(erinnerung|reminder|benachrichtigung)/i.test(q)) {
    return answerReminders(state);
  }
  
  return '';
}

export function answerTopic(state: AppState, topic: 'cycle'|'weight'|'sleep'|'hydration'|'reminders') {
  if (topic==='cycle') return [answerCycle(state), cycleFertileWindow(state), cyclePainManagement(state), cycleEnergySleep(state)].join('\n');
  if (topic==='weight') return [answerWeight(state), weightPlateauStrategies(state), hydrationWeightRelation(state), weightSleepImpact(state)].join('\n');
  if (topic==='sleep') return weightSleepImpact(state);
  if (topic==='hydration') return hydrationWeightRelation(state);
  return answerReminders(state);
}