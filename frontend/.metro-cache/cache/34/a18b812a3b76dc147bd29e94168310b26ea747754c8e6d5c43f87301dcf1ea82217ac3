{"dependencies":[{"name":"./useEvent","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":197},"end":{"line":8,"column":38,"index":235}}],"key":"agcKO4KjKVVd8qmhkCqgPk8SZT0=","exportNames":["*"]}},{"name":"./useHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":236},"end":{"line":9,"column":42,"index":278}}],"key":"4fwTVy9JjjGj2GzFTCIyp4pa48c=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useAnimatedScrollHandler = useAnimatedScrollHandler;\n  var _useEvent = require(_dependencyMap[0]);\n  var _useHandler2 = require(_dependencyMap[1]);\n  /**\n   * Lets you run callbacks on ScrollView events. Supports `onScroll`,\n   * `onBeginDrag`, `onEndDrag`, `onMomentumBegin`, and `onMomentumEnd` events.\n   *\n   * These callbacks are automatically workletized and ran on the UI thread.\n   *\n   * @param handlers - An object containing event handlers.\n   * @param dependencies - An optional array of dependencies. Only relevant when\n   *   using Reanimated without the Babel plugin on the Web.\n   * @returns An object you need to pass to `onScroll` prop on the\n   *   `Animated.ScrollView` component.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/scroll/useAnimatedScrollHandler\n   */\n  // @ts-expect-error This overload is required by our API.\n  var _worklet_8578554612815_init_data = {\n    code: \"function reactNativeReanimated_useAnimatedScrollHandlerTs1(event){const{scrollHandlers,context}=this.__closure;const{onScroll:onScroll,onBeginDrag:onBeginDrag,onEndDrag:onEndDrag,onMomentumBegin:onMomentumBegin,onMomentumEnd:onMomentumEnd}=scrollHandlers;if(onScroll&&event.eventName.endsWith('onScroll')){onScroll(event,context);}else if(onBeginDrag&&event.eventName.endsWith('onScrollBeginDrag')){onBeginDrag(event,context);}else if(onEndDrag&&event.eventName.endsWith('onScrollEndDrag')){onEndDrag(event,context);}else if(onMomentumBegin&&event.eventName.endsWith('onMomentumScrollBegin')){onMomentumBegin(event,context);}else if(onMomentumEnd&&event.eventName.endsWith('onMomentumScrollEnd')){onMomentumEnd(event,context);}}\"\n  };\n  function useAnimatedScrollHandler(handlers, dependencies) {\n    // case when handlers is a function\n    var scrollHandlers = typeof handlers === 'function' ? {\n      onScroll: handlers\n    } : handlers;\n    var _useHandler = (0, _useHandler2.useHandler)(scrollHandlers, dependencies),\n      context = _useHandler.context,\n      doDependenciesDiffer = _useHandler.doDependenciesDiffer;\n\n    // build event subscription array\n    var subscribeForEvents = ['onScroll'];\n    if (scrollHandlers.onBeginDrag !== undefined) {\n      subscribeForEvents.push('onScrollBeginDrag');\n    }\n    if (scrollHandlers.onEndDrag !== undefined) {\n      subscribeForEvents.push('onScrollEndDrag');\n    }\n    if (scrollHandlers.onMomentumBegin !== undefined) {\n      subscribeForEvents.push('onMomentumScrollBegin');\n    }\n    if (scrollHandlers.onMomentumEnd !== undefined) {\n      subscribeForEvents.push('onMomentumScrollEnd');\n    }\n    return (0, _useEvent.useEvent)(function () {\n      var reactNativeReanimated_useAnimatedScrollHandlerTs1 = function (event) {\n        var onScroll = scrollHandlers.onScroll,\n          onBeginDrag = scrollHandlers.onBeginDrag,\n          onEndDrag = scrollHandlers.onEndDrag,\n          onMomentumBegin = scrollHandlers.onMomentumBegin,\n          onMomentumEnd = scrollHandlers.onMomentumEnd;\n        if (onScroll && event.eventName.endsWith('onScroll')) {\n          onScroll(event, context);\n        } else if (onBeginDrag && event.eventName.endsWith('onScrollBeginDrag')) {\n          onBeginDrag(event, context);\n        } else if (onEndDrag && event.eventName.endsWith('onScrollEndDrag')) {\n          onEndDrag(event, context);\n        } else if (onMomentumBegin && event.eventName.endsWith('onMomentumScrollBegin')) {\n          onMomentumBegin(event, context);\n        } else if (onMomentumEnd && event.eventName.endsWith('onMomentumScrollEnd')) {\n          onMomentumEnd(event, context);\n        }\n      };\n      reactNativeReanimated_useAnimatedScrollHandlerTs1.__closure = {\n        scrollHandlers,\n        context\n      };\n      reactNativeReanimated_useAnimatedScrollHandlerTs1.__workletHash = 8578554612815;\n      reactNativeReanimated_useAnimatedScrollHandlerTs1.__initData = _worklet_8578554612815_init_data;\n      return reactNativeReanimated_useAnimatedScrollHandlerTs1;\n    }(), subscribeForEvents, doDependenciesDiffer\n    // Read https://github.com/software-mansion/react-native-reanimated/pull/5056\n    // for more information about this cast.\n    );\n  }\n});","lineCount":81,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"useAnimatedScrollHandler"],[7,34,1,13],[7,37,1,13,"useAnimatedScrollHandler"],[7,61,1,13],[8,2,8,0],[8,6,8,0,"_useEvent"],[8,15,8,0],[8,18,8,0,"require"],[8,25,8,0],[8,26,8,0,"_dependencyMap"],[8,40,8,0],[9,2,9,0],[9,6,9,0,"_useHandler2"],[9,18,9,0],[9,21,9,0,"require"],[9,28,9,0],[9,29,9,0,"_dependencyMap"],[9,43,9,0],[10,2,28,0],[11,0,29,0],[12,0,30,0],[13,0,31,0],[14,0,32,0],[15,0,33,0],[16,0,34,0],[17,0,35,0],[18,0,36,0],[19,0,37,0],[20,0,38,0],[21,0,39,0],[22,0,40,0],[23,2,41,0],[24,2,41,0],[24,6,41,0,"_worklet_8578554612815_init_data"],[24,38,41,0],[25,4,41,0,"code"],[25,8,41,0],[26,2,41,0],[27,2,49,7],[27,11,49,16,"useAnimatedScrollHandler"],[27,35,49,40,"useAnimatedScrollHandler"],[27,36,52,2,"handlers"],[27,44,52,60],[27,46,53,2,"dependencies"],[27,58,53,31],[27,60,54,2],[28,4,55,2],[29,4,56,2],[29,8,56,8,"scrollHandlers"],[29,22,56,47],[29,25,57,4],[29,32,57,11,"handlers"],[29,40,57,19],[29,45,57,24],[29,55,57,34],[29,58,57,37],[30,6,57,39,"onScroll"],[30,14,57,47],[30,16,57,49,"handlers"],[31,4,57,58],[31,5,57,59],[31,8,57,62,"handlers"],[31,16,57,70],[32,4,58,2],[32,8,58,2,"_useHandler"],[32,19,58,2],[32,22,58,44],[32,26,58,44,"useHandler"],[32,49,58,54],[32,51,61,4,"scrollHandlers"],[32,65,61,18],[32,67,61,62,"dependencies"],[32,79,61,74],[32,80,61,75],[33,6,58,10,"context"],[33,13,58,17],[33,16,58,17,"_useHandler"],[33,27,58,17],[33,28,58,10,"context"],[33,35,58,17],[34,6,58,19,"doDependenciesDiffer"],[34,26,58,39],[34,29,58,39,"_useHandler"],[34,40,58,39],[34,41,58,19,"doDependenciesDiffer"],[34,61,58,39],[36,4,63,2],[37,4,64,2],[37,8,64,8,"subscribeForEvents"],[37,26,64,26],[37,29,64,29],[37,30,64,30],[37,40,64,40],[37,41,64,41],[38,4,65,2],[38,8,65,6,"scrollHandlers"],[38,22,65,20],[38,23,65,21,"onBeginDrag"],[38,34,65,32],[38,39,65,37,"undefined"],[38,48,65,46],[38,50,65,48],[39,6,66,4,"subscribeForEvents"],[39,24,66,22],[39,25,66,23,"push"],[39,29,66,27],[39,30,66,28],[39,49,66,47],[39,50,66,48],[40,4,67,2],[41,4,68,2],[41,8,68,6,"scrollHandlers"],[41,22,68,20],[41,23,68,21,"onEndDrag"],[41,32,68,30],[41,37,68,35,"undefined"],[41,46,68,44],[41,48,68,46],[42,6,69,4,"subscribeForEvents"],[42,24,69,22],[42,25,69,23,"push"],[42,29,69,27],[42,30,69,28],[42,47,69,45],[42,48,69,46],[43,4,70,2],[44,4,71,2],[44,8,71,6,"scrollHandlers"],[44,22,71,20],[44,23,71,21,"onMomentumBegin"],[44,38,71,36],[44,43,71,41,"undefined"],[44,52,71,50],[44,54,71,52],[45,6,72,4,"subscribeForEvents"],[45,24,72,22],[45,25,72,23,"push"],[45,29,72,27],[45,30,72,28],[45,53,72,51],[45,54,72,52],[46,4,73,2],[47,4,74,2],[47,8,74,6,"scrollHandlers"],[47,22,74,20],[47,23,74,21,"onMomentumEnd"],[47,36,74,34],[47,41,74,39,"undefined"],[47,50,74,48],[47,52,74,50],[48,6,75,4,"subscribeForEvents"],[48,24,75,22],[48,25,75,23,"push"],[48,29,75,27],[48,30,75,28],[48,51,75,49],[48,52,75,50],[49,4,76,2],[50,4,78,2],[50,11,78,9],[50,15,78,9,"useEvent"],[50,33,78,17],[50,35,79,4],[51,6,79,4],[51,10,79,4,"reactNativeReanimated_useAnimatedScrollHandlerTs1"],[51,59,79,4],[51,71,79,4,"reactNativeReanimated_useAnimatedScrollHandlerTs1"],[51,72,79,5,"event"],[51,77,79,33],[51,79,79,38],[52,8,81,6],[52,12,82,8,"onScroll"],[52,20,82,16],[52,23,87,10,"scrollHandlers"],[52,37,87,24],[52,38,82,8,"onScroll"],[52,46,82,16],[53,10,83,8,"onBeginDrag"],[53,21,83,19],[53,24,87,10,"scrollHandlers"],[53,38,87,24],[53,39,83,8,"onBeginDrag"],[53,50,83,19],[54,10,84,8,"onEndDrag"],[54,19,84,17],[54,22,87,10,"scrollHandlers"],[54,36,87,24],[54,37,84,8,"onEndDrag"],[54,46,84,17],[55,10,85,8,"onMomentumBegin"],[55,25,85,23],[55,28,87,10,"scrollHandlers"],[55,42,87,24],[55,43,85,8,"onMomentumBegin"],[55,58,85,23],[56,10,86,8,"onMomentumEnd"],[56,23,86,21],[56,26,87,10,"scrollHandlers"],[56,40,87,24],[56,41,86,8,"onMomentumEnd"],[56,54,86,21],[57,8,88,6],[57,12,88,10,"onScroll"],[57,20,88,18],[57,24,88,22,"event"],[57,29,88,27],[57,30,88,28,"eventName"],[57,39,88,37],[57,40,88,38,"endsWith"],[57,48,88,46],[57,49,88,47],[57,59,88,57],[57,60,88,58],[57,62,88,60],[58,10,89,8,"onScroll"],[58,18,89,16],[58,19,89,17,"event"],[58,24,89,22],[58,26,89,24,"context"],[58,33,89,31],[58,34,89,32],[59,8,90,6],[59,9,90,7],[59,15,90,13],[59,19,90,17,"onBeginDrag"],[59,30,90,28],[59,34,90,32,"event"],[59,39,90,37],[59,40,90,38,"eventName"],[59,49,90,47],[59,50,90,48,"endsWith"],[59,58,90,56],[59,59,90,57],[59,78,90,76],[59,79,90,77],[59,81,90,79],[60,10,91,8,"onBeginDrag"],[60,21,91,19],[60,22,91,20,"event"],[60,27,91,25],[60,29,91,27,"context"],[60,36,91,34],[60,37,91,35],[61,8,92,6],[61,9,92,7],[61,15,92,13],[61,19,92,17,"onEndDrag"],[61,28,92,26],[61,32,92,30,"event"],[61,37,92,35],[61,38,92,36,"eventName"],[61,47,92,45],[61,48,92,46,"endsWith"],[61,56,92,54],[61,57,92,55],[61,74,92,72],[61,75,92,73],[61,77,92,75],[62,10,93,8,"onEndDrag"],[62,19,93,17],[62,20,93,18,"event"],[62,25,93,23],[62,27,93,25,"context"],[62,34,93,32],[62,35,93,33],[63,8,94,6],[63,9,94,7],[63,15,94,13],[63,19,95,8,"onMomentumBegin"],[63,34,95,23],[63,38,96,8,"event"],[63,43,96,13],[63,44,96,14,"eventName"],[63,53,96,23],[63,54,96,24,"endsWith"],[63,62,96,32],[63,63,96,33],[63,86,96,56],[63,87,96,57],[63,89,97,8],[64,10,98,8,"onMomentumBegin"],[64,25,98,23],[64,26,98,24,"event"],[64,31,98,29],[64,33,98,31,"context"],[64,40,98,38],[64,41,98,39],[65,8,99,6],[65,9,99,7],[65,15,99,13],[65,19,100,8,"onMomentumEnd"],[65,32,100,21],[65,36,101,8,"event"],[65,41,101,13],[65,42,101,14,"eventName"],[65,51,101,23],[65,52,101,24,"endsWith"],[65,60,101,32],[65,61,101,33],[65,82,101,54],[65,83,101,55],[65,85,102,8],[66,10,103,8,"onMomentumEnd"],[66,23,103,21],[66,24,103,22,"event"],[66,29,103,27],[66,31,103,29,"context"],[66,38,103,36],[66,39,103,37],[67,8,104,6],[68,6,105,4],[68,7,105,5],[69,6,105,5,"reactNativeReanimated_useAnimatedScrollHandlerTs1"],[69,55,105,5],[69,56,105,5,"__closure"],[69,65,105,5],[70,8,105,5,"scrollHandlers"],[70,22,105,5],[71,8,105,5,"context"],[72,6,105,5],[73,6,105,5,"reactNativeReanimated_useAnimatedScrollHandlerTs1"],[73,55,105,5],[73,56,105,5,"__workletHash"],[73,69,105,5],[74,6,105,5,"reactNativeReanimated_useAnimatedScrollHandlerTs1"],[74,55,105,5],[74,56,105,5,"__initData"],[74,66,105,5],[74,69,105,5,"_worklet_8578554612815_init_data"],[74,101,105,5],[75,6,105,5],[75,13,105,5,"reactNativeReanimated_useAnimatedScrollHandlerTs1"],[75,62,105,5],[76,4,105,5],[76,5,79,4],[76,9,106,4,"subscribeForEvents"],[76,27,106,22],[76,29,107,4,"doDependenciesDiffer"],[77,4,108,4],[78,4,109,4],[79,4,110,2],[79,5,110,3],[80,2,111,0],[81,0,111,1],[81,3]],"functionMap":{"names":["<global>","useAnimatedScrollHandler","useEvent$argument_0"],"mappings":"AAA;OCgD;IC8B;KD0B;CDM"}},"type":"js/module"}]}