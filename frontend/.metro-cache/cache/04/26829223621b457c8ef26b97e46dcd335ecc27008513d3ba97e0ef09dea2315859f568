{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.averageStartToStart = averageStartToStart;\n  exports.buildPeriodDaysSet = buildPeriodDaysSet;\n  exports.getAverageCycleLengthDays = getAverageCycleLengthDays;\n  exports.getAveragePeriodLengthDays = getAveragePeriodLengthDays;\n  exports.getFertileWindow = getFertileWindow;\n  exports.getOvulationDate = getOvulationDate;\n  exports.isWithin = isWithin;\n  exports.markersForMonth = markersForMonth;\n  exports.predictNextStart = predictNextStart;\n  exports.toKey = void 0;\n  const toKey = d => `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\n  exports.toKey = toKey;\n  function getAverageCycleLengthDays(cycles) {\n    const starts = cycles.filter(c => c.start).map(c => c.start).sort();\n    if (starts.length < 2) return 28;\n    const diffs = [];\n    for (let i = 1; i < starts.length; i++) {\n      const a = new Date(starts[i - 1]);\n      const b = new Date(starts[i]);\n      const diff = Math.round((+b - +a) / (24 * 60 * 60 * 1000));\n      if (diff > 0) diffs.push(diff);\n    }\n    if (diffs.length === 0) return 28;\n    const last3 = diffs.slice(-3);\n    const avg = Math.round(last3.reduce((a, b) => a + b, 0) / last3.length);\n    return avg || 28;\n  }\n  function getAveragePeriodLengthDays(cycles) {\n    // If ends are recorded, use average (end-start+1), fallback to 5 days\n    const completed = cycles.filter(c => c.start && c.end);\n    if (completed.length === 0) return 5;\n    const lens = completed.map(c => {\n      const s = new Date(c.start);\n      const e = new Date(c.end);\n      return Math.max(1, Math.round((+e - +s) / (24 * 60 * 60 * 1000)) + 1);\n    });\n    const last3 = lens.slice(-3);\n    return Math.max(1, Math.round(last3.reduce((a, b) => a + b, 0) / last3.length));\n  }\n  function averageStartToStart(cycles) {\n    return getAverageCycleLengthDays(cycles);\n  }\n  function predictNextStart(cycles) {\n    const avg = averageStartToStart(cycles);\n    const starts = cycles.map(c => c.start).filter(Boolean).sort();\n    const last = starts.slice(-1)[0];\n    if (!last) return null;\n    const dt = new Date(last);\n    dt.setDate(dt.getDate() + avg);\n    return dt;\n  }\n\n  // Typical model: ovulation occurs ~14 days before next period. Fertile window = ovulation -5 .. ovulation -1\n  function getOvulationDate(cycles) {\n    const next = predictNextStart(cycles);\n    if (!next) return null;\n    const ov = new Date(next);\n    ov.setDate(ov.getDate() - 14);\n    return ov;\n  }\n  function getFertileWindow(cycles) {\n    const ov = getOvulationDate(cycles);\n    if (!ov) return null;\n    const start = new Date(ov);\n    start.setDate(start.getDate() - 5);\n    const end = new Date(ov);\n    end.setDate(end.getDate() - 1);\n    return {\n      start,\n      end\n    };\n  }\n  function isWithin(date, start, end) {\n    const d = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n    const s = new Date(start.getFullYear(), start.getMonth(), start.getDate());\n    const e = new Date(end.getFullYear(), end.getMonth(), end.getDate());\n    return +d >= +s && +d <= +e;\n  }\n  function buildPeriodDaysSet(cycles, periodLength = 5) {\n    const set = new Set();\n    for (const c of cycles) {\n      const start = new Date(c.start);\n      const len = Math.max(1, periodLength);\n      const end = new Date(start);\n      end.setDate(start.getDate() + len - 1);\n      let cur = new Date(start);\n      while (+cur <= +end) {\n        set.add(toKey(cur));\n        cur.setDate(cur.getDate() + 1);\n      }\n    }\n    return set;\n  }\n  function markersForMonth(year, month, cycles) {\n    const today = new Date();\n    const avgCycleLen = averageStartToStart(cycles);\n    const avgPeriodLen = getAveragePeriodLengthDays(cycles);\n    const expectedNext = predictNextStart(cycles);\n    const fertile = getFertileWindow(cycles);\n    const ovulation = getOvulationDate(cycles);\n    const days = [];\n    const d = new Date(year, month, 1);\n    while (d.getMonth() === month) {\n      days.push(new Date(d));\n      d.setDate(d.getDate() + 1);\n    }\n\n    // Past/confirmed period days: from each cycle start up to today (clamped by period length)\n    const confirmed = new Set();\n    const upcoming = new Set();\n    for (const c of cycles) {\n      const s = new Date(c.start);\n      const end = c.end ? new Date(c.end) : (() => {\n        const tmp = new Date(s);\n        tmp.setDate(tmp.getDate() + avgPeriodLen - 1);\n        return tmp;\n      })();\n      let cur = new Date(s);\n      while (+cur <= +end) {\n        const key = toKey(cur);\n        if (+cur <= +today) confirmed.add(key);else upcoming.add(key);\n        cur.setDate(cur.getDate() + 1);\n      }\n    }\n    const period = new Set(days.filter(dd => confirmed.has(toKey(dd))).map(toKey));\n    const upcomingPeriod = new Set(days.filter(dd => upcoming.has(toKey(dd))).map(toKey));\n    const fertileSet = new Set(days.filter(dd => fertile && isWithin(dd, fertile.start, fertile.end)).map(toKey));\n    const ovulationSet = new Set(days.filter(dd => ovulation && toKey(dd) === toKey(ovulation)).map(toKey));\n    const expectedSet = new Set(days.filter(dd => expectedNext && toKey(dd) === toKey(expectedNext)).map(toKey));\n    return {\n      period,\n      upcomingPeriod,\n      fertile: fertileSet,\n      ovulation: ovulationSet,\n      expected: expectedSet,\n      avgCycleLen,\n      avgPeriodLen,\n      expectedNext\n    };\n  }\n});","lineCount":145,"map":[[15,2,3,7],[15,8,3,13,"toKey"],[15,13,3,18],[15,16,3,22,"d"],[15,17,3,29],[15,21,3,34],[15,24,3,37,"d"],[15,25,3,38],[15,26,3,39,"getFullYear"],[15,37,3,50],[15,38,3,51],[15,39,3,52],[15,43,3,56,"String"],[15,49,3,62],[15,50,3,63,"d"],[15,51,3,64],[15,52,3,65,"getMonth"],[15,60,3,73],[15,61,3,74],[15,62,3,75],[15,65,3,76],[15,66,3,77],[15,67,3,78],[15,68,3,79,"padStart"],[15,76,3,87],[15,77,3,88],[15,78,3,89],[15,80,3,90],[15,83,3,93],[15,84,3,94],[15,88,3,98,"String"],[15,94,3,104],[15,95,3,105,"d"],[15,96,3,106],[15,97,3,107,"getDate"],[15,104,3,114],[15,105,3,115],[15,106,3,116],[15,107,3,117],[15,108,3,118,"padStart"],[15,116,3,126],[15,117,3,127],[15,118,3,128],[15,120,3,129],[15,123,3,132],[15,124,3,133],[15,126,3,135],[16,2,3,136,"exports"],[16,9,3,136],[16,10,3,136,"toKey"],[16,15,3,136],[16,18,3,136,"toKey"],[16,23,3,136],[17,2,5,7],[17,11,5,16,"getAverageCycleLengthDays"],[17,36,5,41,"getAverageCycleLengthDays"],[17,37,5,42,"cycles"],[17,43,5,57],[17,45,5,67],[18,4,6,2],[18,10,6,8,"starts"],[18,16,6,14],[18,19,6,17,"cycles"],[18,25,6,23],[18,26,6,24,"filter"],[18,32,6,30],[18,33,6,31,"c"],[18,34,6,32],[18,38,6,36,"c"],[18,39,6,37],[18,40,6,38,"start"],[18,45,6,43],[18,46,6,44],[18,47,6,45,"map"],[18,50,6,48],[18,51,6,49,"c"],[18,52,6,50],[18,56,6,54,"c"],[18,57,6,55],[18,58,6,56,"start"],[18,63,6,61],[18,64,6,62],[18,65,6,63,"sort"],[18,69,6,67],[18,70,6,68],[18,71,6,69],[19,4,7,2],[19,8,7,6,"starts"],[19,14,7,12],[19,15,7,13,"length"],[19,21,7,19],[19,24,7,22],[19,25,7,23],[19,27,7,25],[19,34,7,32],[19,36,7,34],[20,4,8,2],[20,10,8,8,"diffs"],[20,15,8,23],[20,18,8,26],[20,20,8,28],[21,4,9,2],[21,9,9,7],[21,13,9,11,"i"],[21,14,9,12],[21,17,9,15],[21,18,9,16],[21,20,9,18,"i"],[21,21,9,19],[21,24,9,22,"starts"],[21,30,9,28],[21,31,9,29,"length"],[21,37,9,35],[21,39,9,37,"i"],[21,40,9,38],[21,42,9,40],[21,44,9,42],[22,6,10,4],[22,12,10,10,"a"],[22,13,10,11],[22,16,10,14],[22,20,10,18,"Date"],[22,24,10,22],[22,25,10,23,"starts"],[22,31,10,29],[22,32,10,30,"i"],[22,33,10,31],[22,36,10,32],[22,37,10,33],[22,38,10,34],[22,39,10,35],[23,6,10,37],[23,12,10,43,"b"],[23,13,10,44],[23,16,10,47],[23,20,10,51,"Date"],[23,24,10,55],[23,25,10,56,"starts"],[23,31,10,62],[23,32,10,63,"i"],[23,33,10,64],[23,34,10,65],[23,35,10,66],[24,6,11,4],[24,12,11,10,"diff"],[24,16,11,14],[24,19,11,17,"Math"],[24,23,11,21],[24,24,11,22,"round"],[24,29,11,27],[24,30,11,28],[24,31,11,29],[24,32,11,30,"b"],[24,33,11,31],[24,36,11,34],[24,37,11,35,"a"],[24,38,11,36],[24,43,11,39],[24,45,11,41],[24,48,11,42],[24,50,11,44],[24,53,11,45],[24,55,11,47],[24,58,11,48],[24,62,11,52],[24,63,11,53],[24,64,11,54],[25,6,12,4],[25,10,12,8,"diff"],[25,14,12,12],[25,17,12,15],[25,18,12,16],[25,20,12,18,"diffs"],[25,25,12,23],[25,26,12,24,"push"],[25,30,12,28],[25,31,12,29,"diff"],[25,35,12,33],[25,36,12,34],[26,4,13,2],[27,4,14,2],[27,8,14,6,"diffs"],[27,13,14,11],[27,14,14,12,"length"],[27,20,14,18],[27,25,14,23],[27,26,14,24],[27,28,14,26],[27,35,14,33],[27,37,14,35],[28,4,15,2],[28,10,15,8,"last3"],[28,15,15,13],[28,18,15,16,"diffs"],[28,23,15,21],[28,24,15,22,"slice"],[28,29,15,27],[28,30,15,28],[28,31,15,29],[28,32,15,30],[28,33,15,31],[29,4,16,2],[29,10,16,8,"avg"],[29,13,16,11],[29,16,16,14,"Math"],[29,20,16,18],[29,21,16,19,"round"],[29,26,16,24],[29,27,16,25,"last3"],[29,32,16,30],[29,33,16,31,"reduce"],[29,39,16,37],[29,40,16,38],[29,41,16,39,"a"],[29,42,16,40],[29,44,16,41,"b"],[29,45,16,42],[29,50,16,45,"a"],[29,51,16,46],[29,54,16,47,"b"],[29,55,16,48],[29,57,16,49],[29,58,16,50],[29,59,16,51],[29,62,16,52,"last3"],[29,67,16,57],[29,68,16,58,"length"],[29,74,16,64],[29,75,16,65],[30,4,17,2],[30,11,17,9,"avg"],[30,14,17,12],[30,18,17,16],[30,20,17,18],[31,2,18,0],[32,2,20,7],[32,11,20,16,"getAveragePeriodLengthDays"],[32,37,20,42,"getAveragePeriodLengthDays"],[32,38,20,43,"cycles"],[32,44,20,58],[32,46,20,68],[33,4,21,2],[34,4,22,2],[34,10,22,8,"completed"],[34,19,22,17],[34,22,22,20,"cycles"],[34,28,22,26],[34,29,22,27,"filter"],[34,35,22,33],[34,36,22,34,"c"],[34,37,22,35],[34,41,22,39,"c"],[34,42,22,40],[34,43,22,41,"start"],[34,48,22,46],[34,52,22,50,"c"],[34,53,22,51],[34,54,22,52,"end"],[34,57,22,55],[34,58,22,56],[35,4,23,2],[35,8,23,6,"completed"],[35,17,23,15],[35,18,23,16,"length"],[35,24,23,22],[35,29,23,27],[35,30,23,28],[35,32,23,30],[35,39,23,37],[35,40,23,38],[36,4,24,2],[36,10,24,8,"lens"],[36,14,24,12],[36,17,24,15,"completed"],[36,26,24,24],[36,27,24,25,"map"],[36,30,24,28],[36,31,24,29,"c"],[36,32,24,30],[36,36,24,34],[37,6,25,4],[37,12,25,10,"s"],[37,13,25,11],[37,16,25,14],[37,20,25,18,"Date"],[37,24,25,22],[37,25,25,23,"c"],[37,26,25,24],[37,27,25,25,"start"],[37,32,25,30],[37,33,25,31],[38,6,25,33],[38,12,25,39,"e"],[38,13,25,40],[38,16,25,43],[38,20,25,47,"Date"],[38,24,25,51],[38,25,25,52,"c"],[38,26,25,53],[38,27,25,54,"end"],[38,30,25,67],[38,31,25,68],[39,6,26,4],[39,13,26,11,"Math"],[39,17,26,15],[39,18,26,16,"max"],[39,21,26,19],[39,22,26,20],[39,23,26,21],[39,25,26,23,"Math"],[39,29,26,27],[39,30,26,28,"round"],[39,35,26,33],[39,36,26,34],[39,37,26,35],[39,38,26,36,"e"],[39,39,26,37],[39,42,26,40],[39,43,26,41,"s"],[39,44,26,42],[39,49,26,45],[39,51,26,47],[39,54,26,48],[39,56,26,50],[39,59,26,51],[39,61,26,53],[39,64,26,54],[39,68,26,58],[39,69,26,59],[39,70,26,60],[39,73,26,63],[39,74,26,64],[39,75,26,65],[40,4,27,2],[40,5,27,3],[40,6,27,4],[41,4,28,2],[41,10,28,8,"last3"],[41,15,28,13],[41,18,28,16,"lens"],[41,22,28,20],[41,23,28,21,"slice"],[41,28,28,26],[41,29,28,27],[41,30,28,28],[41,31,28,29],[41,32,28,30],[42,4,29,2],[42,11,29,9,"Math"],[42,15,29,13],[42,16,29,14,"max"],[42,19,29,17],[42,20,29,18],[42,21,29,19],[42,23,29,21,"Math"],[42,27,29,25],[42,28,29,26,"round"],[42,33,29,31],[42,34,29,32,"last3"],[42,39,29,37],[42,40,29,38,"reduce"],[42,46,29,44],[42,47,29,45],[42,48,29,46,"a"],[42,49,29,47],[42,51,29,48,"b"],[42,52,29,49],[42,57,29,52,"a"],[42,58,29,53],[42,61,29,54,"b"],[42,62,29,55],[42,64,29,56],[42,65,29,57],[42,66,29,58],[42,69,29,59,"last3"],[42,74,29,64],[42,75,29,65,"length"],[42,81,29,71],[42,82,29,72],[42,83,29,73],[43,2,30,0],[44,2,32,7],[44,11,32,16,"averageStartToStart"],[44,30,32,35,"averageStartToStart"],[44,31,32,36,"cycles"],[44,37,32,51],[44,39,32,61],[45,4,33,2],[45,11,33,9,"getAverageCycleLengthDays"],[45,36,33,34],[45,37,33,35,"cycles"],[45,43,33,41],[45,44,33,42],[46,2,34,0],[47,2,36,7],[47,11,36,16,"predictNextStart"],[47,27,36,32,"predictNextStart"],[47,28,36,33,"cycles"],[47,34,36,48],[47,36,36,63],[48,4,37,2],[48,10,37,8,"avg"],[48,13,37,11],[48,16,37,14,"averageStartToStart"],[48,35,37,33],[48,36,37,34,"cycles"],[48,42,37,40],[48,43,37,41],[49,4,38,2],[49,10,38,8,"starts"],[49,16,38,14],[49,19,38,17,"cycles"],[49,25,38,23],[49,26,38,24,"map"],[49,29,38,27],[49,30,38,28,"c"],[49,31,38,29],[49,35,38,33,"c"],[49,36,38,34],[49,37,38,35,"start"],[49,42,38,40],[49,43,38,41],[49,44,38,42,"filter"],[49,50,38,48],[49,51,38,49,"Boolean"],[49,58,38,56],[49,59,38,57],[49,60,38,58,"sort"],[49,64,38,62],[49,65,38,63],[49,66,38,64],[50,4,39,2],[50,10,39,8,"last"],[50,14,39,12],[50,17,39,15,"starts"],[50,23,39,21],[50,24,39,22,"slice"],[50,29,39,27],[50,30,39,28],[50,31,39,29],[50,32,39,30],[50,33,39,31],[50,34,39,32],[50,35,39,33],[50,36,39,34],[51,4,40,2],[51,8,40,6],[51,9,40,7,"last"],[51,13,40,11],[51,15,40,13],[51,22,40,20],[51,26,40,24],[52,4,41,2],[52,10,41,8,"dt"],[52,12,41,10],[52,15,41,13],[52,19,41,17,"Date"],[52,23,41,21],[52,24,41,22,"last"],[52,28,41,26],[52,29,41,27],[53,4,42,2,"dt"],[53,6,42,4],[53,7,42,5,"setDate"],[53,14,42,12],[53,15,42,13,"dt"],[53,17,42,15],[53,18,42,16,"getDate"],[53,25,42,23],[53,26,42,24],[53,27,42,25],[53,30,42,28,"avg"],[53,33,42,31],[53,34,42,32],[54,4,43,2],[54,11,43,9,"dt"],[54,13,43,11],[55,2,44,0],[57,2,46,0],[58,2,47,7],[58,11,47,16,"getOvulationDate"],[58,27,47,32,"getOvulationDate"],[58,28,47,33,"cycles"],[58,34,47,48],[58,36,47,63],[59,4,48,2],[59,10,48,8,"next"],[59,14,48,12],[59,17,48,15,"predictNextStart"],[59,33,48,31],[59,34,48,32,"cycles"],[59,40,48,38],[59,41,48,39],[60,4,49,2],[60,8,49,6],[60,9,49,7,"next"],[60,13,49,11],[60,15,49,13],[60,22,49,20],[60,26,49,24],[61,4,50,2],[61,10,50,8,"ov"],[61,12,50,10],[61,15,50,13],[61,19,50,17,"Date"],[61,23,50,21],[61,24,50,22,"next"],[61,28,50,26],[61,29,50,27],[62,4,51,2,"ov"],[62,6,51,4],[62,7,51,5,"setDate"],[62,14,51,12],[62,15,51,13,"ov"],[62,17,51,15],[62,18,51,16,"getDate"],[62,25,51,23],[62,26,51,24],[62,27,51,25],[62,30,51,28],[62,32,51,30],[62,33,51,31],[63,4,52,2],[63,11,52,9,"ov"],[63,13,52,11],[64,2,53,0],[65,2,55,7],[65,11,55,16,"getFertileWindow"],[65,27,55,32,"getFertileWindow"],[65,28,55,33,"cycles"],[65,34,55,48],[65,36,55,85],[66,4,56,2],[66,10,56,8,"ov"],[66,12,56,10],[66,15,56,13,"getOvulationDate"],[66,31,56,29],[66,32,56,30,"cycles"],[66,38,56,36],[66,39,56,37],[67,4,57,2],[67,8,57,6],[67,9,57,7,"ov"],[67,11,57,9],[67,13,57,11],[67,20,57,18],[67,24,57,22],[68,4,58,2],[68,10,58,8,"start"],[68,15,58,13],[68,18,58,16],[68,22,58,20,"Date"],[68,26,58,24],[68,27,58,25,"ov"],[68,29,58,27],[68,30,58,28],[69,4,59,2,"start"],[69,9,59,7],[69,10,59,8,"setDate"],[69,17,59,15],[69,18,59,16,"start"],[69,23,59,21],[69,24,59,22,"getDate"],[69,31,59,29],[69,32,59,30],[69,33,59,31],[69,36,59,34],[69,37,59,35],[69,38,59,36],[70,4,60,2],[70,10,60,8,"end"],[70,13,60,11],[70,16,60,14],[70,20,60,18,"Date"],[70,24,60,22],[70,25,60,23,"ov"],[70,27,60,25],[70,28,60,26],[71,4,61,2,"end"],[71,7,61,5],[71,8,61,6,"setDate"],[71,15,61,13],[71,16,61,14,"end"],[71,19,61,17],[71,20,61,18,"getDate"],[71,27,61,25],[71,28,61,26],[71,29,61,27],[71,32,61,30],[71,33,61,31],[71,34,61,32],[72,4,62,2],[72,11,62,9],[73,6,62,11,"start"],[73,11,62,16],[74,6,62,18,"end"],[75,4,62,22],[75,5,62,23],[76,2,63,0],[77,2,65,7],[77,11,65,16,"isWithin"],[77,19,65,24,"isWithin"],[77,20,65,25,"date"],[77,24,65,35],[77,26,65,37,"start"],[77,31,65,48],[77,33,65,50,"end"],[77,36,65,59],[77,38,65,61],[78,4,66,2],[78,10,66,8,"d"],[78,11,66,9],[78,14,66,12],[78,18,66,16,"Date"],[78,22,66,20],[78,23,66,21,"date"],[78,27,66,25],[78,28,66,26,"getFullYear"],[78,39,66,37],[78,40,66,38],[78,41,66,39],[78,43,66,41,"date"],[78,47,66,45],[78,48,66,46,"getMonth"],[78,56,66,54],[78,57,66,55],[78,58,66,56],[78,60,66,58,"date"],[78,64,66,62],[78,65,66,63,"getDate"],[78,72,66,70],[78,73,66,71],[78,74,66,72],[78,75,66,73],[79,4,67,2],[79,10,67,8,"s"],[79,11,67,9],[79,14,67,12],[79,18,67,16,"Date"],[79,22,67,20],[79,23,67,21,"start"],[79,28,67,26],[79,29,67,27,"getFullYear"],[79,40,67,38],[79,41,67,39],[79,42,67,40],[79,44,67,42,"start"],[79,49,67,47],[79,50,67,48,"getMonth"],[79,58,67,56],[79,59,67,57],[79,60,67,58],[79,62,67,60,"start"],[79,67,67,65],[79,68,67,66,"getDate"],[79,75,67,73],[79,76,67,74],[79,77,67,75],[79,78,67,76],[80,4,68,2],[80,10,68,8,"e"],[80,11,68,9],[80,14,68,12],[80,18,68,16,"Date"],[80,22,68,20],[80,23,68,21,"end"],[80,26,68,24],[80,27,68,25,"getFullYear"],[80,38,68,36],[80,39,68,37],[80,40,68,38],[80,42,68,40,"end"],[80,45,68,43],[80,46,68,44,"getMonth"],[80,54,68,52],[80,55,68,53],[80,56,68,54],[80,58,68,56,"end"],[80,61,68,59],[80,62,68,60,"getDate"],[80,69,68,67],[80,70,68,68],[80,71,68,69],[80,72,68,70],[81,4,69,2],[81,11,69,9],[81,12,69,10,"d"],[81,13,69,11],[81,17,69,15],[81,18,69,16,"s"],[81,19,69,17],[81,23,69,21],[81,24,69,22,"d"],[81,25,69,23],[81,29,69,27],[81,30,69,28,"e"],[81,31,69,29],[82,2,70,0],[83,2,72,7],[83,11,72,16,"buildPeriodDaysSet"],[83,29,72,34,"buildPeriodDaysSet"],[83,30,72,35,"cycles"],[83,36,72,50],[83,38,72,52,"periodLength"],[83,50,72,64],[83,53,72,67],[83,54,72,68],[83,56,72,83],[84,4,73,2],[84,10,73,8,"set"],[84,13,73,11],[84,16,73,14],[84,20,73,18,"Set"],[84,23,73,21],[84,24,73,30],[84,25,73,31],[85,4,74,2],[85,9,74,7],[85,15,74,13,"c"],[85,16,74,14],[85,20,74,18,"cycles"],[85,26,74,24],[85,28,74,26],[86,6,75,4],[86,12,75,10,"start"],[86,17,75,15],[86,20,75,18],[86,24,75,22,"Date"],[86,28,75,26],[86,29,75,27,"c"],[86,30,75,28],[86,31,75,29,"start"],[86,36,75,34],[86,37,75,35],[87,6,76,4],[87,12,76,10,"len"],[87,15,76,13],[87,18,76,16,"Math"],[87,22,76,20],[87,23,76,21,"max"],[87,26,76,24],[87,27,76,25],[87,28,76,26],[87,30,76,28,"periodLength"],[87,42,76,40],[87,43,76,41],[88,6,77,4],[88,12,77,10,"end"],[88,15,77,13],[88,18,77,16],[88,22,77,20,"Date"],[88,26,77,24],[88,27,77,25,"start"],[88,32,77,30],[88,33,77,31],[89,6,78,4,"end"],[89,9,78,7],[89,10,78,8,"setDate"],[89,17,78,15],[89,18,78,16,"start"],[89,23,78,21],[89,24,78,22,"getDate"],[89,31,78,29],[89,32,78,30],[89,33,78,31],[89,36,78,34,"len"],[89,39,78,37],[89,42,78,40],[89,43,78,41],[89,44,78,42],[90,6,79,4],[90,10,79,8,"cur"],[90,13,79,11],[90,16,79,14],[90,20,79,18,"Date"],[90,24,79,22],[90,25,79,23,"start"],[90,30,79,28],[90,31,79,29],[91,6,80,4],[91,13,80,11],[91,14,80,12,"cur"],[91,17,80,15],[91,21,80,19],[91,22,80,20,"end"],[91,25,80,23],[91,27,80,25],[92,8,80,27,"set"],[92,11,80,30],[92,12,80,31,"add"],[92,15,80,34],[92,16,80,35,"toKey"],[92,21,80,40],[92,22,80,41,"cur"],[92,25,80,44],[92,26,80,45],[92,27,80,46],[93,8,80,48,"cur"],[93,11,80,51],[93,12,80,52,"setDate"],[93,19,80,59],[93,20,80,60,"cur"],[93,23,80,63],[93,24,80,64,"getDate"],[93,31,80,71],[93,32,80,72],[93,33,80,73],[93,36,80,74],[93,37,80,75],[93,38,80,76],[94,6,80,78],[95,4,81,2],[96,4,82,2],[96,11,82,9,"set"],[96,14,82,12],[97,2,83,0],[98,2,85,7],[98,11,85,16,"markersForMonth"],[98,26,85,31,"markersForMonth"],[98,27,85,32,"year"],[98,31,85,44],[98,33,85,46,"month"],[98,38,85,59],[98,40,85,61,"cycles"],[98,46,85,76],[98,48,85,78],[99,4,86,2],[99,10,86,8,"today"],[99,15,86,13],[99,18,86,16],[99,22,86,20,"Date"],[99,26,86,24],[99,27,86,25],[99,28,86,26],[100,4,87,2],[100,10,87,8,"avgCycleLen"],[100,21,87,19],[100,24,87,22,"averageStartToStart"],[100,43,87,41],[100,44,87,42,"cycles"],[100,50,87,48],[100,51,87,49],[101,4,88,2],[101,10,88,8,"avgPeriodLen"],[101,22,88,20],[101,25,88,23,"getAveragePeriodLengthDays"],[101,51,88,49],[101,52,88,50,"cycles"],[101,58,88,56],[101,59,88,57],[102,4,89,2],[102,10,89,8,"expectedNext"],[102,22,89,20],[102,25,89,23,"predictNextStart"],[102,41,89,39],[102,42,89,40,"cycles"],[102,48,89,46],[102,49,89,47],[103,4,90,2],[103,10,90,8,"fertile"],[103,17,90,15],[103,20,90,18,"getFertileWindow"],[103,36,90,34],[103,37,90,35,"cycles"],[103,43,90,41],[103,44,90,42],[104,4,91,2],[104,10,91,8,"ovulation"],[104,19,91,17],[104,22,91,20,"getOvulationDate"],[104,38,91,36],[104,39,91,37,"cycles"],[104,45,91,43],[104,46,91,44],[105,4,93,2],[105,10,93,8,"days"],[105,14,93,20],[105,17,93,23],[105,19,93,25],[106,4,94,2],[106,10,94,8,"d"],[106,11,94,9],[106,14,94,12],[106,18,94,16,"Date"],[106,22,94,20],[106,23,94,21,"year"],[106,27,94,25],[106,29,94,27,"month"],[106,34,94,32],[106,36,94,34],[106,37,94,35],[106,38,94,36],[107,4,95,2],[107,11,95,9,"d"],[107,12,95,10],[107,13,95,11,"getMonth"],[107,21,95,19],[107,22,95,20],[107,23,95,21],[107,28,95,26,"month"],[107,33,95,31],[107,35,95,33],[108,6,95,35,"days"],[108,10,95,39],[108,11,95,40,"push"],[108,15,95,44],[108,16,95,45],[108,20,95,49,"Date"],[108,24,95,53],[108,25,95,54,"d"],[108,26,95,55],[108,27,95,56],[108,28,95,57],[109,6,95,59,"d"],[109,7,95,60],[109,8,95,61,"setDate"],[109,15,95,68],[109,16,95,69,"d"],[109,17,95,70],[109,18,95,71,"getDate"],[109,25,95,78],[109,26,95,79],[109,27,95,80],[109,30,95,81],[109,31,95,82],[109,32,95,83],[110,4,95,85],[112,4,97,2],[113,4,98,2],[113,10,98,8,"confirmed"],[113,19,98,17],[113,22,98,20],[113,26,98,24,"Set"],[113,29,98,27],[113,30,98,36],[113,31,98,37],[114,4,99,2],[114,10,99,8,"upcoming"],[114,18,99,16],[114,21,99,19],[114,25,99,23,"Set"],[114,28,99,26],[114,29,99,35],[114,30,99,36],[115,4,101,2],[115,9,101,7],[115,15,101,13,"c"],[115,16,101,14],[115,20,101,18,"cycles"],[115,26,101,24],[115,28,101,26],[116,6,102,4],[116,12,102,10,"s"],[116,13,102,11],[116,16,102,14],[116,20,102,18,"Date"],[116,24,102,22],[116,25,102,23,"c"],[116,26,102,24],[116,27,102,25,"start"],[116,32,102,30],[116,33,102,31],[117,6,103,4],[117,12,103,10,"end"],[117,15,103,13],[117,18,103,16,"c"],[117,19,103,17],[117,20,103,18,"end"],[117,23,103,21],[117,26,103,24],[117,30,103,28,"Date"],[117,34,103,32],[117,35,103,33,"c"],[117,36,103,34],[117,37,103,35,"end"],[117,40,103,38],[117,41,103,39],[117,44,103,42],[117,45,103,43],[117,51,103,49],[118,8,103,51],[118,14,103,57,"tmp"],[118,17,103,60],[118,20,103,63],[118,24,103,67,"Date"],[118,28,103,71],[118,29,103,72,"s"],[118,30,103,73],[118,31,103,74],[119,8,103,76,"tmp"],[119,11,103,79],[119,12,103,80,"setDate"],[119,19,103,87],[119,20,103,88,"tmp"],[119,23,103,91],[119,24,103,92,"getDate"],[119,31,103,99],[119,32,103,100],[119,33,103,101],[119,36,103,104,"avgPeriodLen"],[119,48,103,116],[119,51,103,119],[119,52,103,120],[119,53,103,121],[120,8,103,123],[120,15,103,130,"tmp"],[120,18,103,133],[121,6,103,135],[121,7,103,136],[121,9,103,138],[121,10,103,139],[122,6,104,4],[122,10,104,8,"cur"],[122,13,104,11],[122,16,104,14],[122,20,104,18,"Date"],[122,24,104,22],[122,25,104,23,"s"],[122,26,104,24],[122,27,104,25],[123,6,105,4],[123,13,105,11],[123,14,105,12,"cur"],[123,17,105,15],[123,21,105,19],[123,22,105,20,"end"],[123,25,105,23],[123,27,105,25],[124,8,106,6],[124,14,106,12,"key"],[124,17,106,15],[124,20,106,18,"toKey"],[124,25,106,23],[124,26,106,24,"cur"],[124,29,106,27],[124,30,106,28],[125,8,107,6],[125,12,107,10],[125,13,107,11,"cur"],[125,16,107,14],[125,20,107,18],[125,21,107,19,"today"],[125,26,107,24],[125,28,107,26,"confirmed"],[125,37,107,35],[125,38,107,36,"add"],[125,41,107,39],[125,42,107,40,"key"],[125,45,107,43],[125,46,107,44],[125,47,107,45],[125,52,107,51,"upcoming"],[125,60,107,59],[125,61,107,60,"add"],[125,64,107,63],[125,65,107,64,"key"],[125,68,107,67],[125,69,107,68],[126,8,108,6,"cur"],[126,11,108,9],[126,12,108,10,"setDate"],[126,19,108,17],[126,20,108,18,"cur"],[126,23,108,21],[126,24,108,22,"getDate"],[126,31,108,29],[126,32,108,30],[126,33,108,31],[126,36,108,32],[126,37,108,33],[126,38,108,34],[127,6,109,4],[128,4,110,2],[129,4,112,2],[129,10,112,8,"period"],[129,16,112,14],[129,19,112,17],[129,23,112,21,"Set"],[129,26,112,24],[129,27,112,25,"days"],[129,31,112,29],[129,32,112,30,"filter"],[129,38,112,36],[129,39,112,37,"dd"],[129,41,112,39],[129,45,112,43,"confirmed"],[129,54,112,52],[129,55,112,53,"has"],[129,58,112,56],[129,59,112,57,"toKey"],[129,64,112,62],[129,65,112,63,"dd"],[129,67,112,65],[129,68,112,66],[129,69,112,67],[129,70,112,68],[129,71,112,69,"map"],[129,74,112,72],[129,75,112,73,"toKey"],[129,80,112,78],[129,81,112,79],[129,82,112,80],[130,4,113,2],[130,10,113,8,"upcomingPeriod"],[130,24,113,22],[130,27,113,25],[130,31,113,29,"Set"],[130,34,113,32],[130,35,113,33,"days"],[130,39,113,37],[130,40,113,38,"filter"],[130,46,113,44],[130,47,113,45,"dd"],[130,49,113,47],[130,53,113,51,"upcoming"],[130,61,113,59],[130,62,113,60,"has"],[130,65,113,63],[130,66,113,64,"toKey"],[130,71,113,69],[130,72,113,70,"dd"],[130,74,113,72],[130,75,113,73],[130,76,113,74],[130,77,113,75],[130,78,113,76,"map"],[130,81,113,79],[130,82,113,80,"toKey"],[130,87,113,85],[130,88,113,86],[130,89,113,87],[131,4,114,2],[131,10,114,8,"fertileSet"],[131,20,114,18],[131,23,114,21],[131,27,114,25,"Set"],[131,30,114,28],[131,31,114,29,"days"],[131,35,114,33],[131,36,114,34,"filter"],[131,42,114,40],[131,43,114,41,"dd"],[131,45,114,43],[131,49,114,47,"fertile"],[131,56,114,54],[131,60,114,58,"isWithin"],[131,68,114,66],[131,69,114,67,"dd"],[131,71,114,69],[131,73,114,71,"fertile"],[131,80,114,78],[131,81,114,79,"start"],[131,86,114,84],[131,88,114,86,"fertile"],[131,95,114,93],[131,96,114,94,"end"],[131,99,114,97],[131,100,114,98],[131,101,114,99],[131,102,114,100,"map"],[131,105,114,103],[131,106,114,104,"toKey"],[131,111,114,109],[131,112,114,110],[131,113,114,111],[132,4,115,2],[132,10,115,8,"ovulationSet"],[132,22,115,20],[132,25,115,23],[132,29,115,27,"Set"],[132,32,115,30],[132,33,115,31,"days"],[132,37,115,35],[132,38,115,36,"filter"],[132,44,115,42],[132,45,115,43,"dd"],[132,47,115,45],[132,51,115,49,"ovulation"],[132,60,115,58],[132,64,115,62,"toKey"],[132,69,115,67],[132,70,115,68,"dd"],[132,72,115,70],[132,73,115,71],[132,78,115,76,"toKey"],[132,83,115,81],[132,84,115,82,"ovulation"],[132,93,115,91],[132,94,115,92],[132,95,115,93],[132,96,115,94,"map"],[132,99,115,97],[132,100,115,98,"toKey"],[132,105,115,103],[132,106,115,104],[132,107,115,105],[133,4,116,2],[133,10,116,8,"expectedSet"],[133,21,116,19],[133,24,116,22],[133,28,116,26,"Set"],[133,31,116,29],[133,32,116,30,"days"],[133,36,116,34],[133,37,116,35,"filter"],[133,43,116,41],[133,44,116,42,"dd"],[133,46,116,44],[133,50,116,48,"expectedNext"],[133,62,116,60],[133,66,116,64,"toKey"],[133,71,116,69],[133,72,116,70,"dd"],[133,74,116,72],[133,75,116,73],[133,80,116,78,"toKey"],[133,85,116,83],[133,86,116,84,"expectedNext"],[133,98,116,96],[133,99,116,97],[133,100,116,98],[133,101,116,99,"map"],[133,104,116,102],[133,105,116,103,"toKey"],[133,110,116,108],[133,111,116,109],[133,112,116,110],[134,4,118,2],[134,11,118,9],[135,6,118,11,"period"],[135,12,118,17],[136,6,118,19,"upcomingPeriod"],[136,20,118,33],[137,6,118,35,"fertile"],[137,13,118,42],[137,15,118,44,"fertileSet"],[137,25,118,54],[138,6,118,56,"ovulation"],[138,15,118,65],[138,17,118,67,"ovulationSet"],[138,29,118,79],[139,6,118,81,"expected"],[139,14,118,89],[139,16,118,91,"expectedSet"],[139,27,118,102],[140,6,118,104,"avgCycleLen"],[140,17,118,115],[141,6,118,117,"avgPeriodLen"],[141,18,118,129],[142,6,118,131,"expectedNext"],[143,4,118,144],[143,5,118,145],[144,2,119,0],[145,0,119,1],[145,3]],"functionMap":{"names":["<global>","toKey","getAverageCycleLengthDays","cycles.filter$argument_0","cycles.filter.map$argument_0","last3.reduce$argument_0","getAveragePeriodLengthDays","completed.map$argument_0","averageStartToStart","predictNextStart","cycles.map$argument_0","getOvulationDate","getFertileWindow","isWithin","buildPeriodDaysSet","markersForMonth","<anonymous>","days.filter$argument_0"],"mappings":"AAA;qBCE,kHD;OEE;+BCC,YD,ME,YF;sCGU,UH;CFE;OME;kCHE,qBG;6BCE;GDG;6CDE,UC;CNC;OQE;CRE;OSE;4BCE,YD;CTM;OWG;CXM;OYE;CZQ;OaE;CbK;OcE;CdW;OeE;2CCkB,6FD;qCES,8BF;6CEC,6BF;yCEC,yDF;2CEC,iDF;0CEC,uDF"}},"type":"js/module"}]}