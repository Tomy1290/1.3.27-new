{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.parseHHMM = parseHHMM;\n  exports.toHHMM = toHHMM;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1]));\n  function parseHHMM(input) {\n    if (!input || typeof input !== 'string') return null;\n    var trimmed = input.trim();\n    // Accept formats like \"H:MM\", \"HH:MM\", \"HMM\", \"HHMM\"\n    var onlyDigits = trimmed.replace(/[^0-9]/g, '');\n    var hour = 0,\n      minute = 0;\n    if (onlyDigits.length === 4) {\n      hour = parseInt(onlyDigits.slice(0, 2), 10);\n      minute = parseInt(onlyDigits.slice(2), 10);\n    } else if (onlyDigits.length === 3) {\n      hour = parseInt(onlyDigits.slice(0, 1), 10);\n      minute = parseInt(onlyDigits.slice(1), 10);\n    } else if (/^\\d{1,2}:\\d{2}$/.test(trimmed)) {\n      var _trimmed$split = trimmed.split(':'),\n        _trimmed$split2 = (0, _slicedToArray2.default)(_trimmed$split, 2),\n        h = _trimmed$split2[0],\n        m = _trimmed$split2[1];\n      hour = parseInt(h, 10);\n      minute = parseInt(m, 10);\n    } else {\n      return null;\n    }\n    if (isNaN(hour) || isNaN(minute) || hour < 0 || hour > 23 || minute < 0 || minute > 59) return null;\n    return {\n      hour,\n      minute\n    };\n  }\n  function toHHMM(value) {\n    if (value == null) return null;\n    if (typeof value === 'string') {\n      var hm = parseHHMM(value);\n      if (!hm) return null;\n      return `${hm.hour.toString().padStart(2, '0')}:${hm.minute.toString().padStart(2, '0')}`;\n    }\n    if (typeof value === 'number') {\n      // assume milliseconds or minutes; if < 24*60 consider minutes\n      if (value < 1440) {\n        var hour = Math.floor(value / 60);\n        var minute = value % 60;\n        return `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n      }\n      var d = new Date(value);\n      if (isNaN(d.getTime())) return null;\n      return `${d.getHours().toString().padStart(2, '0')}:${d.getMinutes().toString().padStart(2, '0')}`;\n    }\n    if (value instanceof Date) {\n      return `${value.getHours().toString().padStart(2, '0')}:${value.getMinutes().toString().padStart(2, '0')}`;\n    }\n    return null;\n  }\n});","lineCount":61,"map":[[9,2,3,7],[9,11,3,16,"parseHHMM"],[9,20,3,25,"parseHHMM"],[9,21,3,26,"input"],[9,26,3,58],[9,28,3,71],[10,4,4,2],[10,8,4,6],[10,9,4,7,"input"],[10,14,4,12],[10,18,4,16],[10,25,4,23,"input"],[10,30,4,28],[10,35,4,33],[10,43,4,41],[10,45,4,43],[10,52,4,50],[10,56,4,54],[11,4,5,2],[11,8,5,8,"trimmed"],[11,15,5,15],[11,18,5,18,"input"],[11,23,5,23],[11,24,5,24,"trim"],[11,28,5,28],[11,29,5,29],[11,30,5,30],[12,4,6,2],[13,4,7,2],[13,8,7,8,"onlyDigits"],[13,18,7,18],[13,21,7,21,"trimmed"],[13,28,7,28],[13,29,7,29,"replace"],[13,36,7,36],[13,37,7,37],[13,46,7,46],[13,48,7,48],[13,50,7,50],[13,51,7,51],[14,4,8,2],[14,8,8,6,"hour"],[14,12,8,10],[14,15,8,13],[14,16,8,14],[15,6,8,16,"minute"],[15,12,8,22],[15,15,8,25],[15,16,8,26],[16,4,9,2],[16,8,9,6,"onlyDigits"],[16,18,9,16],[16,19,9,17,"length"],[16,25,9,23],[16,30,9,28],[16,31,9,29],[16,33,9,31],[17,6,10,4,"hour"],[17,10,10,8],[17,13,10,11,"parseInt"],[17,21,10,19],[17,22,10,20,"onlyDigits"],[17,32,10,30],[17,33,10,31,"slice"],[17,38,10,36],[17,39,10,37],[17,40,10,38],[17,42,10,40],[17,43,10,41],[17,44,10,42],[17,46,10,44],[17,48,10,46],[17,49,10,47],[18,6,11,4,"minute"],[18,12,11,10],[18,15,11,13,"parseInt"],[18,23,11,21],[18,24,11,22,"onlyDigits"],[18,34,11,32],[18,35,11,33,"slice"],[18,40,11,38],[18,41,11,39],[18,42,11,40],[18,43,11,41],[18,45,11,43],[18,47,11,45],[18,48,11,46],[19,4,12,2],[19,5,12,3],[19,11,12,9],[19,15,12,13,"onlyDigits"],[19,25,12,23],[19,26,12,24,"length"],[19,32,12,30],[19,37,12,35],[19,38,12,36],[19,40,12,38],[20,6,13,4,"hour"],[20,10,13,8],[20,13,13,11,"parseInt"],[20,21,13,19],[20,22,13,20,"onlyDigits"],[20,32,13,30],[20,33,13,31,"slice"],[20,38,13,36],[20,39,13,37],[20,40,13,38],[20,42,13,40],[20,43,13,41],[20,44,13,42],[20,46,13,44],[20,48,13,46],[20,49,13,47],[21,6,14,4,"minute"],[21,12,14,10],[21,15,14,13,"parseInt"],[21,23,14,21],[21,24,14,22,"onlyDigits"],[21,34,14,32],[21,35,14,33,"slice"],[21,40,14,38],[21,41,14,39],[21,42,14,40],[21,43,14,41],[21,45,14,43],[21,47,14,45],[21,48,14,46],[22,4,15,2],[22,5,15,3],[22,11,15,9],[22,15,15,13],[22,32,15,30],[22,33,15,31,"test"],[22,37,15,35],[22,38,15,36,"trimmed"],[22,45,15,43],[22,46,15,44],[22,48,15,46],[23,6,16,4],[23,10,16,4,"_trimmed$split"],[23,24,16,4],[23,27,16,19,"trimmed"],[23,34,16,26],[23,35,16,27,"split"],[23,40,16,32],[23,41,16,33],[23,44,16,36],[23,45,16,37],[24,8,16,37,"_trimmed$split2"],[24,23,16,37],[24,30,16,37,"_slicedToArray2"],[24,45,16,37],[24,46,16,37,"default"],[24,53,16,37],[24,55,16,37,"_trimmed$split"],[24,69,16,37],[25,8,16,11,"h"],[25,9,16,12],[25,12,16,12,"_trimmed$split2"],[25,27,16,12],[26,8,16,14,"m"],[26,9,16,15],[26,12,16,15,"_trimmed$split2"],[26,27,16,15],[27,6,17,4,"hour"],[27,10,17,8],[27,13,17,11,"parseInt"],[27,21,17,19],[27,22,17,20,"h"],[27,23,17,21],[27,25,17,23],[27,27,17,25],[27,28,17,26],[28,6,18,4,"minute"],[28,12,18,10],[28,15,18,13,"parseInt"],[28,23,18,21],[28,24,18,22,"m"],[28,25,18,23],[28,27,18,25],[28,29,18,27],[28,30,18,28],[29,4,19,2],[29,5,19,3],[29,11,19,9],[30,6,20,4],[30,13,20,11],[30,17,20,15],[31,4,21,2],[32,4,22,2],[32,8,22,6,"isNaN"],[32,13,22,11],[32,14,22,12,"hour"],[32,18,22,16],[32,19,22,17],[32,23,22,21,"isNaN"],[32,28,22,26],[32,29,22,27,"minute"],[32,35,22,33],[32,36,22,34],[32,40,22,38,"hour"],[32,44,22,42],[32,47,22,45],[32,48,22,46],[32,52,22,50,"hour"],[32,56,22,54],[32,59,22,57],[32,61,22,59],[32,65,22,63,"minute"],[32,71,22,69],[32,74,22,72],[32,75,22,73],[32,79,22,77,"minute"],[32,85,22,83],[32,88,22,86],[32,90,22,88],[32,92,22,90],[32,99,22,97],[32,103,22,101],[33,4,23,2],[33,11,23,9],[34,6,23,11,"hour"],[34,10,23,15],[35,6,23,17,"minute"],[36,4,23,24],[36,5,23,25],[37,2,24,0],[38,2,26,7],[38,11,26,16,"toHHMM"],[38,17,26,22,"toHHMM"],[38,18,26,23,"value"],[38,23,26,71],[38,25,26,88],[39,4,27,2],[39,8,27,6,"value"],[39,13,27,11],[39,17,27,15],[39,21,27,19],[39,23,27,21],[39,30,27,28],[39,34,27,32],[40,4,28,2],[40,8,28,6],[40,15,28,13,"value"],[40,20,28,18],[40,25,28,23],[40,33,28,31],[40,35,28,33],[41,6,29,4],[41,10,29,10,"hm"],[41,12,29,12],[41,15,29,15,"parseHHMM"],[41,24,29,24],[41,25,29,25,"value"],[41,30,29,30],[41,31,29,31],[42,6,30,4],[42,10,30,8],[42,11,30,9,"hm"],[42,13,30,11],[42,15,30,13],[42,22,30,20],[42,26,30,24],[43,6,31,4],[43,13,31,11],[43,16,31,14,"hm"],[43,18,31,16],[43,19,31,17,"hour"],[43,23,31,21],[43,24,31,22,"toString"],[43,32,31,30],[43,33,31,31],[43,34,31,32],[43,35,31,33,"padStart"],[43,43,31,41],[43,44,31,42],[43,45,31,43],[43,47,31,45],[43,50,31,48],[43,51,31,49],[43,55,31,53,"hm"],[43,57,31,55],[43,58,31,56,"minute"],[43,64,31,62],[43,65,31,63,"toString"],[43,73,31,71],[43,74,31,72],[43,75,31,73],[43,76,31,74,"padStart"],[43,84,31,82],[43,85,31,83],[43,86,31,84],[43,88,31,86],[43,91,31,89],[43,92,31,90],[43,94,31,92],[44,4,32,2],[45,4,33,2],[45,8,33,6],[45,15,33,13,"value"],[45,20,33,18],[45,25,33,23],[45,33,33,31],[45,35,33,33],[46,6,34,4],[47,6,35,4],[47,10,35,8,"value"],[47,15,35,13],[47,22,35,23],[47,24,35,25],[48,8,36,6],[48,12,36,12,"hour"],[48,16,36,16],[48,19,36,19,"Math"],[48,23,36,23],[48,24,36,24,"floor"],[48,29,36,29],[48,30,36,30,"value"],[48,35,36,35],[48,38,36,38],[48,40,36,40],[48,41,36,41],[49,8,37,6],[49,12,37,12,"minute"],[49,18,37,18],[49,21,37,21,"value"],[49,26,37,26],[49,29,37,29],[49,31,37,31],[50,8,38,6],[50,15,38,13],[50,18,38,16,"hour"],[50,22,38,20],[50,23,38,21,"toString"],[50,31,38,29],[50,32,38,30],[50,33,38,31],[50,34,38,32,"padStart"],[50,42,38,40],[50,43,38,41],[50,44,38,42],[50,46,38,44],[50,49,38,47],[50,50,38,48],[50,54,38,52,"minute"],[50,60,38,58],[50,61,38,59,"toString"],[50,69,38,67],[50,70,38,68],[50,71,38,69],[50,72,38,70,"padStart"],[50,80,38,78],[50,81,38,79],[50,82,38,80],[50,84,38,82],[50,87,38,85],[50,88,38,86],[50,90,38,88],[51,6,39,4],[52,6,40,4],[52,10,40,10,"d"],[52,11,40,11],[52,14,40,14],[52,18,40,18,"Date"],[52,22,40,22],[52,23,40,23,"value"],[52,28,40,28],[52,29,40,29],[53,6,41,4],[53,10,41,8,"isNaN"],[53,15,41,13],[53,16,41,14,"d"],[53,17,41,15],[53,18,41,16,"getTime"],[53,25,41,23],[53,26,41,24],[53,27,41,25],[53,28,41,26],[53,30,41,28],[53,37,41,35],[53,41,41,39],[54,6,42,4],[54,13,42,11],[54,16,42,14,"d"],[54,17,42,15],[54,18,42,16,"getHours"],[54,26,42,24],[54,27,42,25],[54,28,42,26],[54,29,42,27,"toString"],[54,37,42,35],[54,38,42,36],[54,39,42,37],[54,40,42,38,"padStart"],[54,48,42,46],[54,49,42,47],[54,50,42,48],[54,52,42,50],[54,55,42,53],[54,56,42,54],[54,60,42,58,"d"],[54,61,42,59],[54,62,42,60,"getMinutes"],[54,72,42,70],[54,73,42,71],[54,74,42,72],[54,75,42,73,"toString"],[54,83,42,81],[54,84,42,82],[54,85,42,83],[54,86,42,84,"padStart"],[54,94,42,92],[54,95,42,93],[54,96,42,94],[54,98,42,96],[54,101,42,99],[54,102,42,100],[54,104,42,102],[55,4,43,2],[56,4,44,2],[56,8,44,6,"value"],[56,13,44,11],[56,25,44,23,"Date"],[56,29,44,27],[56,31,44,29],[57,6,45,4],[57,13,45,11],[57,16,45,14,"value"],[57,21,45,19],[57,22,45,20,"getHours"],[57,30,45,28],[57,31,45,29],[57,32,45,30],[57,33,45,31,"toString"],[57,41,45,39],[57,42,45,40],[57,43,45,41],[57,44,45,42,"padStart"],[57,52,45,50],[57,53,45,51],[57,54,45,52],[57,56,45,54],[57,59,45,57],[57,60,45,58],[57,64,45,62,"value"],[57,69,45,67],[57,70,45,68,"getMinutes"],[57,80,45,78],[57,81,45,79],[57,82,45,80],[57,83,45,81,"toString"],[57,91,45,89],[57,92,45,90],[57,93,45,91],[57,94,45,92,"padStart"],[57,102,45,100],[57,103,45,101],[57,104,45,102],[57,106,45,104],[57,109,45,107],[57,110,45,108],[57,112,45,110],[58,4,46,2],[59,4,47,2],[59,11,47,9],[59,15,47,13],[60,2,48,0],[61,0,48,1],[61,3]],"functionMap":{"names":["<global>","parseHHMM","toHHMM"],"mappings":"AAA;OCE;CDqB;OEE"}},"type":"js/module"}]}