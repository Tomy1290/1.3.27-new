{"dependencies":[{"name":"./util","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":208},"end":{"line":11,"column":70,"index":278}}],"key":"1+hZBLc/k6i18AZJ4yHV73uDZHQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.withRepeat = undefined;\n  var _util = require(_dependencyMap[0]);\n  // TODO TYPESCRIPT This is a temporary type to get rid of .d.ts file.\n  var _worklet_225063988400_init_data = {\n    code: \"function reactNativeReanimated_repeatTs1(_nextAnimation,numberOfReps=2,reverse=false,callback,reduceMotion){const{defineAnimation,getReduceMotionForAnimation}=this.__closure;return defineAnimation(_nextAnimation,function(){'worklet';const nextAnimation=typeof _nextAnimation==='function'?_nextAnimation():_nextAnimation;function repeat(animation,now){const finished=nextAnimation.onFrame(nextAnimation,now);animation.current=nextAnimation.current;if(finished){animation.reps+=1;if(nextAnimation.callback){nextAnimation.callback(true,animation.current);}if(animation.reduceMotion||numberOfReps>0&&animation.reps>=numberOfReps){return true;}const startValue=reverse?nextAnimation.current:animation.startValue;if(reverse){nextAnimation.toValue=animation.startValue;animation.startValue=startValue;}nextAnimation.onStart(nextAnimation,startValue,now,nextAnimation.previousAnimation);return false;}return false;}const repCallback=function(finished){if(callback){callback(finished);}if(!finished&&nextAnimation.callback){nextAnimation.callback(false);}};function onStart(animation,value,now,previousAnimation){animation.startValue=value;animation.reps=0;if(nextAnimation.reduceMotion===undefined){nextAnimation.reduceMotion=animation.reduceMotion;}if(animation.reduceMotion&&reverse&&(numberOfReps<=0||numberOfReps%2===0)){animation.current=animation.startValue;animation.onFrame=function(){return true;};}else{nextAnimation.onStart(nextAnimation,value,now,previousAnimation);}}return{isHigherOrder:true,onFrame:repeat,onStart:onStart,reps:0,current:nextAnimation.current,callback:repCallback,startValue:0,reduceMotion:getReduceMotionForAnimation(reduceMotion)};});}\"\n  };\n  var _worklet_12898198156332_init_data = {\n    code: \"function reactNativeReanimated_repeatTs2(){const{_nextAnimation,numberOfReps,reverse,callback,getReduceMotionForAnimation,reduceMotion}=this.__closure;const nextAnimation=typeof _nextAnimation==='function'?_nextAnimation():_nextAnimation;function repeat(animation,now){const finished=nextAnimation.onFrame(nextAnimation,now);animation.current=nextAnimation.current;if(finished){animation.reps+=1;if(nextAnimation.callback){nextAnimation.callback(true,animation.current);}if(animation.reduceMotion||numberOfReps>0&&animation.reps>=numberOfReps){return true;}const startValue=reverse?nextAnimation.current:animation.startValue;if(reverse){nextAnimation.toValue=animation.startValue;animation.startValue=startValue;}nextAnimation.onStart(nextAnimation,startValue,now,nextAnimation.previousAnimation);return false;}return false;}const repCallback=function(finished){if(callback){callback(finished);}if(!finished&&nextAnimation.callback){nextAnimation.callback(false);}};function onStart(animation,value,now,previousAnimation){animation.startValue=value;animation.reps=0;if(nextAnimation.reduceMotion===undefined){nextAnimation.reduceMotion=animation.reduceMotion;}if(animation.reduceMotion&&reverse&&(numberOfReps<=0||numberOfReps%2===0)){animation.current=animation.startValue;animation.onFrame=function(){return true;};}else{nextAnimation.onStart(nextAnimation,value,now,previousAnimation);}}return{isHigherOrder:true,onFrame:repeat,onStart:onStart,reps:0,current:nextAnimation.current,callback:repCallback,startValue:0,reduceMotion:getReduceMotionForAnimation(reduceMotion)};}\"\n  };\n  /**\n   * Lets you repeat an animation given number of times or run it indefinitely.\n   *\n   * @param animation - An animation object you want to repeat.\n   * @param numberOfReps - The number of times the animation is going to be\n   *   repeated. Defaults to 2.\n   * @param reverse - Whether the animation should run in reverse every other\n   *   repetition. Defaults to false.\n   * @param callback - A function called on animation complete.\n   * @param reduceMotion - Determines how the animation responds to the device's\n   *   reduced motion accessibility setting. Default to `ReduceMotion.System` -\n   *   {@link ReduceMotion}.\n   * @returns An [animation\n   *   object](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animation-object)\n   *   which holds the current state of the animation.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/animations/withRepeat\n   */\n  var withRepeat = exports.withRepeat = function () {\n    var reactNativeReanimated_repeatTs1 = function (_nextAnimation) {\n      var numberOfReps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n      var reverse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var callback = arguments.length > 3 ? arguments[3] : undefined;\n      var reduceMotion = arguments.length > 4 ? arguments[4] : undefined;\n      return (0, _util.defineAnimation)(_nextAnimation, function () {\n        var reactNativeReanimated_repeatTs2 = function () {\n          var nextAnimation = typeof _nextAnimation === 'function' ? _nextAnimation() : _nextAnimation;\n          function repeat(animation, now) {\n            var finished = nextAnimation.onFrame(nextAnimation, now);\n            animation.current = nextAnimation.current;\n            if (finished) {\n              animation.reps += 1;\n              // call inner animation's callback on every repetition\n              // as the second argument the animation's current value is passed\n              if (nextAnimation.callback) {\n                nextAnimation.callback(true /* finished */, animation.current);\n              }\n              if (animation.reduceMotion || numberOfReps > 0 && animation.reps >= numberOfReps) {\n                return true;\n              }\n              var startValue = reverse ? nextAnimation.current : animation.startValue;\n              if (reverse) {\n                nextAnimation.toValue = animation.startValue;\n                animation.startValue = startValue;\n              }\n              nextAnimation.onStart(nextAnimation, startValue, now, nextAnimation.previousAnimation);\n              return false;\n            }\n            return false;\n          }\n          var repCallback = finished => {\n            if (callback) {\n              callback(finished);\n            }\n            // when cancelled call inner animation's callback\n            if (!finished && nextAnimation.callback) {\n              nextAnimation.callback(false /* finished */);\n            }\n          };\n          function onStart(animation, value, now, previousAnimation) {\n            animation.startValue = value;\n            animation.reps = 0;\n\n            // child animations inherit the setting, unless they already have it defined\n            // they will have it defined only if the user used the `reduceMotion` prop\n            if (nextAnimation.reduceMotion === undefined) {\n              nextAnimation.reduceMotion = animation.reduceMotion;\n            }\n\n            // don't start the animation if reduced motion is enabled and\n            // the animation would end at its starting point\n            if (animation.reduceMotion && reverse && (numberOfReps <= 0 || numberOfReps % 2 === 0)) {\n              animation.current = animation.startValue;\n              animation.onFrame = () => true;\n            } else {\n              nextAnimation.onStart(nextAnimation, value, now, previousAnimation);\n            }\n          }\n          return {\n            isHigherOrder: true,\n            onFrame: repeat,\n            onStart,\n            reps: 0,\n            current: nextAnimation.current,\n            callback: repCallback,\n            startValue: 0,\n            reduceMotion: (0, _util.getReduceMotionForAnimation)(reduceMotion)\n          };\n        };\n        reactNativeReanimated_repeatTs2.__closure = {\n          _nextAnimation,\n          numberOfReps,\n          reverse,\n          callback,\n          getReduceMotionForAnimation: _util.getReduceMotionForAnimation,\n          reduceMotion\n        };\n        reactNativeReanimated_repeatTs2.__workletHash = 12898198156332;\n        reactNativeReanimated_repeatTs2.__initData = _worklet_12898198156332_init_data;\n        return reactNativeReanimated_repeatTs2;\n      }());\n    };\n    reactNativeReanimated_repeatTs1.__closure = {\n      defineAnimation: _util.defineAnimation,\n      getReduceMotionForAnimation: _util.getReduceMotionForAnimation\n    };\n    reactNativeReanimated_repeatTs1.__workletHash = 225063988400;\n    reactNativeReanimated_repeatTs1.__initData = _worklet_225063988400_init_data;\n    return reactNativeReanimated_repeatTs1;\n  }();\n});","lineCount":125,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"withRepeat"],[7,20,1,13],[7,23,1,13,"undefined"],[7,32,1,13],[8,2,11,0],[8,6,11,0,"_util"],[8,11,11,0],[8,14,11,0,"require"],[8,21,11,0],[8,22,11,0,"_dependencyMap"],[8,36,11,0],[9,2,13,0],[10,2,13,0],[10,6,13,0,"_worklet_225063988400_init_data"],[10,37,13,0],[11,4,13,0,"code"],[11,8,13,0],[12,2,13,0],[13,2,13,0],[13,6,13,0,"_worklet_12898198156332_init_data"],[13,39,13,0],[14,4,13,0,"code"],[14,8,13,0],[15,2,13,0],[16,2,22,0],[17,0,23,0],[18,0,24,0],[19,0,25,0],[20,0,26,0],[21,0,27,0],[22,0,28,0],[23,0,29,0],[24,0,30,0],[25,0,31,0],[26,0,32,0],[27,0,33,0],[28,0,34,0],[29,0,35,0],[30,0,36,0],[31,0,37,0],[32,0,38,0],[33,2,39,7],[33,6,39,13,"withRepeat"],[33,16,39,23],[33,19,39,23,"exports"],[33,26,39,23],[33,27,39,23,"withRepeat"],[33,37,39,23],[33,40,39,26],[34,4,39,26],[34,8,39,26,"reactNativeReanimated_repeatTs1"],[34,39,39,26],[34,51,39,26,"reactNativeReanimated_repeatTs1"],[34,52,40,2,"_nextAnimation"],[34,66,40,31],[34,68,45,30],[35,6,45,30],[35,10,41,2,"numberOfReps"],[35,22,41,14],[35,25,41,14,"arguments"],[35,34,41,14],[35,35,41,14,"length"],[35,41,41,14],[35,49,41,14,"arguments"],[35,58,41,14],[35,66,41,14,"undefined"],[35,75,41,14],[35,78,41,14,"arguments"],[35,87,41,14],[35,93,41,17],[35,94,41,18],[36,6,41,18],[36,10,42,2,"reverse"],[36,17,42,9],[36,20,42,9,"arguments"],[36,29,42,9],[36,30,42,9,"length"],[36,36,42,9],[36,44,42,9,"arguments"],[36,53,42,9],[36,61,42,9,"undefined"],[36,70,42,9],[36,73,42,9,"arguments"],[36,82,42,9],[36,88,42,12],[36,93,42,17],[37,6,42,17],[37,10,43,2,"callback"],[37,18,43,30],[37,21,43,30,"arguments"],[37,30,43,30],[37,31,43,30,"length"],[37,37,43,30],[37,44,43,30,"arguments"],[37,53,43,30],[37,59,43,30,"undefined"],[37,68,43,30],[38,6,43,30],[38,10,44,2,"reduceMotion"],[38,22,44,29],[38,25,44,29,"arguments"],[38,34,44,29],[38,35,44,29,"length"],[38,41,44,29],[38,48,44,29,"arguments"],[38,57,44,29],[38,63,44,29,"undefined"],[38,72,44,29],[39,6,48,2],[39,13,48,9],[39,17,48,9,"defineAnimation"],[39,38,48,24],[39,40,49,4,"_nextAnimation"],[39,54,49,18],[39,56,50,4],[40,8,50,4],[40,12,50,4,"reactNativeReanimated_repeatTs2"],[40,43,50,4],[40,55,50,4,"reactNativeReanimated_repeatTs2"],[40,56,50,4],[40,58,50,27],[41,10,53,6],[41,14,53,12,"nextAnimation"],[41,27,53,25],[41,30,54,8],[41,37,54,15,"_nextAnimation"],[41,51,54,29],[41,56,54,34],[41,66,54,44],[41,69,55,12,"_nextAnimation"],[41,83,55,26],[41,84,55,27],[41,85,55,28],[41,88,56,12,"_nextAnimation"],[41,102,56,26],[42,10,58,6],[42,19,58,15,"repeat"],[42,25,58,21,"repeat"],[42,26,58,22,"animation"],[42,35,58,48],[42,37,58,50,"now"],[42,40,58,64],[42,42,58,75],[43,12,59,8],[43,16,59,14,"finished"],[43,24,59,22],[43,27,59,25,"nextAnimation"],[43,40,59,38],[43,41,59,39,"onFrame"],[43,48,59,46],[43,49,59,47,"nextAnimation"],[43,62,59,60],[43,64,59,62,"now"],[43,67,59,65],[43,68,59,66],[44,12,60,8,"animation"],[44,21,60,17],[44,22,60,18,"current"],[44,29,60,25],[44,32,60,28,"nextAnimation"],[44,45,60,41],[44,46,60,42,"current"],[44,53,60,49],[45,12,61,8],[45,16,61,12,"finished"],[45,24,61,20],[45,26,61,22],[46,14,62,10,"animation"],[46,23,62,19],[46,24,62,20,"reps"],[46,28,62,24],[46,32,62,28],[46,33,62,29],[47,14,63,10],[48,14,64,10],[49,14,65,10],[49,18,65,14,"nextAnimation"],[49,31,65,27],[49,32,65,28,"callback"],[49,40,65,36],[49,42,65,38],[50,16,66,12,"nextAnimation"],[50,29,66,25],[50,30,66,26,"callback"],[50,38,66,34],[50,39,66,35],[50,43,66,39],[50,44,66,40],[50,60,66,56,"animation"],[50,69,66,65],[50,70,66,66,"current"],[50,77,66,73],[50,78,66,74],[51,14,67,10],[52,14,68,10],[52,18,69,12,"animation"],[52,27,69,21],[52,28,69,22,"reduceMotion"],[52,40,69,34],[52,44,70,13,"numberOfReps"],[52,56,70,25],[52,59,70,28],[52,60,70,29],[52,64,70,33,"animation"],[52,73,70,42],[52,74,70,43,"reps"],[52,78,70,47],[52,82,70,51,"numberOfReps"],[52,94,70,64],[52,96,71,12],[53,16,72,12],[53,23,72,19],[53,27,72,23],[54,14,73,10],[55,14,75,10],[55,18,75,16,"startValue"],[55,28,75,26],[55,31,75,29,"reverse"],[55,38,75,36],[55,41,76,15,"nextAnimation"],[55,54,76,28],[55,55,76,29,"current"],[55,62,76,36],[55,65,77,14,"animation"],[55,74,77,23],[55,75,77,24,"startValue"],[55,85,77,34],[56,14,78,10],[56,18,78,14,"reverse"],[56,25,78,21],[56,27,78,23],[57,16,79,12,"nextAnimation"],[57,29,79,25],[57,30,79,26,"toValue"],[57,37,79,33],[57,40,79,36,"animation"],[57,49,79,45],[57,50,79,46,"startValue"],[57,60,79,56],[58,16,80,12,"animation"],[58,25,80,21],[58,26,80,22,"startValue"],[58,36,80,32],[58,39,80,35,"startValue"],[58,49,80,45],[59,14,81,10],[60,14,82,10,"nextAnimation"],[60,27,82,23],[60,28,82,24,"onStart"],[60,35,82,31],[60,36,83,12,"nextAnimation"],[60,49,83,25],[60,51,84,12,"startValue"],[60,61,84,22],[60,63,85,12,"now"],[60,66,85,15],[60,68,86,12,"nextAnimation"],[60,81,86,25],[60,82,86,26,"previousAnimation"],[60,99,87,10],[60,100,87,11],[61,14,88,10],[61,21,88,17],[61,26,88,22],[62,12,89,8],[63,12,90,8],[63,19,90,15],[63,24,90,20],[64,10,91,6],[65,10,93,6],[65,14,93,12,"repCallback"],[65,25,93,23],[65,28,93,27,"finished"],[65,36,93,45],[65,40,93,56],[66,12,94,8],[66,16,94,12,"callback"],[66,24,94,20],[66,26,94,22],[67,14,95,10,"callback"],[67,22,95,18],[67,23,95,19,"finished"],[67,31,95,27],[67,32,95,28],[68,12,96,8],[69,12,97,8],[70,12,98,8],[70,16,98,12],[70,17,98,13,"finished"],[70,25,98,21],[70,29,98,25,"nextAnimation"],[70,42,98,38],[70,43,98,39,"callback"],[70,51,98,47],[70,53,98,49],[71,14,99,10,"nextAnimation"],[71,27,99,23],[71,28,99,24,"callback"],[71,36,99,32],[71,37,99,33],[71,42,99,38],[71,43,99,39],[71,57,99,53],[71,58,99,54],[72,12,100,8],[73,10,101,6],[73,11,101,7],[74,10,103,6],[74,19,103,15,"onStart"],[74,26,103,22,"onStart"],[74,27,104,8,"animation"],[74,36,104,34],[74,38,105,8,"value"],[74,43,105,30],[74,45,106,8,"now"],[74,48,106,22],[74,50,107,8,"previousAnimation"],[74,67,107,48],[74,69,108,14],[75,12,109,8,"animation"],[75,21,109,17],[75,22,109,18,"startValue"],[75,32,109,28],[75,35,109,31,"value"],[75,40,109,36],[76,12,110,8,"animation"],[76,21,110,17],[76,22,110,18,"reps"],[76,26,110,22],[76,29,110,25],[76,30,110,26],[78,12,112,8],[79,12,113,8],[80,12,114,8],[80,16,114,12,"nextAnimation"],[80,29,114,25],[80,30,114,26,"reduceMotion"],[80,42,114,38],[80,47,114,43,"undefined"],[80,56,114,52],[80,58,114,54],[81,14,115,10,"nextAnimation"],[81,27,115,23],[81,28,115,24,"reduceMotion"],[81,40,115,36],[81,43,115,39,"animation"],[81,52,115,48],[81,53,115,49,"reduceMotion"],[81,65,115,61],[82,12,116,8],[84,12,118,8],[85,12,119,8],[86,12,120,8],[86,16,121,10,"animation"],[86,25,121,19],[86,26,121,20,"reduceMotion"],[86,38,121,32],[86,42,122,10,"reverse"],[86,49,122,17],[86,54,123,11,"numberOfReps"],[86,66,123,23],[86,70,123,27],[86,71,123,28],[86,75,123,32,"numberOfReps"],[86,87,123,44],[86,90,123,47],[86,91,123,48],[86,96,123,53],[86,97,123,54],[86,98,123,55],[86,100,124,10],[87,14,125,10,"animation"],[87,23,125,19],[87,24,125,20,"current"],[87,31,125,27],[87,34,125,30,"animation"],[87,43,125,39],[87,44,125,40,"startValue"],[87,54,125,50],[88,14,126,10,"animation"],[88,23,126,19],[88,24,126,20,"onFrame"],[88,31,126,27],[88,34,126,30],[88,40,126,36],[88,44,126,40],[89,12,127,8],[89,13,127,9],[89,19,127,15],[90,14,128,10,"nextAnimation"],[90,27,128,23],[90,28,128,24,"onStart"],[90,35,128,31],[90,36,128,32,"nextAnimation"],[90,49,128,45],[90,51,128,47,"value"],[90,56,128,52],[90,58,128,54,"now"],[90,61,128,57],[90,63,128,59,"previousAnimation"],[90,80,128,76],[90,81,128,77],[91,12,129,8],[92,10,130,6],[93,10,132,6],[93,17,132,13],[94,12,133,8,"isHigherOrder"],[94,25,133,21],[94,27,133,23],[94,31,133,27],[95,12,134,8,"onFrame"],[95,19,134,15],[95,21,134,17,"repeat"],[95,27,134,23],[96,12,135,8,"onStart"],[96,19,135,15],[97,12,136,8,"reps"],[97,16,136,12],[97,18,136,14],[97,19,136,15],[98,12,137,8,"current"],[98,19,137,15],[98,21,137,17,"nextAnimation"],[98,34,137,30],[98,35,137,31,"current"],[98,42,137,38],[99,12,138,8,"callback"],[99,20,138,16],[99,22,138,18,"repCallback"],[99,33,138,29],[100,12,139,8,"startValue"],[100,22,139,18],[100,24,139,20],[100,25,139,21],[101,12,140,8,"reduceMotion"],[101,24,140,20],[101,26,140,22],[101,30,140,22,"getReduceMotionForAnimation"],[101,63,140,49],[101,65,140,50,"reduceMotion"],[101,77,140,62],[102,10,141,6],[102,11,141,7],[103,8,142,4],[103,9,142,5],[104,8,142,5,"reactNativeReanimated_repeatTs2"],[104,39,142,5],[104,40,142,5,"__closure"],[104,49,142,5],[105,10,142,5,"_nextAnimation"],[105,24,142,5],[106,10,142,5,"numberOfReps"],[106,22,142,5],[107,10,142,5,"reverse"],[107,17,142,5],[108,10,142,5,"callback"],[108,18,142,5],[109,10,142,5,"getReduceMotionForAnimation"],[109,37,142,5],[109,39,140,22,"getReduceMotionForAnimation"],[109,72,140,49],[110,10,140,49,"reduceMotion"],[111,8,140,49],[112,8,140,49,"reactNativeReanimated_repeatTs2"],[112,39,140,49],[112,40,140,49,"__workletHash"],[112,53,140,49],[113,8,140,49,"reactNativeReanimated_repeatTs2"],[113,39,140,49],[113,40,140,49,"__initData"],[113,50,140,49],[113,53,140,49,"_worklet_12898198156332_init_data"],[113,86,140,49],[114,8,140,49],[114,15,140,49,"reactNativeReanimated_repeatTs2"],[114,46,140,49],[115,6,140,49],[115,7,50,4],[115,9,143,2],[115,10,143,3],[116,4,144,0],[116,5,144,1],[117,4,144,1,"reactNativeReanimated_repeatTs1"],[117,35,144,1],[117,36,144,1,"__closure"],[117,45,144,1],[118,6,144,1,"defineAnimation"],[118,21,144,1],[118,23,48,9,"defineAnimation"],[118,44,48,24],[119,6,48,24,"getReduceMotionForAnimation"],[119,33,48,24],[119,35,140,22,"getReduceMotionForAnimation"],[120,4,140,49],[121,4,140,49,"reactNativeReanimated_repeatTs1"],[121,35,140,49],[121,36,140,49,"__workletHash"],[121,49,140,49],[122,4,140,49,"reactNativeReanimated_repeatTs1"],[122,35,140,49],[122,36,140,49,"__initData"],[122,46,140,49],[122,49,140,49,"_worklet_225063988400_init_data"],[122,80,140,49],[123,4,140,49],[123,11,140,49,"reactNativeReanimated_repeatTs1"],[123,42,140,49],[124,2,140,49],[124,3,39,26],[124,5,144,19],[125,0,144,20],[125,3]],"functionMap":{"names":["<global>","<anonymous>","defineAnimation$argument_1","repeat","repCallback","onStart","animation.onFrame"],"mappings":"AAA;0BCsC;ICW;MCQ;ODiC;0BEE;OFQ;MGE;8BCuB,UD;OHI;KDY;CDE"}},"type":"js/module"}]}