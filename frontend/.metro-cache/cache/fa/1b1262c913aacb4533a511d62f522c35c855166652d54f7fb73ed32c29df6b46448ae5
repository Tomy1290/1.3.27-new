{"dependencies":[{"name":"../logger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":133},"end":{"line":9,"column":35,"index":168}}],"key":"6mnFiA+8QMwCo5SHGzE3xLi0NTk=","exportNames":["*"]}},{"name":"./util","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":222},"end":{"line":15,"column":16,"index":322}}],"key":"1+hZBLc/k6i18AZJ4yHV73uDZHQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.withClamp = undefined;\n  var _logger = require(_dependencyMap[0]);\n  var _util = require(_dependencyMap[1]);\n  var _worklet_15494423595509_init_data = {\n    code: \"function reactNativeReanimated_clampTs1(config,_animationToClamp){const{defineAnimation,recognizePrefixSuffix,logger,getReduceMotionForAnimation}=this.__closure;return defineAnimation(_animationToClamp,function(){'worklet';const animationToClamp=typeof _animationToClamp==='function'?_animationToClamp():_animationToClamp;const strippedMin=config.min===undefined?undefined:recognizePrefixSuffix(config.min).strippedValue;const strippedMax=config.max===undefined?undefined:recognizePrefixSuffix(config.max).strippedValue;function clampOnFrame(animation,now){const finished=animationToClamp.onFrame(animationToClamp,now);if(animationToClamp.current===undefined){logger.warn(\\\"Error inside 'withClamp' animation, the inner animation has invalid current value\\\");return true;}else{const{prefix:prefix,strippedValue:strippedValue,suffix:suffix}=recognizePrefixSuffix(animationToClamp.current);let newValue;if(strippedMax!==undefined&&strippedMax<strippedValue){newValue=strippedMax;}else if(strippedMin!==undefined&&strippedMin>strippedValue){newValue=strippedMin;}else{newValue=strippedValue;}animation.current=typeof animationToClamp.current==='number'?newValue:\\\"\\\"+(prefix===undefined?'':prefix)+newValue+(suffix===undefined?'':suffix);}return finished;}function onStart(animation,value,now,previousAnimation){animation.current=value;animation.previousAnimation=animationToClamp;const animationBeforeClamped=previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.previousAnimation;if(config.max!==undefined&&config.min!==undefined&&config.max<config.min){logger.warn('Wrong config was provided to withClamp. Min value is bigger than max');}animationToClamp.onStart(animationToClamp,(animationBeforeClamped===null||animationBeforeClamped===void 0?void 0:animationBeforeClamped.current)||value,now,animationBeforeClamped);}const callback=function(finished){if(animationToClamp.callback){animationToClamp.callback(finished);}};return{isHigherOrder:true,onFrame:clampOnFrame,onStart:onStart,current:animationToClamp.current,callback:callback,previousAnimation:null,reduceMotion:getReduceMotionForAnimation(config.reduceMotion)};});}\"\n  };\n  var _worklet_16708136470473_init_data = {\n    code: \"function reactNativeReanimated_clampTs2(){const{_animationToClamp,config,recognizePrefixSuffix,logger,getReduceMotionForAnimation}=this.__closure;const animationToClamp=typeof _animationToClamp==='function'?_animationToClamp():_animationToClamp;const strippedMin=config.min===undefined?undefined:recognizePrefixSuffix(config.min).strippedValue;const strippedMax=config.max===undefined?undefined:recognizePrefixSuffix(config.max).strippedValue;function clampOnFrame(animation,now){const finished=animationToClamp.onFrame(animationToClamp,now);if(animationToClamp.current===undefined){logger.warn(\\\"Error inside 'withClamp' animation, the inner animation has invalid current value\\\");return true;}else{const{prefix:prefix,strippedValue:strippedValue,suffix:suffix}=recognizePrefixSuffix(animationToClamp.current);let newValue;if(strippedMax!==undefined&&strippedMax<strippedValue){newValue=strippedMax;}else if(strippedMin!==undefined&&strippedMin>strippedValue){newValue=strippedMin;}else{newValue=strippedValue;}animation.current=typeof animationToClamp.current==='number'?newValue:\\\"\\\"+(prefix===undefined?'':prefix)+newValue+(suffix===undefined?'':suffix);}return finished;}function onStart(animation,value,now,previousAnimation){animation.current=value;animation.previousAnimation=animationToClamp;const animationBeforeClamped=previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.previousAnimation;if(config.max!==undefined&&config.min!==undefined&&config.max<config.min){logger.warn('Wrong config was provided to withClamp. Min value is bigger than max');}animationToClamp.onStart(animationToClamp,(animationBeforeClamped===null||animationBeforeClamped===void 0?void 0:animationBeforeClamped.current)||value,now,animationBeforeClamped);}const callback=function(finished){if(animationToClamp.callback){animationToClamp.callback(finished);}};return{isHigherOrder:true,onFrame:clampOnFrame,onStart:onStart,current:animationToClamp.current,callback:callback,previousAnimation:null,reduceMotion:getReduceMotionForAnimation(config.reduceMotion)};}\"\n  };\n  var withClamp = exports.withClamp = function () {\n    var reactNativeReanimated_clampTs1 = function (config, _animationToClamp) {\n      return (0, _util.defineAnimation)(_animationToClamp, function () {\n        var reactNativeReanimated_clampTs2 = function () {\n          var animationToClamp = typeof _animationToClamp === 'function' ? _animationToClamp() : _animationToClamp;\n          var strippedMin = config.min === undefined ? undefined : (0, _util.recognizePrefixSuffix)(config.min).strippedValue;\n          var strippedMax = config.max === undefined ? undefined : (0, _util.recognizePrefixSuffix)(config.max).strippedValue;\n          function clampOnFrame(animation, now) {\n            var finished = animationToClamp.onFrame(animationToClamp, now);\n            if (animationToClamp.current === undefined) {\n              _logger.logger.warn(\"Error inside 'withClamp' animation, the inner animation has invalid current value\");\n              return true;\n            } else {\n              var _recognizePrefixSuffi = (0, _util.recognizePrefixSuffix)(animationToClamp.current),\n                prefix = _recognizePrefixSuffi.prefix,\n                strippedValue = _recognizePrefixSuffi.strippedValue,\n                suffix = _recognizePrefixSuffi.suffix;\n              var newValue;\n              if (strippedMax !== undefined && strippedMax < strippedValue) {\n                newValue = strippedMax;\n              } else if (strippedMin !== undefined && strippedMin > strippedValue) {\n                newValue = strippedMin;\n              } else {\n                newValue = strippedValue;\n              }\n              animation.current = typeof animationToClamp.current === 'number' ? newValue : `${prefix === undefined ? '' : prefix}${newValue}${suffix === undefined ? '' : suffix}`;\n            }\n            return finished;\n          }\n          function onStart(animation, value, now, previousAnimation) {\n            animation.current = value;\n            animation.previousAnimation = animationToClamp;\n            var animationBeforeClamped = previousAnimation?.previousAnimation;\n            if (config.max !== undefined && config.min !== undefined && config.max < config.min) {\n              _logger.logger.warn('Wrong config was provided to withClamp. Min value is bigger than max');\n            }\n            animationToClamp.onStart(animationToClamp,\n            /**\n             * Provide the current value of the previous animation of the clamped\n             * animation so we can animate from the original \"un-truncated\" value\n             */\n            animationBeforeClamped?.current || value, now, animationBeforeClamped);\n          }\n          var callback = finished => {\n            if (animationToClamp.callback) {\n              animationToClamp.callback(finished);\n            }\n          };\n          return {\n            isHigherOrder: true,\n            onFrame: clampOnFrame,\n            onStart,\n            current: animationToClamp.current,\n            callback,\n            previousAnimation: null,\n            reduceMotion: (0, _util.getReduceMotionForAnimation)(config.reduceMotion)\n          };\n        };\n        reactNativeReanimated_clampTs2.__closure = {\n          _animationToClamp,\n          config,\n          recognizePrefixSuffix: _util.recognizePrefixSuffix,\n          logger: _logger.logger,\n          getReduceMotionForAnimation: _util.getReduceMotionForAnimation\n        };\n        reactNativeReanimated_clampTs2.__workletHash = 16708136470473;\n        reactNativeReanimated_clampTs2.__initData = _worklet_16708136470473_init_data;\n        return reactNativeReanimated_clampTs2;\n      }());\n    };\n    reactNativeReanimated_clampTs1.__closure = {\n      defineAnimation: _util.defineAnimation,\n      recognizePrefixSuffix: _util.recognizePrefixSuffix,\n      logger: _logger.logger,\n      getReduceMotionForAnimation: _util.getReduceMotionForAnimation\n    };\n    reactNativeReanimated_clampTs1.__workletHash = 15494423595509;\n    reactNativeReanimated_clampTs1.__initData = _worklet_15494423595509_init_data;\n    return reactNativeReanimated_clampTs1;\n  }();\n});","lineCount":96,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"withClamp"],[7,19,1,13],[7,22,1,13,"undefined"],[7,31,1,13],[8,2,9,0],[8,6,9,0,"_logger"],[8,13,9,0],[8,16,9,0,"require"],[8,23,9,0],[8,24,9,0,"_dependencyMap"],[8,38,9,0],[9,2,11,0],[9,6,11,0,"_util"],[9,11,11,0],[9,14,11,0,"require"],[9,21,11,0],[9,22,11,0,"_dependencyMap"],[9,36,11,0],[10,2,15,16],[10,6,15,16,"_worklet_15494423595509_init_data"],[10,39,15,16],[11,4,15,16,"code"],[11,8,15,16],[12,2,15,16],[13,2,15,16],[13,6,15,16,"_worklet_16708136470473_init_data"],[13,39,15,16],[14,4,15,16,"code"],[14,8,15,16],[15,2,15,16],[16,2,25,7],[16,6,25,13,"withClamp"],[16,15,25,22],[16,18,25,22,"exports"],[16,25,25,22],[16,26,25,22,"withClamp"],[16,35,25,22],[16,38,25,25],[17,4,25,25],[17,8,25,25,"reactNativeReanimated_clampTs1"],[17,38,25,25],[17,50,25,25,"reactNativeReanimated_clampTs1"],[17,51,26,2,"config"],[17,57,26,59],[17,59,27,2,"_animationToClamp"],[17,76,27,68],[17,78,28,29],[18,6,30,2],[18,13,30,9],[18,17,30,9,"defineAnimation"],[18,38,30,24],[18,40,31,4,"_animationToClamp"],[18,57,31,21],[18,59,32,4],[19,8,32,4],[19,12,32,4,"reactNativeReanimated_clampTs2"],[19,42,32,4],[19,54,32,4,"reactNativeReanimated_clampTs2"],[19,55,32,4],[19,57,32,26],[20,10,34,6],[20,14,34,12,"animationToClamp"],[20,30,34,28],[20,33,35,8],[20,40,35,15,"_animationToClamp"],[20,57,35,32],[20,62,35,37],[20,72,35,47],[20,75,36,12,"_animationToClamp"],[20,92,36,29],[20,93,36,30],[20,94,36,31],[20,97,37,12,"_animationToClamp"],[20,114,37,29],[21,10,39,6],[21,14,39,12,"strippedMin"],[21,25,39,23],[21,28,40,8,"config"],[21,34,40,14],[21,35,40,15,"min"],[21,38,40,18],[21,43,40,23,"undefined"],[21,52,40,32],[21,55,41,12,"undefined"],[21,64,41,21],[21,67,42,12],[21,71,42,12,"recognizePrefixSuffix"],[21,98,42,33],[21,100,42,34,"config"],[21,106,42,40],[21,107,42,41,"min"],[21,110,42,44],[21,111,42,45],[21,112,42,46,"strippedValue"],[21,125,42,59],[22,10,44,6],[22,14,44,12,"strippedMax"],[22,25,44,23],[22,28,45,8,"config"],[22,34,45,14],[22,35,45,15,"max"],[22,38,45,18],[22,43,45,23,"undefined"],[22,52,45,32],[22,55,46,12,"undefined"],[22,64,46,21],[22,67,47,12],[22,71,47,12,"recognizePrefixSuffix"],[22,98,47,33],[22,100,47,34,"config"],[22,106,47,40],[22,107,47,41,"max"],[22,110,47,44],[22,111,47,45],[22,112,47,46,"strippedValue"],[22,125,47,59],[23,10,49,6],[23,19,49,15,"clampOnFrame"],[23,31,49,27,"clampOnFrame"],[23,32,50,8,"animation"],[23,41,50,33],[23,43,51,8,"now"],[23,46,51,22],[23,48,52,17],[24,12,53,8],[24,16,53,14,"finished"],[24,24,53,22],[24,27,53,25,"animationToClamp"],[24,43,53,41],[24,44,53,42,"onFrame"],[24,51,53,49],[24,52,53,50,"animationToClamp"],[24,68,53,66],[24,70,53,68,"now"],[24,73,53,71],[24,74,53,72],[25,12,55,8],[25,16,55,12,"animationToClamp"],[25,32,55,28],[25,33,55,29,"current"],[25,40,55,36],[25,45,55,41,"undefined"],[25,54,55,50],[25,56,55,52],[26,14,56,10,"logger"],[26,28,56,16],[26,29,56,17,"warn"],[26,33,56,21],[26,34,57,12],[26,117,58,10],[26,118,58,11],[27,14,59,10],[27,21,59,17],[27,25,59,21],[28,12,60,8],[28,13,60,9],[28,19,60,15],[29,14,61,10],[29,18,61,10,"_recognizePrefixSuffi"],[29,39,61,10],[29,42,61,52],[29,46,61,52,"recognizePrefixSuffix"],[29,73,61,73],[29,75,62,12,"animationToClamp"],[29,91,62,28],[29,92,62,29,"current"],[29,99,63,10],[29,100,63,11],[30,16,61,18,"prefix"],[30,22,61,24],[30,25,61,24,"_recognizePrefixSuffi"],[30,46,61,24],[30,47,61,18,"prefix"],[30,53,61,24],[31,16,61,26,"strippedValue"],[31,29,61,39],[31,32,61,39,"_recognizePrefixSuffi"],[31,53,61,39],[31,54,61,26,"strippedValue"],[31,67,61,39],[32,16,61,41,"suffix"],[32,22,61,47],[32,25,61,47,"_recognizePrefixSuffi"],[32,46,61,47],[32,47,61,41,"suffix"],[32,53,61,47],[33,14,65,10],[33,18,65,14,"newValue"],[33,26,65,22],[34,14,67,10],[34,18,67,14,"strippedMax"],[34,29,67,25],[34,34,67,30,"undefined"],[34,43,67,39],[34,47,67,43,"strippedMax"],[34,58,67,54],[34,61,67,57,"strippedValue"],[34,74,67,70],[34,76,67,72],[35,16,68,12,"newValue"],[35,24,68,20],[35,27,68,23,"strippedMax"],[35,38,68,34],[36,14,69,10],[36,15,69,11],[36,21,69,17],[36,25,69,21,"strippedMin"],[36,36,69,32],[36,41,69,37,"undefined"],[36,50,69,46],[36,54,69,50,"strippedMin"],[36,65,69,61],[36,68,69,64,"strippedValue"],[36,81,69,77],[36,83,69,79],[37,16,70,12,"newValue"],[37,24,70,20],[37,27,70,23,"strippedMin"],[37,38,70,34],[38,14,71,10],[38,15,71,11],[38,21,71,17],[39,16,72,12,"newValue"],[39,24,72,20],[39,27,72,23,"strippedValue"],[39,40,72,36],[40,14,73,10],[41,14,75,10,"animation"],[41,23,75,19],[41,24,75,20,"current"],[41,31,75,27],[41,34,76,12],[41,41,76,19,"animationToClamp"],[41,57,76,35],[41,58,76,36,"current"],[41,65,76,43],[41,70,76,48],[41,78,76,56],[41,81,77,16,"newValue"],[41,89,77,24],[41,92,78,16],[41,95,78,19,"prefix"],[41,101,78,25],[41,106,78,30,"undefined"],[41,115,78,39],[41,118,78,42],[41,120,78,44],[41,123,78,47,"prefix"],[41,129,78,53],[41,132,78,56,"newValue"],[41,140,78,64],[41,143,79,18,"suffix"],[41,149,79,24],[41,154,79,29,"undefined"],[41,163,79,38],[41,166,79,41],[41,168,79,43],[41,171,79,46,"suffix"],[41,177,79,52],[41,179,80,18],[42,12,81,8],[43,12,83,8],[43,19,83,15,"finished"],[43,27,83,23],[44,10,84,6],[45,10,86,6],[45,19,86,15,"onStart"],[45,26,86,22,"onStart"],[45,27,87,8,"animation"],[45,36,87,33],[45,38,88,8,"value"],[45,43,88,30],[45,45,89,8,"now"],[45,48,89,22],[45,50,90,8,"previousAnimation"],[45,67,90,48],[45,69,91,14],[46,12,92,8,"animation"],[46,21,92,17],[46,22,92,18,"current"],[46,29,92,25],[46,32,92,28,"value"],[46,37,92,33],[47,12,93,8,"animation"],[47,21,93,17],[47,22,93,18,"previousAnimation"],[47,39,93,35],[47,42,93,38,"animationToClamp"],[47,58,93,54],[48,12,94,8],[48,16,94,14,"animationBeforeClamped"],[48,38,94,36],[48,41,94,39,"previousAnimation"],[48,58,94,56],[48,60,94,58,"previousAnimation"],[48,77,94,75],[49,12,95,8],[49,16,96,10,"config"],[49,22,96,16],[49,23,96,17,"max"],[49,26,96,20],[49,31,96,25,"undefined"],[49,40,96,34],[49,44,97,10,"config"],[49,50,97,16],[49,51,97,17,"min"],[49,54,97,20],[49,59,97,25,"undefined"],[49,68,97,34],[49,72,98,10,"config"],[49,78,98,16],[49,79,98,17,"max"],[49,82,98,20],[49,85,98,23,"config"],[49,91,98,29],[49,92,98,30,"min"],[49,95,98,33],[49,97,99,10],[50,14,100,10,"logger"],[50,28,100,16],[50,29,100,17,"warn"],[50,33,100,21],[50,34,101,12],[50,104,102,10],[50,105,102,11],[51,12,103,8],[52,12,105,8,"animationToClamp"],[52,28,105,24],[52,29,105,25,"onStart"],[52,36,105,32],[52,37,106,10,"animationToClamp"],[52,53,106,26],[53,12,107,10],[54,0,108,0],[55,0,109,0],[56,0,110,0],[57,12,111,10,"animationBeforeClamped"],[57,34,111,32],[57,36,111,34,"current"],[57,43,111,41],[57,47,111,45,"value"],[57,52,111,50],[57,54,112,10,"now"],[57,57,112,13],[57,59,113,10,"animationBeforeClamped"],[57,81,114,8],[57,82,114,9],[58,10,115,6],[59,10,117,6],[59,14,117,12,"callback"],[59,22,117,20],[59,25,117,24,"finished"],[59,33,117,42],[59,37,117,53],[60,12,118,8],[60,16,118,12,"animationToClamp"],[60,32,118,28],[60,33,118,29,"callback"],[60,41,118,37],[60,43,118,39],[61,14,119,10,"animationToClamp"],[61,30,119,26],[61,31,119,27,"callback"],[61,39,119,35],[61,40,119,36,"finished"],[61,48,119,44],[61,49,119,45],[62,12,120,8],[63,10,121,6],[63,11,121,7],[64,10,123,6],[64,17,123,13],[65,12,124,8,"isHigherOrder"],[65,25,124,21],[65,27,124,23],[65,31,124,27],[66,12,125,8,"onFrame"],[66,19,125,15],[66,21,125,17,"clampOnFrame"],[66,33,125,29],[67,12,126,8,"onStart"],[67,19,126,15],[68,12,127,8,"current"],[68,19,127,15],[68,21,127,17,"animationToClamp"],[68,37,127,33],[68,38,127,34,"current"],[68,45,127,42],[69,12,128,8,"callback"],[69,20,128,16],[70,12,129,8,"previousAnimation"],[70,29,129,25],[70,31,129,27],[70,35,129,31],[71,12,130,8,"reduceMotion"],[71,24,130,20],[71,26,130,22],[71,30,130,22,"getReduceMotionForAnimation"],[71,63,130,49],[71,65,130,50,"config"],[71,71,130,56],[71,72,130,57,"reduceMotion"],[71,84,130,69],[72,10,131,6],[72,11,131,7],[73,8,132,4],[73,9,132,5],[74,8,132,5,"reactNativeReanimated_clampTs2"],[74,38,132,5],[74,39,132,5,"__closure"],[74,48,132,5],[75,10,132,5,"_animationToClamp"],[75,27,132,5],[76,10,132,5,"config"],[76,16,132,5],[77,10,132,5,"recognizePrefixSuffix"],[77,31,132,5],[77,33,42,12,"recognizePrefixSuffix"],[77,60,42,33],[78,10,42,33,"logger"],[78,16,42,33],[78,18,56,10,"logger"],[78,32,56,16],[79,10,56,16,"getReduceMotionForAnimation"],[79,37,56,16],[79,39,130,22,"getReduceMotionForAnimation"],[80,8,130,49],[81,8,130,49,"reactNativeReanimated_clampTs2"],[81,38,130,49],[81,39,130,49,"__workletHash"],[81,52,130,49],[82,8,130,49,"reactNativeReanimated_clampTs2"],[82,38,130,49],[82,39,130,49,"__initData"],[82,49,130,49],[82,52,130,49,"_worklet_16708136470473_init_data"],[82,85,130,49],[83,8,130,49],[83,15,130,49,"reactNativeReanimated_clampTs2"],[83,45,130,49],[84,6,130,49],[84,7,32,4],[84,9,133,2],[84,10,133,3],[85,4,134,0],[85,5,134,1],[86,4,134,1,"reactNativeReanimated_clampTs1"],[86,34,134,1],[86,35,134,1,"__closure"],[86,44,134,1],[87,6,134,1,"defineAnimation"],[87,21,134,1],[87,23,30,9,"defineAnimation"],[87,44,30,24],[88,6,30,24,"recognizePrefixSuffix"],[88,27,30,24],[88,29,42,12,"recognizePrefixSuffix"],[88,56,42,33],[89,6,42,33,"logger"],[89,12,42,33],[89,14,56,10,"logger"],[89,28,56,16],[90,6,56,16,"getReduceMotionForAnimation"],[90,33,56,16],[90,35,130,22,"getReduceMotionForAnimation"],[91,4,130,49],[92,4,130,49,"reactNativeReanimated_clampTs1"],[92,34,130,49],[92,35,130,49,"__workletHash"],[92,48,130,49],[93,4,130,49,"reactNativeReanimated_clampTs1"],[93,34,130,49],[93,35,130,49,"__initData"],[93,45,130,49],[93,48,130,49,"_worklet_15494423595509_init_data"],[93,81,130,49],[94,4,130,49],[94,11,130,49,"reactNativeReanimated_clampTs1"],[94,41,130,49],[95,2,130,49],[95,3,25,25],[95,5,134,18],[96,0,134,19],[96,3]],"functionMap":{"names":["<global>","<anonymous>","defineAnimation$argument_1","clampOnFrame","onStart","callback"],"mappings":"AAA;yBCwB;ICO;MCiB;ODmC;MEE;OF6B;uBGE;OHI;KDW;CDE"}},"type":"js/module"}]}