{"dependencies":[{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":40,"index":40}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SHEET_FIT_TO_CONTENTS = exports.SHEET_DIMMED_ALWAYS = exports.SHEET_COMPAT_MEDIUM = exports.SHEET_COMPAT_LARGE = exports.SHEET_COMPAT_ALL = undefined;\n  exports.assertDetentsArrayIsSorted = assertDetentsArrayIsSorted;\n  exports.resolveSheetAllowedDetents = resolveSheetAllowedDetents;\n  exports.resolveSheetInitialDetentIndex = resolveSheetInitialDetentIndex;\n  exports.resolveSheetLargestUndimmedDetent = resolveSheetLargestUndimmedDetent;\n  var _reactNative = require(_dependencyMap[0]);\n  // This value must be kept in sync with native side.\n  var SHEET_FIT_TO_CONTENTS = exports.SHEET_FIT_TO_CONTENTS = [-1];\n  var SHEET_COMPAT_LARGE = exports.SHEET_COMPAT_LARGE = [1.0];\n  var SHEET_COMPAT_MEDIUM = exports.SHEET_COMPAT_MEDIUM = [0.5];\n  var SHEET_COMPAT_ALL = exports.SHEET_COMPAT_ALL = [0.5, 1.0];\n  var SHEET_DIMMED_ALWAYS = exports.SHEET_DIMMED_ALWAYS = -1;\n  function assertDetentsArrayIsSorted(array) {\n    for (var i = 1; i < array.length; i++) {\n      if (array[i - 1] > array[i]) {\n        throw new Error('[RNScreens] The detent array is not sorted in ascending order!');\n      }\n    }\n  }\n\n  // These exist to transform old 'legacy' values used by the formsheet API to the new API shape.\n  // We can get rid of it, once we get rid of support for legacy values: 'large', 'medium', 'all'.\n  function resolveSheetAllowedDetents(allowedDetentsCompat) {\n    if (Array.isArray(allowedDetentsCompat)) {\n      if (allowedDetentsCompat.length > 3) {\n        allowedDetentsCompat = allowedDetentsCompat.slice(0, 3);\n      }\n      return allowedDetentsCompat;\n    } else if (allowedDetentsCompat === 'fitToContents') {\n      return SHEET_FIT_TO_CONTENTS;\n    } else if (allowedDetentsCompat === 'large') {\n      return SHEET_COMPAT_LARGE;\n    } else if (allowedDetentsCompat === 'medium') {\n      return SHEET_COMPAT_MEDIUM;\n    } else if (allowedDetentsCompat === 'all') {\n      return SHEET_COMPAT_ALL;\n    } else {\n      // Safe default, only large detent is allowed.\n      return SHEET_COMPAT_LARGE;\n    }\n  }\n  function resolveSheetLargestUndimmedDetent(lud, lastDetentIndex) {\n    if (typeof lud === 'number') {\n      if (!isIndexInClosedRange(lud, SHEET_DIMMED_ALWAYS, lastDetentIndex)) {\n        // Return default in production\n        return SHEET_DIMMED_ALWAYS;\n      }\n      return lud;\n    } else if (lud === 'last') {\n      return lastDetentIndex;\n    } else if (lud === 'none' || lud === 'all') {\n      return SHEET_DIMMED_ALWAYS;\n    } else if (lud === 'large') {\n      return 1;\n    } else if (lud === 'medium') {\n      return 0;\n    } else {\n      // Safe default, every detent is dimmed\n      return SHEET_DIMMED_ALWAYS;\n    }\n  }\n  function resolveSheetInitialDetentIndex(index, lastDetentIndex) {\n    if (index === 'last') {\n      index = lastDetentIndex;\n    } else if (index == null) {\n      // Intentional check for undefined & null ^\n      index = 0;\n    }\n    if (!isIndexInClosedRange(index, 0, lastDetentIndex)) {\n      // Return default in production\n      return 0;\n    }\n    return index;\n  }\n  function isIndexInClosedRange(value, lowerBound, upperBound) {\n    return Number.isInteger(value) && value >= lowerBound && value <= upperBound;\n  }\n});","lineCount":82,"map":[[10,2,1,0],[10,6,1,0,"_reactNative"],[10,18,1,0],[10,21,1,0,"require"],[10,28,1,0],[10,29,1,0,"_dependencyMap"],[10,43,1,0],[11,2,4,0],[12,2,5,7],[12,6,5,13,"SHEET_FIT_TO_CONTENTS"],[12,27,5,34],[12,30,5,34,"exports"],[12,37,5,34],[12,38,5,34,"SHEET_FIT_TO_CONTENTS"],[12,59,5,34],[12,62,5,37],[12,66,5,41],[13,2,6,7],[13,6,6,13,"SHEET_COMPAT_LARGE"],[13,24,6,31],[13,27,6,31,"exports"],[13,34,6,31],[13,35,6,31,"SHEET_COMPAT_LARGE"],[13,53,6,31],[13,56,6,34],[13,57,6,35],[13,60,6,38],[13,61,6,39],[14,2,7,7],[14,6,7,13,"SHEET_COMPAT_MEDIUM"],[14,25,7,32],[14,28,7,32,"exports"],[14,35,7,32],[14,36,7,32,"SHEET_COMPAT_MEDIUM"],[14,55,7,32],[14,58,7,35],[14,59,7,36],[14,62,7,39],[14,63,7,40],[15,2,8,7],[15,6,8,13,"SHEET_COMPAT_ALL"],[15,22,8,29],[15,25,8,29,"exports"],[15,32,8,29],[15,33,8,29,"SHEET_COMPAT_ALL"],[15,49,8,29],[15,52,8,32],[15,53,8,33],[15,56,8,36],[15,58,8,38],[15,61,8,41],[15,62,8,42],[16,2,9,7],[16,6,9,13,"SHEET_DIMMED_ALWAYS"],[16,25,9,32],[16,28,9,32,"exports"],[16,35,9,32],[16,36,9,32,"SHEET_DIMMED_ALWAYS"],[16,55,9,32],[16,60,9,37],[17,2,11,7],[17,11,11,16,"assertDetentsArrayIsSorted"],[17,37,11,42,"assertDetentsArrayIsSorted"],[17,38,11,43,"array"],[17,43,11,58],[17,45,11,60],[18,4,12,2],[18,9,12,7],[18,13,12,11,"i"],[18,14,12,12],[18,17,12,15],[18,18,12,16],[18,20,12,18,"i"],[18,21,12,19],[18,24,12,22,"array"],[18,29,12,27],[18,30,12,28,"length"],[18,36,12,34],[18,38,12,36,"i"],[18,39,12,37],[18,41,12,39],[18,43,12,41],[19,6,13,4],[19,10,13,8,"array"],[19,15,13,13],[19,16,13,14,"i"],[19,17,13,15],[19,20,13,18],[19,21,13,19],[19,22,13,20],[19,25,13,23,"array"],[19,30,13,28],[19,31,13,29,"i"],[19,32,13,30],[19,33,13,31],[19,35,13,33],[20,8,14,6],[20,14,14,12],[20,18,14,16,"Error"],[20,23,14,21],[20,24,15,8],[20,88,16,6],[20,89,16,7],[21,6,17,4],[22,4,18,2],[23,2,19,0],[25,2,21,0],[26,2,22,0],[27,2,23,7],[27,11,23,16,"resolveSheetAllowedDetents"],[27,37,23,42,"resolveSheetAllowedDetents"],[27,38,24,2,"allowedDetentsCompat"],[27,58,24,58],[27,60,25,12],[28,4,26,2],[28,8,26,6,"Array"],[28,13,26,11],[28,14,26,12,"isArray"],[28,21,26,19],[28,22,26,20,"allowedDetentsCompat"],[28,42,26,40],[28,43,26,41],[28,45,26,43],[29,6,27,4],[29,10,27,37,"allowedDetentsCompat"],[29,30,27,57],[29,31,27,58,"length"],[29,37,27,64],[29,40,27,67],[29,41,27,68],[29,43,27,70],[30,8,33,6,"allowedDetentsCompat"],[30,28,33,26],[30,31,33,29,"allowedDetentsCompat"],[30,51,33,49],[30,52,33,50,"slice"],[30,57,33,55],[30,58,33,56],[30,59,33,57],[30,61,33,59],[30,62,33,60],[30,63,33,61],[31,6,34,4],[32,6,38,4],[32,13,38,11,"allowedDetentsCompat"],[32,33,38,31],[33,4,39,2],[33,5,39,3],[33,11,39,9],[33,15,39,13,"allowedDetentsCompat"],[33,35,39,33],[33,40,39,38],[33,55,39,53],[33,57,39,55],[34,6,40,4],[34,13,40,11,"SHEET_FIT_TO_CONTENTS"],[34,34,40,32],[35,4,41,2],[35,5,41,3],[35,11,41,9],[35,15,41,13,"allowedDetentsCompat"],[35,35,41,33],[35,40,41,38],[35,47,41,45],[35,49,41,47],[36,6,42,4],[36,13,42,11,"SHEET_COMPAT_LARGE"],[36,31,42,29],[37,4,43,2],[37,5,43,3],[37,11,43,9],[37,15,43,13,"allowedDetentsCompat"],[37,35,43,33],[37,40,43,38],[37,48,43,46],[37,50,43,48],[38,6,44,4],[38,13,44,11,"SHEET_COMPAT_MEDIUM"],[38,32,44,30],[39,4,45,2],[39,5,45,3],[39,11,45,9],[39,15,45,13,"allowedDetentsCompat"],[39,35,45,33],[39,40,45,38],[39,45,45,43],[39,47,45,45],[40,6,46,4],[40,13,46,11,"SHEET_COMPAT_ALL"],[40,29,46,27],[41,4,47,2],[41,5,47,3],[41,11,47,9],[42,6,48,4],[43,6,49,4],[43,13,49,11,"SHEET_COMPAT_LARGE"],[43,31,49,29],[44,4,50,2],[45,2,51,0],[46,2,53,7],[46,11,53,16,"resolveSheetLargestUndimmedDetent"],[46,44,53,49,"resolveSheetLargestUndimmedDetent"],[46,45,54,2,"lud"],[46,48,54,53],[46,50,55,2,"lastDetentIndex"],[46,65,55,25],[46,67,56,10],[47,4,57,2],[47,8,57,6],[47,15,57,13,"lud"],[47,18,57,16],[47,23,57,21],[47,31,57,29],[47,33,57,31],[48,6,58,4],[48,10,58,8],[48,11,58,9,"isIndexInClosedRange"],[48,31,58,29],[48,32,58,30,"lud"],[48,35,58,33],[48,37,58,35,"SHEET_DIMMED_ALWAYS"],[48,56,58,54],[48,58,58,56,"lastDetentIndex"],[48,73,58,71],[48,74,58,72],[48,76,58,74],[49,8,64,6],[50,8,65,6],[50,15,65,13,"SHEET_DIMMED_ALWAYS"],[50,34,65,32],[51,6,66,4],[52,6,67,4],[52,13,67,11,"lud"],[52,16,67,14],[53,4,68,2],[53,5,68,3],[53,11,68,9],[53,15,68,13,"lud"],[53,18,68,16],[53,23,68,21],[53,29,68,27],[53,31,68,29],[54,6,69,4],[54,13,69,11,"lastDetentIndex"],[54,28,69,26],[55,4,70,2],[55,5,70,3],[55,11,70,9],[55,15,70,13,"lud"],[55,18,70,16],[55,23,70,21],[55,29,70,27],[55,33,70,31,"lud"],[55,36,70,34],[55,41,70,39],[55,46,70,44],[55,48,70,46],[56,6,71,4],[56,13,71,11,"SHEET_DIMMED_ALWAYS"],[56,32,71,30],[57,4,72,2],[57,5,72,3],[57,11,72,9],[57,15,72,13,"lud"],[57,18,72,16],[57,23,72,21],[57,30,72,28],[57,32,72,30],[58,6,73,4],[58,13,73,11],[58,14,73,12],[59,4,74,2],[59,5,74,3],[59,11,74,9],[59,15,74,13,"lud"],[59,18,74,16],[59,23,74,21],[59,31,74,29],[59,33,74,31],[60,6,75,4],[60,13,75,11],[60,14,75,12],[61,4,76,2],[61,5,76,3],[61,11,76,9],[62,6,77,4],[63,6,78,4],[63,13,78,11,"SHEET_DIMMED_ALWAYS"],[63,32,78,30],[64,4,79,2],[65,2,80,0],[66,2,82,7],[66,11,82,16,"resolveSheetInitialDetentIndex"],[66,41,82,46,"resolveSheetInitialDetentIndex"],[66,42,83,2,"index"],[66,47,83,47],[66,49,84,2,"lastDetentIndex"],[66,64,84,25],[66,66,85,10],[67,4,86,2],[67,8,86,6,"index"],[67,13,86,11],[67,18,86,16],[67,24,86,22],[67,26,86,24],[68,6,87,4,"index"],[68,11,87,9],[68,14,87,12,"lastDetentIndex"],[68,29,87,27],[69,4,88,2],[69,5,88,3],[69,11,88,9],[69,15,88,13,"index"],[69,20,88,18],[69,24,88,22],[69,28,88,26],[69,30,88,28],[70,6,89,4],[71,6,90,4,"index"],[71,11,90,9],[71,14,90,12],[71,15,90,13],[72,4,91,2],[73,4,92,2],[73,8,92,6],[73,9,92,7,"isIndexInClosedRange"],[73,29,92,27],[73,30,92,28,"index"],[73,35,92,33],[73,37,92,35],[73,38,92,36],[73,40,92,38,"lastDetentIndex"],[73,55,92,53],[73,56,92,54],[73,58,92,56],[74,6,98,4],[75,6,99,4],[75,13,99,11],[75,14,99,12],[76,4,100,2],[77,4,101,2],[77,11,101,9,"index"],[77,16,101,14],[78,2,102,0],[79,2,104,0],[79,11,104,9,"isIndexInClosedRange"],[79,31,104,29,"isIndexInClosedRange"],[79,32,105,2,"value"],[79,37,105,15],[79,39,106,2,"lowerBound"],[79,49,106,20],[79,51,107,2,"upperBound"],[79,61,107,20],[79,63,108,11],[80,4,109,2],[80,11,109,9,"Number"],[80,17,109,15],[80,18,109,16,"isInteger"],[80,27,109,25],[80,28,109,26,"value"],[80,33,109,31],[80,34,109,32],[80,38,109,36,"value"],[80,43,109,41],[80,47,109,45,"lowerBound"],[80,57,109,55],[80,61,109,59,"value"],[80,66,109,64],[80,70,109,68,"upperBound"],[80,80,109,78],[81,2,110,0],[82,0,110,1],[82,3]],"functionMap":{"names":["<global>","assertDetentsArrayIsSorted","resolveSheetAllowedDetents","resolveSheetLargestUndimmedDetent","resolveSheetInitialDetentIndex","isIndexInClosedRange"],"mappings":"AAA;OCU;CDQ;OEI;CF4B;OGE;CH2B;OIE;CJoB;AKE;CLM"}},"type":"js/module"}]}