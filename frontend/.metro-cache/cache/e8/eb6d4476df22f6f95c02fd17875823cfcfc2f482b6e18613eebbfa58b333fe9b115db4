{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":39,"index":39}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"]}},{"name":"./localChat","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":40},"end":{"line":2,"column":56,"index":96}}],"key":"aXvKl/lmPsjnZryl5znHfKnmrlU=","exportNames":["*"]}},{"name":"./summary","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":97},"end":{"line":3,"column":45,"index":142}}],"key":"3AleHoplC8CAd676xho2Y/OsXUw=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.callCloudLLM = callCloudLLM;\n  exports.getAIStatus = getAIStatus;\n  exports.hybridGreeting = hybridGreeting;\n  exports.hybridReply = hybridReply;\n  exports.testCloudConnection = testCloudConnection;\n  var _expoConstants = _interopRequireDefault(require(_dependencyMap[1], \"expo-constants\"));\n  var _localChat = require(_dependencyMap[2], \"./localChat\");\n  var _summary = require(_dependencyMap[3], \"./summary\");\n  // Direct OpenAI API integration using Emergent LLM Key\n  const getEmergentLLMKey = () => {\n    // Try multiple ways to get the key\n    return _expoConstants.default.expoConfig?.extra?.EXPO_PUBLIC_EMERGENT_LLM_KEY || _expoConstants.default.manifest?.extra?.EXPO_PUBLIC_EMERGENT_LLM_KEY || (typeof process !== 'undefined' ? process.env?.EXPO_PUBLIC_EMERGENT_LLM_KEY : null) || 'sk-emergent-e34Af18EdBf12063f7'; // Fallback\n  };\n  function fetchWithTimeout(input, init = {}, timeoutMs = 8000) {\n    const controller = new AbortController();\n    const id = setTimeout(() => controller.abort(), timeoutMs);\n    const opts = {\n      ...init,\n      signal: controller.signal\n    };\n    return fetch(input, opts).finally(() => clearTimeout(id));\n  }\n\n  /**\n   * Test if Direct LLM is reachable by doing a simple health check\n   */\n  async function testCloudConnection() {\n    const EMERGENT_LLM_KEY = getEmergentLLMKey();\n    if (!EMERGENT_LLM_KEY) {\n      console.warn('No Emergent LLM Key available');\n      return false;\n    }\n    try {\n      // Simple test request to OpenAI API\n      const response = await fetchWithTimeout('https://api.openai.com/v1/models', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${EMERGENT_LLM_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      }, 3000);\n      return response?.ok === true;\n    } catch (error) {\n      console.warn('Direct LLM connection test failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Call OpenAI API directly using Emergent LLM Key\n   */\n  async function callCloudLLM(request) {\n    const EMERGENT_LLM_KEY = getEmergentLLMKey();\n    if (!EMERGENT_LLM_KEY) {\n      throw new Error('No Emergent LLM Key available');\n    }\n    try {\n      const systemPrompt = request.language === 'de' ? 'Du bist Gugi, ein freundlicher Gesundheitscoach. Antworte kurz und hilfsreich auf Deutsch.' : request.language === 'pl' ? 'JesteÅ› Gugi, przyjaznym trenerem zdrowia. Odpowiadaj krÃ³tko i pomocnie po polsku.' : 'You are Gugi, a friendly health coach. Respond briefly and helpfully in English.';\n      const messages = [{\n        role: 'system',\n        content: systemPrompt\n      }];\n      if (request.mode === 'greeting') {\n        // Create greeting based on summary\n        const summaryText = request.summary ? `User data: ${JSON.stringify(request.summary, null, 2)}` : 'No user data available';\n        messages.push({\n          role: 'user',\n          content: request.language === 'de' ? `BegrÃ¼ÃŸe mich freundlich als Gesundheitscoach. Hier sind meine Daten: ${summaryText}` : request.language === 'pl' ? `Przywitaj mnie przyjaÅºnie jako trener zdrowia. Oto moje dane: ${summaryText}` : `Greet me friendly as a health coach. Here's my data: ${summaryText}`\n        });\n      } else {\n        // Add chat history and current message\n        if (request.messages) {\n          messages.push(...request.messages);\n        }\n      }\n      const response = await fetchWithTimeout('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${EMERGENT_LLM_KEY}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          model: request.model || 'gpt-4o-mini',\n          messages,\n          max_tokens: 280,\n          temperature: 0.4\n        })\n      }, 8000);\n      if (!response?.ok) {\n        const errorText = await response.text?.();\n        throw new Error(`OpenAI API responded with status ${response?.status}: ${errorText}`);\n      }\n      const data = await response.json();\n      const content = data.choices?.[0]?.message?.content || '';\n      if (!content.trim()) {\n        throw new Error('Empty response from OpenAI API');\n      }\n      return content.trim();\n    } catch (error) {\n      console.warn('Direct LLM call failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Hybrid greeting - tries Cloud LLM first, falls back to local\n   */\n  async function hybridGreeting(state) {\n    try {\n      // Test connection first\n      const isConnected = await testCloudConnection();\n      if (!isConnected) {\n        throw new Error('Cloud LLM not reachable');\n      }\n\n      // Prepare summary for Cloud LLM\n      const summary = (0, _summary.computeAISummary)(state);\n      const request = {\n        mode: 'greeting',\n        language: state.language || 'de',\n        model: 'gpt-4o-mini',\n        summary\n      };\n      const result = await callCloudLLM(request);\n      if (result && result.trim()) {\n        console.log('âœ… Cloud LLM greeting successful');\n        return result.trim();\n      }\n      throw new Error('Empty response from Cloud LLM');\n    } catch (error) {\n      console.log('ðŸ”„ Cloud LLM failed, falling back to local greeting:', error);\n      return await (0, _localChat.localGreeting)(state);\n    }\n  }\n\n  /**\n   * Hybrid reply - tries Cloud LLM first, falls back to local\n   */\n  async function hybridReply(state, userMessage) {\n    try {\n      // Test connection first\n      const isConnected = await testCloudConnection();\n      if (!isConnected) {\n        throw new Error('Cloud LLM not reachable');\n      }\n\n      // Prepare summary for Cloud LLM\n      const summary = (0, _summary.computeAISummary)(state);\n\n      // Get recent chat history for context\n      const recentChat = (state.chat || []).slice(-6).map(msg => ({\n        role: msg.sender === 'user' ? 'user' : 'assistant',\n        content: msg.text\n      }));\n\n      // Add current user message\n      recentChat.push({\n        role: 'user',\n        content: userMessage\n      });\n      const request = {\n        mode: 'chat',\n        language: state.language || 'de',\n        model: 'gpt-4o-mini',\n        summary,\n        messages: recentChat\n      };\n      const result = await callCloudLLM(request);\n      if (result && result.trim()) {\n        console.log('âœ… Cloud LLM reply successful');\n        return result.trim();\n      }\n      throw new Error('Empty response from Cloud LLM');\n    } catch (error) {\n      console.log('ðŸ”„ Cloud LLM failed, falling back to local reply:', error);\n      return await (0, _localChat.localReply)(state, userMessage);\n    }\n  }\n\n  /**\n   * Get current AI status for UI indication\n   */\n  async function getAIStatus() {\n    try {\n      const isConnected = await testCloudConnection();\n      return isConnected ? 'cloud' : 'local';\n    } catch (error) {\n      return 'local';\n    }\n  }\n});","lineCount":196,"map":[[11,2,1,0],[11,6,1,0,"_expoConstants"],[11,20,1,0],[11,23,1,0,"_interopRequireDefault"],[11,45,1,0],[11,46,1,0,"require"],[11,53,1,0],[11,54,1,0,"_dependencyMap"],[11,68,1,0],[12,2,2,0],[12,6,2,0,"_localChat"],[12,16,2,0],[12,19,2,0,"require"],[12,26,2,0],[12,27,2,0,"_dependencyMap"],[12,41,2,0],[13,2,3,0],[13,6,3,0,"_summary"],[13,14,3,0],[13,17,3,0,"require"],[13,24,3,0],[13,25,3,0,"_dependencyMap"],[13,39,3,0],[14,2,17,0],[15,2,18,0],[15,8,18,6,"getEmergentLLMKey"],[15,25,18,23],[15,28,18,26,"getEmergentLLMKey"],[15,29,18,26],[15,34,18,32],[16,4,19,2],[17,4,20,2],[17,11,20,9,"Constants"],[17,33,20,18],[17,34,20,19,"expoConfig"],[17,44,20,29],[17,46,20,31,"extra"],[17,51,20,36],[17,53,20,38,"EXPO_PUBLIC_EMERGENT_LLM_KEY"],[17,81,20,66],[17,85,21,9,"Constants"],[17,107,21,18],[17,108,21,19,"manifest"],[17,116,21,27],[17,118,21,29,"extra"],[17,123,21,34],[17,125,21,36,"EXPO_PUBLIC_EMERGENT_LLM_KEY"],[17,153,21,64],[17,158,22,10],[17,165,22,17,"process"],[17,172,22,24],[17,177,22,29],[17,188,22,40],[17,191,22,44,"process"],[17,198,22,51],[17,199,22,60,"env"],[17,202,22,63],[17,204,22,65,"EXPO_PUBLIC_EMERGENT_LLM_KEY"],[17,232,22,93],[17,235,22,96],[17,239,22,100],[17,240,22,101],[17,244,23,9],[17,276,23,41],[17,277,23,42],[17,278,23,43],[18,2,24,0],[18,3,24,1],[19,2,26,0],[19,11,26,9,"fetchWithTimeout"],[19,27,26,25,"fetchWithTimeout"],[19,28,26,26,"input"],[19,33,26,50],[19,35,26,52,"init"],[19,39,26,69],[19,42,26,72],[19,43,26,73],[19,44,26,74],[19,46,26,76,"timeoutMs"],[19,55,26,85],[19,58,26,88],[19,62,26,92],[19,64,26,94],[20,4,27,2],[20,10,27,8,"controller"],[20,20,27,18],[20,23,27,21],[20,27,27,25,"AbortController"],[20,42,27,40],[20,43,27,41],[20,44,27,42],[21,4,28,2],[21,10,28,8,"id"],[21,12,28,10],[21,15,28,13,"setTimeout"],[21,25,28,23],[21,26,28,24],[21,32,28,30,"controller"],[21,42,28,40],[21,43,28,41,"abort"],[21,48,28,46],[21,49,28,47],[21,50,28,48],[21,52,28,50,"timeoutMs"],[21,61,28,59],[21,62,28,60],[22,4,29,2],[22,10,29,8,"opts"],[22,14,29,25],[22,17,29,28],[23,6,29,30],[23,9,29,33,"init"],[23,13,29,37],[24,6,29,39,"signal"],[24,12,29,45],[24,14,29,47,"controller"],[24,24,29,57],[24,25,29,58,"signal"],[25,4,29,65],[25,5,29,66],[26,4,30,2],[26,11,30,9,"fetch"],[26,16,30,14],[26,17,30,15,"input"],[26,22,30,20],[26,24,30,29,"opts"],[26,28,30,33],[26,29,30,34],[26,30,30,35,"finally"],[26,37,30,42],[26,38,30,43],[26,44,30,49,"clearTimeout"],[26,56,30,61],[26,57,30,62,"id"],[26,59,30,64],[26,60,30,65],[26,61,30,66],[27,2,31,0],[29,2,33,0],[30,0,34,0],[31,0,35,0],[32,2,36,7],[32,17,36,22,"testCloudConnection"],[32,36,36,41,"testCloudConnection"],[32,37,36,41],[32,39,36,62],[33,4,37,2],[33,10,37,8,"EMERGENT_LLM_KEY"],[33,26,37,24],[33,29,37,27,"getEmergentLLMKey"],[33,46,37,44],[33,47,37,45],[33,48,37,46],[34,4,38,2],[34,8,38,6],[34,9,38,7,"EMERGENT_LLM_KEY"],[34,25,38,23],[34,27,38,25],[35,6,39,4,"console"],[35,13,39,11],[35,14,39,12,"warn"],[35,18,39,16],[35,19,39,17],[35,50,39,48],[35,51,39,49],[36,6,40,4],[36,13,40,11],[36,18,40,16],[37,4,41,2],[38,4,43,2],[38,8,43,6],[39,6,44,4],[40,6,45,4],[40,12,45,10,"response"],[40,20,45,18],[40,23,45,21],[40,29,45,27,"fetchWithTimeout"],[40,45,45,43],[40,46,45,44],[40,80,45,78],[40,82,45,80],[41,8,46,6,"method"],[41,14,46,12],[41,16,46,14],[41,21,46,19],[42,8,47,6,"headers"],[42,15,47,13],[42,17,47,15],[43,10,48,8],[43,25,48,23],[43,27,48,25],[43,37,48,35,"EMERGENT_LLM_KEY"],[43,53,48,51],[43,55,48,53],[44,10,49,8],[44,24,49,22],[44,26,49,24],[45,8,50,6],[46,6,51,4],[46,7,51,5],[46,9,51,7],[46,13,51,11],[46,14,51,12],[47,6,52,4],[47,13,52,12,"response"],[47,21,52,20],[47,23,52,30,"ok"],[47,25,52,32],[47,30,52,37],[47,34,52,41],[48,4,53,2],[48,5,53,3],[48,6,53,4],[48,13,53,11,"error"],[48,18,53,16],[48,20,53,18],[49,6,54,4,"console"],[49,13,54,11],[49,14,54,12,"warn"],[49,18,54,16],[49,19,54,17],[49,55,54,53],[49,57,54,55,"error"],[49,62,54,60],[49,63,54,61],[50,6,55,4],[50,13,55,11],[50,18,55,16],[51,4,56,2],[52,2,57,0],[54,2,59,0],[55,0,60,0],[56,0,61,0],[57,2,62,7],[57,17,62,22,"callCloudLLM"],[57,29,62,34,"callCloudLLM"],[57,30,62,35,"request"],[57,37,62,60],[57,39,62,79],[58,4,63,2],[58,10,63,8,"EMERGENT_LLM_KEY"],[58,26,63,24],[58,29,63,27,"getEmergentLLMKey"],[58,46,63,44],[58,47,63,45],[58,48,63,46],[59,4,64,2],[59,8,64,6],[59,9,64,7,"EMERGENT_LLM_KEY"],[59,25,64,23],[59,27,64,25],[60,6,65,4],[60,12,65,10],[60,16,65,14,"Error"],[60,21,65,19],[60,22,65,20],[60,53,65,51],[60,54,65,52],[61,4,66,2],[62,4,68,2],[62,8,68,6],[63,6,69,4],[63,12,69,10,"systemPrompt"],[63,24,69,22],[63,27,69,25,"request"],[63,34,69,32],[63,35,69,33,"language"],[63,43,69,41],[63,48,69,46],[63,52,69,50],[63,55,70,8],[63,147,70,100],[63,150,71,8,"request"],[63,157,71,15],[63,158,71,16,"language"],[63,166,71,24],[63,171,71,29],[63,175,71,33],[63,178,72,8],[63,261,72,91],[63,264,73,8],[63,346,73,90],[64,6,75,4],[64,12,75,10,"messages"],[64,20,75,81],[64,23,75,84],[64,24,76,6],[65,8,76,8,"role"],[65,12,76,12],[65,14,76,14],[65,22,76,22],[66,8,76,24,"content"],[66,15,76,31],[66,17,76,33,"systemPrompt"],[67,6,76,46],[67,7,76,47],[67,8,77,5],[68,6,79,4],[68,10,79,8,"request"],[68,17,79,15],[68,18,79,16,"mode"],[68,22,79,20],[68,27,79,25],[68,37,79,35],[68,39,79,37],[69,8,80,6],[70,8,81,6],[70,14,81,12,"summaryText"],[70,25,81,23],[70,28,81,26,"request"],[70,35,81,33],[70,36,81,34,"summary"],[70,43,81,41],[70,46,82,8],[70,60,82,22,"JSON"],[70,64,82,26],[70,65,82,27,"stringify"],[70,74,82,36],[70,75,82,37,"request"],[70,82,82,44],[70,83,82,45,"summary"],[70,90,82,52],[70,92,82,54],[70,96,82,58],[70,98,82,60],[70,99,82,61],[70,100,82,62],[70,102,82,64],[70,105,83,8],[70,129,83,32],[71,8,85,6,"messages"],[71,16,85,14],[71,17,85,15,"push"],[71,21,85,19],[71,22,85,20],[72,10,86,8,"role"],[72,14,86,12],[72,16,86,14],[72,22,86,20],[73,10,87,8,"content"],[73,17,87,15],[73,19,87,17,"request"],[73,26,87,24],[73,27,87,25,"language"],[73,35,87,33],[73,40,87,38],[73,44,87,42],[73,47,88,12],[73,119,88,84,"summaryText"],[73,130,88,95],[73,132,88,97],[73,135,89,12,"request"],[73,142,89,19],[73,143,89,20,"language"],[73,151,89,28],[73,156,89,33],[73,160,89,37],[73,163,90,12],[73,228,90,77,"summaryText"],[73,239,90,88],[73,241,90,90],[73,244,91,12],[73,300,91,68,"summaryText"],[73,311,91,79],[74,8,92,6],[74,9,92,7],[74,10,92,8],[75,6,93,4],[75,7,93,5],[75,13,93,11],[76,8,94,6],[77,8,95,6],[77,12,95,10,"request"],[77,19,95,17],[77,20,95,18,"messages"],[77,28,95,26],[77,30,95,28],[78,10,96,8,"messages"],[78,18,96,16],[78,19,96,17,"push"],[78,23,96,21],[78,24,96,22],[78,27,96,25,"request"],[78,34,96,32],[78,35,96,33,"messages"],[78,43,96,41],[78,44,96,42],[79,8,97,6],[80,6,98,4],[81,6,100,4],[81,12,100,10,"response"],[81,20,100,18],[81,23,100,21],[81,29,100,27,"fetchWithTimeout"],[81,45,100,43],[81,46,100,44],[81,90,100,88],[81,92,100,90],[82,8,101,6,"method"],[82,14,101,12],[82,16,101,14],[82,22,101,20],[83,8,102,6,"headers"],[83,15,102,13],[83,17,102,15],[84,10,103,8],[84,25,103,23],[84,27,103,25],[84,37,103,35,"EMERGENT_LLM_KEY"],[84,53,103,51],[84,55,103,53],[85,10,104,8],[85,24,104,22],[85,26,104,24],[86,8,105,6],[86,9,105,7],[87,8,106,6,"body"],[87,12,106,10],[87,14,106,12,"JSON"],[87,18,106,16],[87,19,106,17,"stringify"],[87,28,106,26],[87,29,106,27],[88,10,107,8,"model"],[88,15,107,13],[88,17,107,15,"request"],[88,24,107,22],[88,25,107,23,"model"],[88,30,107,28],[88,34,107,32],[88,47,107,45],[89,10,108,8,"messages"],[89,18,108,16],[90,10,109,8,"max_tokens"],[90,20,109,18],[90,22,109,20],[90,25,109,23],[91,10,110,8,"temperature"],[91,21,110,19],[91,23,110,21],[92,8,111,6],[92,9,111,7],[93,6,112,4],[93,7,112,5],[93,9,112,7],[93,13,112,11],[93,14,112,12],[94,6,114,4],[94,10,114,8],[94,11,114,10,"response"],[94,19,114,18],[94,21,114,28,"ok"],[94,23,114,30],[94,25,114,32],[95,8,115,6],[95,14,115,12,"errorText"],[95,23,115,21],[95,26,115,24],[95,32,115,31,"response"],[95,40,115,39],[95,41,115,48,"text"],[95,45,115,52],[95,48,115,55],[95,49,115,56],[96,8,116,6],[96,14,116,12],[96,18,116,16,"Error"],[96,23,116,21],[96,24,116,22],[96,60,116,59,"response"],[96,68,116,67],[96,70,116,77,"status"],[96,76,116,83],[96,81,116,88,"errorText"],[96,90,116,97],[96,92,116,99],[96,93,116,100],[97,6,117,4],[98,6,119,4],[98,12,119,10,"data"],[98,16,119,14],[98,19,119,17],[98,25,119,24,"response"],[98,33,119,32],[98,34,119,41,"json"],[98,38,119,45],[98,39,119,46],[98,40,119,47],[99,6,120,4],[99,12,120,10,"content"],[99,19,120,17],[99,22,120,20,"data"],[99,26,120,24],[99,27,120,25,"choices"],[99,34,120,32],[99,37,120,35],[99,38,120,36],[99,39,120,37],[99,41,120,39,"message"],[99,48,120,46],[99,50,120,48,"content"],[99,57,120,55],[99,61,120,59],[99,63,120,61],[100,6,122,4],[100,10,122,8],[100,11,122,9,"content"],[100,18,122,16],[100,19,122,17,"trim"],[100,23,122,21],[100,24,122,22],[100,25,122,23],[100,27,122,25],[101,8,123,6],[101,14,123,12],[101,18,123,16,"Error"],[101,23,123,21],[101,24,123,22],[101,56,123,54],[101,57,123,55],[102,6,124,4],[103,6,126,4],[103,13,126,11,"content"],[103,20,126,18],[103,21,126,19,"trim"],[103,25,126,23],[103,26,126,24],[103,27,126,25],[104,4,127,2],[104,5,127,3],[104,6,127,4],[104,13,127,11,"error"],[104,18,127,16],[104,20,127,18],[105,6,128,4,"console"],[105,13,128,11],[105,14,128,12,"warn"],[105,18,128,16],[105,19,128,17],[105,44,128,42],[105,46,128,44,"error"],[105,51,128,49],[105,52,128,50],[106,6,129,4],[106,12,129,10,"error"],[106,17,129,15],[107,4,130,2],[108,2,131,0],[110,2,133,0],[111,0,134,0],[112,0,135,0],[113,2,136,7],[113,17,136,22,"hybridGreeting"],[113,31,136,36,"hybridGreeting"],[113,32,136,37,"state"],[113,37,136,47],[113,39,136,66],[114,4,137,2],[114,8,137,6],[115,6,138,4],[116,6,139,4],[116,12,139,10,"isConnected"],[116,23,139,21],[116,26,139,24],[116,32,139,30,"testCloudConnection"],[116,51,139,49],[116,52,139,50],[116,53,139,51],[117,6,140,4],[117,10,140,8],[117,11,140,9,"isConnected"],[117,22,140,20],[117,24,140,22],[118,8,141,6],[118,14,141,12],[118,18,141,16,"Error"],[118,23,141,21],[118,24,141,22],[118,49,141,47],[118,50,141,48],[119,6,142,4],[121,6,144,4],[122,6,145,4],[122,12,145,10,"summary"],[122,19,145,17],[122,22,145,20],[122,26,145,20,"computeAISummary"],[122,51,145,36],[122,53,145,37,"state"],[122,58,145,42],[122,59,145,43],[123,6,147,4],[123,12,147,10,"request"],[123,19,147,35],[123,22,147,38],[124,8,148,6,"mode"],[124,12,148,10],[124,14,148,12],[124,24,148,22],[125,8,149,6,"language"],[125,16,149,14],[125,18,149,16,"state"],[125,23,149,21],[125,24,149,22,"language"],[125,32,149,30],[125,36,149,34],[125,40,149,38],[126,8,150,6,"model"],[126,13,150,11],[126,15,150,13],[126,28,150,26],[127,8,151,6,"summary"],[128,6,152,4],[128,7,152,5],[129,6,154,4],[129,12,154,10,"result"],[129,18,154,16],[129,21,154,19],[129,27,154,25,"callCloudLLM"],[129,39,154,37],[129,40,154,38,"request"],[129,47,154,45],[129,48,154,46],[130,6,155,4],[130,10,155,8,"result"],[130,16,155,14],[130,20,155,18,"result"],[130,26,155,24],[130,27,155,25,"trim"],[130,31,155,29],[130,32,155,30],[130,33,155,31],[130,35,155,33],[131,8,156,6,"console"],[131,15,156,13],[131,16,156,14,"log"],[131,19,156,17],[131,20,156,18],[131,53,156,51],[131,54,156,52],[132,8,157,6],[132,15,157,13,"result"],[132,21,157,19],[132,22,157,20,"trim"],[132,26,157,24],[132,27,157,25],[132,28,157,26],[133,6,158,4],[134,6,160,4],[134,12,160,10],[134,16,160,14,"Error"],[134,21,160,19],[134,22,160,20],[134,53,160,51],[134,54,160,52],[135,4,161,2],[135,5,161,3],[135,6,161,4],[135,13,161,11,"error"],[135,18,161,16],[135,20,161,18],[136,6,162,4,"console"],[136,13,162,11],[136,14,162,12,"log"],[136,17,162,15],[136,18,162,16],[136,72,162,70],[136,74,162,72,"error"],[136,79,162,77],[136,80,162,78],[137,6,163,4],[137,13,163,11],[137,19,163,17],[137,23,163,17,"localGreeting"],[137,47,163,30],[137,49,163,31,"state"],[137,54,163,36],[137,55,163,37],[138,4,164,2],[139,2,165,0],[141,2,167,0],[142,0,168,0],[143,0,169,0],[144,2,170,7],[144,17,170,22,"hybridReply"],[144,28,170,33,"hybridReply"],[144,29,170,34,"state"],[144,34,170,44],[144,36,170,46,"userMessage"],[144,47,170,65],[144,49,170,84],[145,4,171,2],[145,8,171,6],[146,6,172,4],[147,6,173,4],[147,12,173,10,"isConnected"],[147,23,173,21],[147,26,173,24],[147,32,173,30,"testCloudConnection"],[147,51,173,49],[147,52,173,50],[147,53,173,51],[148,6,174,4],[148,10,174,8],[148,11,174,9,"isConnected"],[148,22,174,20],[148,24,174,22],[149,8,175,6],[149,14,175,12],[149,18,175,16,"Error"],[149,23,175,21],[149,24,175,22],[149,49,175,47],[149,50,175,48],[150,6,176,4],[152,6,178,4],[153,6,179,4],[153,12,179,10,"summary"],[153,19,179,17],[153,22,179,20],[153,26,179,20,"computeAISummary"],[153,51,179,36],[153,53,179,37,"state"],[153,58,179,42],[153,59,179,43],[155,6,181,4],[156,6,182,4],[156,12,182,10,"recentChat"],[156,22,182,20],[156,25,182,23],[156,26,182,24,"state"],[156,31,182,29],[156,32,182,30,"chat"],[156,36,182,34],[156,40,182,38],[156,42,182,40],[156,44,182,42,"slice"],[156,49,182,47],[156,50,182,48],[156,51,182,49],[156,52,182,50],[156,53,182,51],[156,54,182,52,"map"],[156,57,182,55],[156,58,182,57,"msg"],[156,61,182,65],[156,66,182,71],[157,8,183,6,"role"],[157,12,183,10],[157,14,183,12,"msg"],[157,17,183,15],[157,18,183,16,"sender"],[157,24,183,22],[157,29,183,27],[157,35,183,33],[157,38,183,36],[157,44,183,42],[157,47,183,54],[157,58,183,74],[158,8,184,6,"content"],[158,15,184,13],[158,17,184,15,"msg"],[158,20,184,18],[158,21,184,19,"text"],[159,6,185,4],[159,7,185,5],[159,8,185,6],[159,9,185,7],[161,6,187,4],[162,6,188,4,"recentChat"],[162,16,188,14],[162,17,188,15,"push"],[162,21,188,19],[162,22,188,20],[163,8,188,22,"role"],[163,12,188,26],[163,14,188,28],[163,20,188,34],[164,8,188,36,"content"],[164,15,188,43],[164,17,188,45,"userMessage"],[165,6,188,57],[165,7,188,58],[165,8,188,59],[166,6,190,4],[166,12,190,10,"request"],[166,19,190,35],[166,22,190,38],[167,8,191,6,"mode"],[167,12,191,10],[167,14,191,12],[167,20,191,18],[168,8,192,6,"language"],[168,16,192,14],[168,18,192,16,"state"],[168,23,192,21],[168,24,192,22,"language"],[168,32,192,30],[168,36,192,34],[168,40,192,38],[169,8,193,6,"model"],[169,13,193,11],[169,15,193,13],[169,28,193,26],[170,8,194,6,"summary"],[170,15,194,13],[171,8,195,6,"messages"],[171,16,195,14],[171,18,195,16,"recentChat"],[172,6,196,4],[172,7,196,5],[173,6,198,4],[173,12,198,10,"result"],[173,18,198,16],[173,21,198,19],[173,27,198,25,"callCloudLLM"],[173,39,198,37],[173,40,198,38,"request"],[173,47,198,45],[173,48,198,46],[174,6,199,4],[174,10,199,8,"result"],[174,16,199,14],[174,20,199,18,"result"],[174,26,199,24],[174,27,199,25,"trim"],[174,31,199,29],[174,32,199,30],[174,33,199,31],[174,35,199,33],[175,8,200,6,"console"],[175,15,200,13],[175,16,200,14,"log"],[175,19,200,17],[175,20,200,18],[175,50,200,48],[175,51,200,49],[176,8,201,6],[176,15,201,13,"result"],[176,21,201,19],[176,22,201,20,"trim"],[176,26,201,24],[176,27,201,25],[176,28,201,26],[177,6,202,4],[178,6,204,4],[178,12,204,10],[178,16,204,14,"Error"],[178,21,204,19],[178,22,204,20],[178,53,204,51],[178,54,204,52],[179,4,205,2],[179,5,205,3],[179,6,205,4],[179,13,205,11,"error"],[179,18,205,16],[179,20,205,18],[180,6,206,4,"console"],[180,13,206,11],[180,14,206,12,"log"],[180,17,206,15],[180,18,206,16],[180,69,206,67],[180,71,206,69,"error"],[180,76,206,74],[180,77,206,75],[181,6,207,4],[181,13,207,11],[181,19,207,17],[181,23,207,17,"localReply"],[181,44,207,27],[181,46,207,28,"state"],[181,51,207,33],[181,53,207,35,"userMessage"],[181,64,207,46],[181,65,207,47],[182,4,208,2],[183,2,209,0],[185,2,211,0],[186,0,212,0],[187,0,213,0],[188,2,214,7],[188,17,214,22,"getAIStatus"],[188,28,214,33,"getAIStatus"],[188,29,214,33],[188,31,214,76],[189,4,215,2],[189,8,215,6],[190,6,216,4],[190,12,216,10,"isConnected"],[190,23,216,21],[190,26,216,24],[190,32,216,30,"testCloudConnection"],[190,51,216,49],[190,52,216,50],[190,53,216,51],[191,6,217,4],[191,13,217,11,"isConnected"],[191,24,217,22],[191,27,217,25],[191,34,217,32],[191,37,217,35],[191,44,217,42],[192,4,218,2],[192,5,218,3],[192,6,218,4],[192,13,218,11,"error"],[192,18,218,16],[192,20,218,18],[193,6,219,4],[193,13,219,11],[193,20,219,18],[194,4,220,2],[195,2,221,0],[196,0,221,1],[196,3]],"functionMap":{"names":["<global>","getEmergentLLMKey","fetchWithTimeout","setTimeout$argument_0","fetch._finally$argument_0","testCloudConnection","callCloudLLM","hybridGreeting","hybridReply","slice.map$argument_0","getAIStatus"],"mappings":"AAA;0BCiB;CDM;AEE;wBCE,wBD;2CEE,sBF;CFC;OKK;CLqB;OMK;CNqE;OOK;CP6B;OQK;wDCY;MDG;CRwB;OUK"}},"type":"js/module"}]}