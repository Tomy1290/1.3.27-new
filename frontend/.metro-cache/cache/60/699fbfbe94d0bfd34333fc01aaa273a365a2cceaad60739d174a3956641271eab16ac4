{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"aU3Lrys8xTVpYSDJal2nhppojC8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":7,"column":22,"index":133}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":134},"end":{"line":8,"column":66,"index":200}}],"key":"Ma+NL+aygNje9FkYPbYorogBWdc=","exportNames":["*"]}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":201},"end":{"line":9,"column":63,"index":264}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"]}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"]}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":299},"end":{"line":15,"column":28,"index":414}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"]}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":415},"end":{"line":16,"column":56,"index":471}}],"key":"ASeSN4ZNwd93et71FExQyqcEKrQ=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":585},"end":{"line":23,"column":64,"index":649}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}},{"name":"../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":650},"end":{"line":24,"column":47,"index":697}}],"key":"xyNSnMFPN/DtDOjbkd/LduwteJ8=","exportNames":["*"]}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":26,"column":0,"index":738},"end":{"line":32,"column":18,"index":830}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"]}},{"name":"../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":831},"end":{"line":33,"column":43,"index":874}}],"key":"9/RyJNk4Ge0yFKi3o3v4pSn63xw=","exportNames":["*"]}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":34,"column":0,"index":875},"end":{"line":34,"column":64,"index":939}}],"key":"xiOM100qt13MoYC/wKaLkt2GEAw=","exportNames":["*"]}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":35,"column":0,"index":940},"end":{"line":35,"column":77,"index":1017}}],"key":"4dFi+SgkqvO8MS5HEh2OcvBDODc=","exportNames":["*"]}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":36,"column":0,"index":1018},"end":{"line":36,"column":55,"index":1073}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"]}},{"name":"../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":37,"column":0,"index":1074},"end":{"line":37,"column":49,"index":1123}}],"key":"oDeWMahf4tOBx8qk8Rg2qrQUZVM=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"3suYSPX9nHbHZ1xNTsKXtKj0atE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2]));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(_dependencyMap[3]));\n  var _getPrototypeOf2 = _interopRequireDefault(require(_dependencyMap[4]));\n  var _inherits2 = _interopRequireDefault(require(_dependencyMap[5]));\n  var React = _interopRequireWildcard(require(_dependencyMap[6]));\n  var _reactNative = require(_dependencyMap[7]);\n  var _customDirectEventTypes = require(_dependencyMap[8]);\n  var _RNGestureHandlerModule = _interopRequireDefault(require(_dependencyMap[9]));\n  var _State = require(_dependencyMap[10]);\n  var _handlersRegistry = require(_dependencyMap[11]);\n  var _getNextHandlerTag = require(_dependencyMap[12]);\n  var _utils = require(_dependencyMap[13]);\n  var _findNodeHandle = _interopRequireDefault(require(_dependencyMap[14]));\n  var _utils2 = require(_dependencyMap[15]);\n  var _ActionType = require(_dependencyMap[16]);\n  var _PressabilityDebugView = require(_dependencyMap[17]);\n  var _GestureHandlerRootViewContext = _interopRequireDefault(require(_dependencyMap[18]));\n  var _ghQueueMicrotask = require(_dependencyMap[19]);\n  var _mountRegistry = require(_dependencyMap[20]);\n  var _jsxRuntime = require(_dependencyMap[21]);\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  var UIManagerAny = _reactNative.UIManager;\n  _customDirectEventTypes.customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  var customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  var customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    },\n    // When using React Native Gesture Handler for Animated.event with useNativeDriver: true\n    // on Android with Fabric enabled, the native part still sends the native events to JS\n    // but prefixed with \"top\". We cannot simply rename the events above so they are prefixed\n    // with \"top\" instead of \"on\" because in such case Animated.events would not be registered.\n    // That's why we need to register another pair of event names.\n    // The incoming events will be queued but never handled.\n    // Without this piece of code below, you'll get the following JS error:\n    // Unsupported top level event type \"topOnGestureHandlerEvent\" dispatched\n    ...((0, _utils2.isFabric)() && true && customGHEventsConfigFabricAndroid)\n  };\n\n  // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n  UIManagerAny.genericDirectEventTypes = {\n    ...UIManagerAny.genericDirectEventTypes,\n    ...customGHEventsConfig\n  };\n  // In newer versions of RN the `genericDirectEventTypes` is located in the object\n  // returned by UIManager.getViewManagerConfig('getConstants') or in older RN UIManager.getConstants(), we need to add it there as well to make\n  // it compatible with RN 61+\n  var UIManagerConstants = UIManagerAny.getViewManagerConfig?.('getConstants') ?? UIManagerAny.getConstants?.();\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = {\n      ...UIManagerConstants.genericDirectEventTypes,\n      ...customGHEventsConfig\n    };\n  }\n\n  // Wrap JS responder calls and notify gesture handler manager\n  var _UIManagerAny$setJSRe = UIManagerAny.setJSResponder,\n    oldSetJSResponder = _UIManagerAny$setJSRe === undefined ? () => {\n      // no-op\n    } : _UIManagerAny$setJSRe,\n    _UIManagerAny$clearJS = UIManagerAny.clearJSResponder,\n    oldClearJSResponder = _UIManagerAny$clearJS === undefined ? () => {\n      // no-op\n    } : _UIManagerAny$clearJS;\n  UIManagerAny.setJSResponder = (tag, blockNativeResponder) => {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = () => {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  var allowTouches = true;\n  var DEV_ON_ANDROID = false;\n  // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    var extract = refs => {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(r => r && r.current === null);\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  var stateToPropMappings = {\n    [_State.State.UNDETERMINED]: undefined,\n    [_State.State.BEGAN]: 'onBegan',\n    [_State.State.FAILED]: 'onFailed',\n    [_State.State.CANCELLED]: 'onCancelled',\n    [_State.State.ACTIVE]: 'onActivated',\n    [_State.State.END]: 'onEnded'\n  };\n\n  // TODO(TS) fix event types\n\n  var UNRESOLVED_REFS_RETRY_LIMIT = 1;\n\n  // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n  function createHandler(_ref) {\n    var name = _ref.name,\n      _ref$allowedProps = _ref.allowedProps,\n      allowedProps = _ref$allowedProps === undefined ? [] : _ref$allowedProps,\n      _ref$config = _ref.config,\n      config = _ref$config === undefined ? {} : _ref$config,\n      transformProps = _ref.transformProps,\n      _ref$customNativeProp = _ref.customNativeProps,\n      customNativeProps = _ref$customNativeProp === undefined ? [] : _ref$customNativeProp;\n    var Handler = /*#__PURE__*/function (_React$Component) {\n      function Handler(props) {\n        var _this;\n        (0, _classCallCheck2.default)(this, Handler);\n        _this = _callSuper(this, Handler, [props]);\n        _this.onGestureHandlerEvent = event => {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onGestureEvent === 'function') {\n              _this.props.onGestureEvent?.(event);\n            }\n          } else {\n            _this.props.onGestureHandlerEvent?.(event);\n          }\n        };\n        // TODO(TS) - make sure this is right type for event\n        _this.onGestureHandlerStateChange = event => {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onHandlerStateChange === 'function') {\n              _this.props.onHandlerStateChange?.(event);\n            }\n            var state = event.nativeEvent.state;\n            var stateEventName = stateToPropMappings[state];\n            var eventHandler = stateEventName && _this.props[stateEventName];\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange?.(event);\n          }\n        };\n        _this.refHandler = node => {\n          _this.viewNode = node;\n          var child = React.Children.only(_this.props.children);\n          // @ts-ignore Since React 19 ref is accessible as standard prop\n          // https://react.dev/blog/2024/04/25/react-19-upgrade-guide#deprecated-element-ref\n          var ref = (0, _utils2.isReact19)() ? child.props?.ref : child?.ref;\n          if (!ref) {\n            return;\n          }\n          if (typeof ref === 'function') {\n            ref(node);\n          } else {\n            ref.current = node;\n          }\n        };\n        _this.createGestureHandler = newConfig => {\n          _this.config = newConfig;\n          _RNGestureHandlerModule.default.createGestureHandler(name, _this.handlerTag, newConfig);\n        };\n        _this.attachGestureHandler = newViewTag => {\n          _this.viewTag = newViewTag;\n          {\n            (0, _handlersRegistry.registerOldGestureHandler)(_this.handlerTag, {\n              onGestureEvent: _this.onGestureHandlerEvent,\n              onGestureStateChange: _this.onGestureHandlerStateChange\n            });\n            var actionType = (() => {\n              var onGestureEvent = _this.props?.onGestureEvent;\n              var isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n              var onHandlerStateChange = _this.props?.onHandlerStateChange;\n              var isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n              var isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n              if (isReanimatedHandler) {\n                // Reanimated worklet\n                return _ActionType.ActionType.REANIMATED_WORKLET;\n              } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n                // Animated.event with useNativeDriver: true\n                return _ActionType.ActionType.NATIVE_ANIMATED_EVENT;\n              } else {\n                // JS callback or Animated.event with useNativeDriver: false\n                return _ActionType.ActionType.JS_FUNCTION_OLD_API;\n              }\n            })();\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, actionType);\n          }\n          (0, _utils.scheduleFlushOperations)();\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            _mountRegistry.MountRegistry.gestureHandlerWillMount(_this);\n          });\n        };\n        _this.updateGestureHandler = newConfig => {\n          _this.config = newConfig;\n          _RNGestureHandlerModule.default.updateGestureHandler(_this.handlerTag, newConfig);\n          (0, _utils.scheduleFlushOperations)();\n        };\n        _this.handlerTag = (0, _getNextHandlerTag.getNextHandlerTag)();\n        _this.config = {};\n        _this.propsRef = /*#__PURE__*/React.createRef();\n        _this.isMountedRef = /*#__PURE__*/React.createRef();\n        _this.state = {\n          allowTouches\n        };\n        if (props.id) {\n          if (_handlersRegistry.handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _handlersRegistry.handlerIDToTag[props.id] = _this.handlerTag;\n        }\n        return _this;\n      }\n      (0, _inherits2.default)(Handler, _React$Component);\n      return (0, _createClass2.default)(Handler, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var props = this.props;\n          this.isMountedRef.current = true;\n          if (hasUnresolvedRefs(props)) {\n            // If there are unresolved refs (e.g. \".current\" has not yet been set)\n            // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n            // _update method that will try to update native handler props using\n            // queueMicrotask. This makes it so update() function gets called after all\n            // react components are mounted and we expect the missing ref object to\n            // be resolved by then.\n            (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n              this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          this.createGestureHandler((0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config));\n          if (!this.viewNode) {\n            throw new Error(`[Gesture Handler] Failed to obtain view for ${Handler.displayName}. Note that old API doesn't support functional components.`);\n          }\n          this.attachGestureHandler((0, _findNodeHandle.default)(this.viewNode)); // TODO(TS) - check if this can be null\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = (0, _findNodeHandle.default)(this.viewNode);\n          if (this.viewTag !== viewTag) {\n            this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n          }\n          this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this.inspectorToggleListener?.remove();\n          this.isMountedRef.current = false;\n          {\n            (0, _handlersRegistry.unregisterOldGestureHandler)(this.handlerTag);\n          }\n          _RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n          (0, _utils.scheduleFlushOperations)();\n          // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n          var handlerID = this.props.id;\n          if (handlerID) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete _handlersRegistry.handlerIDToTag[handlerID];\n          }\n          _mountRegistry.MountRegistry.gestureHandlerWillUnmount(this);\n        }\n      }, {\n        key: \"update\",\n        value: function update(remainingTries) {\n          if (!this.isMountedRef.current) {\n            return;\n          }\n          var props = this.props;\n\n          // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n          // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n          // again is easy enough fix.\n          if (hasUnresolvedRefs(props) && remainingTries > 0) {\n            (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n              this.update(remainingTries - 1);\n            });\n          } else {\n            var newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config);\n            if (!(0, _utils2.deepEqual)(this.config, newConfig)) {\n              this.updateGestureHandler(newConfig);\n            }\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = {\n            ...this.props,\n            ...updates\n          };\n          var newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [...allowedProps, ...customNativeProps], config);\n          this.updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var gestureEventHandler = this.onGestureHandlerEvent;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props = this.props,\n            onGestureEvent = _this$props.onGestureEvent,\n            onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureEventHandler = onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var gestureStateEventHandler = this.onGestureHandlerStateChange;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props2 = this.props,\n            onHandlerStateChange = _this$props2.onHandlerStateChange,\n            onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureStateEventHandler = onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var events = {\n            onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n            onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n          };\n          this.propsRef.current = events;\n          var child = null;\n          try {\n            child = React.Children.only(this.props.children);\n          } catch (e) {\n            throw new Error((0, _utils2.tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n          }\n          var grandChildren = child.props.children;\n          return /*#__PURE__*/React.cloneElement(child, {\n            ref: this.refHandler,\n            collapsable: false,\n            ...((0, _utils2.isTestEnv)() ? {\n              handlerType: name,\n              handlerTag: this.handlerTag,\n              enabled: this.props.enabled\n            } : {}),\n            testID: this.props.testID ?? child.props.testID,\n            ...events\n          }, grandChildren);\n        }\n      }]);\n    }(React.Component);\n    Handler.displayName = name;\n    Handler.contextType = _GestureHandlerRootViewContext.default;\n    return Handler;\n  }\n});","lineCount":388,"map":[[12,2,1,0],[12,6,1,0,"React"],[12,11,1,0],[12,14,1,0,"_interopRequireWildcard"],[12,37,1,0],[12,38,1,0,"require"],[12,45,1,0],[12,46,1,0,"_dependencyMap"],[12,60,1,0],[13,2,2,0],[13,6,2,0,"_reactNative"],[13,18,2,0],[13,21,2,0,"require"],[13,28,2,0],[13,29,2,0,"_dependencyMap"],[13,43,2,0],[14,2,8,0],[14,6,8,0,"_customDirectEventTypes"],[14,29,8,0],[14,32,8,0,"require"],[14,39,8,0],[14,40,8,0,"_dependencyMap"],[14,54,8,0],[15,2,9,0],[15,6,9,0,"_RNGestureHandlerModule"],[15,29,9,0],[15,32,9,0,"_interopRequireDefault"],[15,54,9,0],[15,55,9,0,"require"],[15,62,9,0],[15,63,9,0,"_dependencyMap"],[15,77,9,0],[16,2,10,0],[16,6,10,0,"_State"],[16,12,10,0],[16,15,10,0,"require"],[16,22,10,0],[16,23,10,0,"_dependencyMap"],[16,37,10,0],[17,2,11,0],[17,6,11,0,"_handlersRegistry"],[17,23,11,0],[17,26,11,0,"require"],[17,33,11,0],[17,34,11,0,"_dependencyMap"],[17,48,11,0],[18,2,16,0],[18,6,16,0,"_getNextHandlerTag"],[18,24,16,0],[18,27,16,0,"require"],[18,34,16,0],[18,35,16,0,"_dependencyMap"],[18,49,16,0],[19,2,23,0],[19,6,23,0,"_utils"],[19,12,23,0],[19,15,23,0,"require"],[19,22,23,0],[19,23,23,0,"_dependencyMap"],[19,37,23,0],[20,2,24,0],[20,6,24,0,"_findNodeHandle"],[20,21,24,0],[20,24,24,0,"_interopRequireDefault"],[20,46,24,0],[20,47,24,0,"require"],[20,54,24,0],[20,55,24,0,"_dependencyMap"],[20,69,24,0],[21,2,26,0],[21,6,26,0,"_utils2"],[21,13,26,0],[21,16,26,0,"require"],[21,23,26,0],[21,24,26,0,"_dependencyMap"],[21,38,26,0],[22,2,33,0],[22,6,33,0,"_ActionType"],[22,17,33,0],[22,20,33,0,"require"],[22,27,33,0],[22,28,33,0,"_dependencyMap"],[22,42,33,0],[23,2,34,0],[23,6,34,0,"_PressabilityDebugView"],[23,28,34,0],[23,31,34,0,"require"],[23,38,34,0],[23,39,34,0,"_dependencyMap"],[23,53,34,0],[24,2,35,0],[24,6,35,0,"_GestureHandlerRootViewContext"],[24,36,35,0],[24,39,35,0,"_interopRequireDefault"],[24,61,35,0],[24,62,35,0,"require"],[24,69,35,0],[24,70,35,0,"_dependencyMap"],[24,84,35,0],[25,2,36,0],[25,6,36,0,"_ghQueueMicrotask"],[25,23,36,0],[25,26,36,0,"require"],[25,33,36,0],[25,34,36,0,"_dependencyMap"],[25,48,36,0],[26,2,37,0],[26,6,37,0,"_mountRegistry"],[26,20,37,0],[26,23,37,0,"require"],[26,30,37,0],[26,31,37,0,"_dependencyMap"],[26,45,37,0],[27,2,37,49],[27,6,37,49,"_jsxRuntime"],[27,17,37,49],[27,20,37,49,"require"],[27,27,37,49],[27,28,37,49,"_dependencyMap"],[27,42,37,49],[28,2,37,49],[28,11,37,49,"_interopRequireWildcard"],[28,35,37,49,"e"],[28,36,37,49],[28,38,37,49,"t"],[28,39,37,49],[28,68,37,49,"WeakMap"],[28,75,37,49],[28,81,37,49,"r"],[28,82,37,49],[28,89,37,49,"WeakMap"],[28,96,37,49],[28,100,37,49,"n"],[28,101,37,49],[28,108,37,49,"WeakMap"],[28,115,37,49],[28,127,37,49,"_interopRequireWildcard"],[28,150,37,49],[28,162,37,49,"_interopRequireWildcard"],[28,163,37,49,"e"],[28,164,37,49],[28,166,37,49,"t"],[28,167,37,49],[28,176,37,49,"t"],[28,177,37,49],[28,181,37,49,"e"],[28,182,37,49],[28,186,37,49,"e"],[28,187,37,49],[28,188,37,49,"__esModule"],[28,198,37,49],[28,207,37,49,"e"],[28,208,37,49],[28,214,37,49,"o"],[28,215,37,49],[28,217,37,49,"i"],[28,218,37,49],[28,220,37,49,"f"],[28,221,37,49],[28,226,37,49,"__proto__"],[28,235,37,49],[28,243,37,49,"default"],[28,250,37,49],[28,252,37,49,"e"],[28,253,37,49],[28,270,37,49,"e"],[28,271,37,49],[28,294,37,49,"e"],[28,295,37,49],[28,320,37,49,"e"],[28,321,37,49],[28,330,37,49,"f"],[28,331,37,49],[28,337,37,49,"o"],[28,338,37,49],[28,341,37,49,"t"],[28,342,37,49],[28,345,37,49,"n"],[28,346,37,49],[28,349,37,49,"r"],[28,350,37,49],[28,358,37,49,"o"],[28,359,37,49],[28,360,37,49,"has"],[28,363,37,49],[28,364,37,49,"e"],[28,365,37,49],[28,375,37,49,"o"],[28,376,37,49],[28,377,37,49,"get"],[28,380,37,49],[28,381,37,49,"e"],[28,382,37,49],[28,385,37,49,"o"],[28,386,37,49],[28,387,37,49,"set"],[28,390,37,49],[28,391,37,49,"e"],[28,392,37,49],[28,394,37,49,"f"],[28,395,37,49],[28,409,37,49,"_t"],[28,411,37,49],[28,415,37,49,"e"],[28,416,37,49],[28,432,37,49,"_t"],[28,434,37,49],[28,441,37,49,"hasOwnProperty"],[28,455,37,49],[28,456,37,49,"call"],[28,460,37,49],[28,461,37,49,"e"],[28,462,37,49],[28,464,37,49,"_t"],[28,466,37,49],[28,473,37,49,"i"],[28,474,37,49],[28,478,37,49,"o"],[28,479,37,49],[28,482,37,49,"Object"],[28,488,37,49],[28,489,37,49,"defineProperty"],[28,503,37,49],[28,508,37,49,"Object"],[28,514,37,49],[28,515,37,49,"getOwnPropertyDescriptor"],[28,539,37,49],[28,540,37,49,"e"],[28,541,37,49],[28,543,37,49,"_t"],[28,545,37,49],[28,552,37,49,"i"],[28,553,37,49],[28,554,37,49,"get"],[28,557,37,49],[28,561,37,49,"i"],[28,562,37,49],[28,563,37,49,"set"],[28,566,37,49],[28,570,37,49,"o"],[28,571,37,49],[28,572,37,49,"f"],[28,573,37,49],[28,575,37,49,"_t"],[28,577,37,49],[28,579,37,49,"i"],[28,580,37,49],[28,584,37,49,"f"],[28,585,37,49],[28,586,37,49,"_t"],[28,588,37,49],[28,592,37,49,"e"],[28,593,37,49],[28,594,37,49,"_t"],[28,596,37,49],[28,607,37,49,"f"],[28,608,37,49],[28,613,37,49,"e"],[28,614,37,49],[28,616,37,49,"t"],[28,617,37,49],[29,2,37,49],[29,11,37,49,"_callSuper"],[29,22,37,49,"t"],[29,23,37,49],[29,25,37,49,"o"],[29,26,37,49],[29,28,37,49,"e"],[29,29,37,49],[29,40,37,49,"o"],[29,41,37,49],[29,48,37,49,"_getPrototypeOf2"],[29,64,37,49],[29,65,37,49,"default"],[29,72,37,49],[29,74,37,49,"o"],[29,75,37,49],[29,82,37,49,"_possibleConstructorReturn2"],[29,109,37,49],[29,110,37,49,"default"],[29,117,37,49],[29,119,37,49,"t"],[29,120,37,49],[29,122,37,49,"_isNativeReflectConstruct"],[29,147,37,49],[29,152,37,49,"Reflect"],[29,159,37,49],[29,160,37,49,"construct"],[29,169,37,49],[29,170,37,49,"o"],[29,171,37,49],[29,173,37,49,"e"],[29,174,37,49],[29,186,37,49,"_getPrototypeOf2"],[29,202,37,49],[29,203,37,49,"default"],[29,210,37,49],[29,212,37,49,"t"],[29,213,37,49],[29,215,37,49,"constructor"],[29,226,37,49],[29,230,37,49,"o"],[29,231,37,49],[29,232,37,49,"apply"],[29,237,37,49],[29,238,37,49,"t"],[29,239,37,49],[29,241,37,49,"e"],[29,242,37,49],[30,2,37,49],[30,11,37,49,"_isNativeReflectConstruct"],[30,37,37,49],[30,51,37,49,"t"],[30,52,37,49],[30,56,37,49,"Boolean"],[30,63,37,49],[30,64,37,49,"prototype"],[30,73,37,49],[30,74,37,49,"valueOf"],[30,81,37,49],[30,82,37,49,"call"],[30,86,37,49],[30,87,37,49,"Reflect"],[30,94,37,49],[30,95,37,49,"construct"],[30,104,37,49],[30,105,37,49,"Boolean"],[30,112,37,49],[30,145,37,49,"t"],[30,146,37,49],[30,159,37,49,"_isNativeReflectConstruct"],[30,184,37,49],[30,196,37,49,"_isNativeReflectConstruct"],[30,197,37,49],[30,210,37,49,"t"],[30,211,37,49],[31,2,40,0],[31,6,40,6,"UIManagerAny"],[31,18,40,18],[31,21,40,21,"UIManager"],[31,43,40,37],[32,2,42,0,"customDirectEventTypes"],[32,48,42,22],[32,49,42,23,"topGestureHandlerEvent"],[32,71,42,45],[32,74,42,48],[33,4,43,2,"registrationName"],[33,20,43,18],[33,22,43,20],[34,2,44,0],[34,3,44,1],[35,2,46,0],[35,6,46,6,"customGHEventsConfigFabricAndroid"],[35,39,46,39],[35,42,46,42],[36,4,47,2,"topOnGestureHandlerEvent"],[36,28,47,26],[36,30,47,28],[37,6,47,30,"registrationName"],[37,22,47,46],[37,24,47,48],[38,4,47,72],[38,5,47,73],[39,4,48,2,"topOnGestureHandlerStateChange"],[39,34,48,32],[39,36,48,34],[40,6,49,4,"registrationName"],[40,22,49,20],[40,24,49,22],[41,4,50,2],[42,2,51,0],[42,3,51,1],[43,2,53,0],[43,6,53,6,"customGHEventsConfig"],[43,26,53,26],[43,29,53,29],[44,4,54,2,"onGestureHandlerEvent"],[44,25,54,23],[44,27,54,25],[45,6,54,27,"registrationName"],[45,22,54,43],[45,24,54,45],[46,4,54,69],[46,5,54,70],[47,4,55,2,"onGestureHandlerStateChange"],[47,31,55,29],[47,33,55,31],[48,6,56,4,"registrationName"],[48,22,56,20],[48,24,56,22],[49,4,57,2],[49,5,57,3],[50,4,59,2],[51,4,60,2],[52,4,61,2],[53,4,62,2],[54,4,63,2],[55,4,64,2],[56,4,65,2],[57,4,66,2],[58,4,67,2],[58,8,67,6],[58,12,67,6,"isFabric"],[58,28,67,14],[58,30,67,15],[58,31,67,16],[58,39,68,29],[58,43,69,4,"customGHEventsConfigFabricAndroid"],[58,76,69,37],[59,2,70,0],[59,3,70,1],[61,2,72,0],[62,2,73,0],[63,2,74,0],[64,2,75,0],[65,2,76,0,"UIManagerAny"],[65,14,76,12],[65,15,76,13,"genericDirectEventTypes"],[65,38,76,36],[65,41,76,39],[66,4,77,2],[66,7,77,5,"UIManagerAny"],[66,19,77,17],[66,20,77,18,"genericDirectEventTypes"],[66,43,77,41],[67,4,78,2],[67,7,78,5,"customGHEventsConfig"],[68,2,79,0],[68,3,79,1],[69,2,80,0],[70,2,81,0],[71,2,82,0],[72,2,83,0],[72,6,83,6,"UIManagerConstants"],[72,24,83,24],[72,27,84,2,"UIManagerAny"],[72,39,84,14],[72,40,84,15,"getViewManagerConfig"],[72,60,84,35],[72,63,84,38],[72,77,84,52],[72,78,84,53],[72,82,85,2,"UIManagerAny"],[72,94,85,14],[72,95,85,15,"getConstants"],[72,107,85,27],[72,110,85,30],[72,111,85,31],[73,2,87,0],[73,6,87,4,"UIManagerConstants"],[73,24,87,22],[73,26,87,24],[74,4,88,2,"UIManagerConstants"],[74,22,88,20],[74,23,88,21,"genericDirectEventTypes"],[74,46,88,44],[74,49,88,47],[75,6,89,4],[75,9,89,7,"UIManagerConstants"],[75,27,89,25],[75,28,89,26,"genericDirectEventTypes"],[75,51,89,49],[76,6,90,4],[76,9,90,7,"customGHEventsConfig"],[77,4,91,2],[77,5,91,3],[78,2,92,0],[80,2,94,0],[81,2,95,0],[81,6,95,0,"_UIManagerAny$setJSRe"],[81,27,95,0],[81,30,102,4,"UIManagerAny"],[81,42,102,16],[81,43,96,2,"setJSResponder"],[81,57,96,16],[82,4,96,18,"oldSetJSResponder"],[82,21,96,35],[82,24,96,35,"_UIManagerAny$setJSRe"],[82,45,96,35],[82,50,96,35,"undefined"],[82,59,96,35],[82,62,96,38],[82,68,96,44],[83,6,97,4],[84,4,97,4],[84,5,98,3],[84,8,98,3,"_UIManagerAny$setJSRe"],[84,29,98,3],[85,4,98,3,"_UIManagerAny$clearJS"],[85,25,98,3],[85,28,102,4,"UIManagerAny"],[85,40,102,16],[85,41,99,2,"clearJSResponder"],[85,57,99,18],[86,4,99,20,"oldClearJSResponder"],[86,23,99,39],[86,26,99,39,"_UIManagerAny$clearJS"],[86,47,99,39],[86,52,99,39,"undefined"],[86,61,99,39],[86,64,99,42],[86,70,99,48],[87,6,100,4],[88,4,100,4],[88,5,101,3],[88,8,101,3,"_UIManagerAny$clearJS"],[88,29,101,3],[89,2,103,0,"UIManagerAny"],[89,14,103,12],[89,15,103,13,"setJSResponder"],[89,29,103,27],[89,32,103,30],[89,33,103,31,"tag"],[89,36,103,42],[89,38,103,44,"blockNativeResponder"],[89,58,103,73],[89,63,103,78],[90,4,104,2,"RNGestureHandlerModule"],[90,35,104,24],[90,36,104,25,"handleSetJSResponder"],[90,56,104,45],[90,57,104,46,"tag"],[90,60,104,49],[90,62,104,51,"blockNativeResponder"],[90,82,104,71],[90,83,104,72],[91,4,105,2,"oldSetJSResponder"],[91,21,105,19],[91,22,105,20,"tag"],[91,25,105,23],[91,27,105,25,"blockNativeResponder"],[91,47,105,45],[91,48,105,46],[92,2,106,0],[92,3,106,1],[93,2,107,0,"UIManagerAny"],[93,14,107,12],[93,15,107,13,"clearJSResponder"],[93,31,107,29],[93,34,107,32],[93,40,107,38],[94,4,108,2,"RNGestureHandlerModule"],[94,35,108,24],[94,36,108,25,"handleClearJSResponder"],[94,58,108,47],[94,59,108,48],[94,60,108,49],[95,4,109,2,"oldClearJSResponder"],[95,23,109,21],[95,24,109,22],[95,25,109,23],[96,2,110,0],[96,3,110,1],[97,2,112,0],[97,6,112,4,"allowTouches"],[97,18,112,16],[97,21,112,19],[97,25,112,23],[98,2,113,0],[98,6,113,6,"DEV_ON_ANDROID"],[98,20,113,20],[98,28,113,59],[99,2,114,0],[100,2,115,0],[102,2,125,0],[102,11,125,9,"hasUnresolvedRefs"],[102,28,125,26,"hasUnresolvedRefs"],[102,29,126,2,"props"],[102,34,126,24],[102,36,127,2],[103,4,128,2],[104,4,129,2],[104,8,129,8,"extract"],[104,15,129,15],[104,18,129,19,"refs"],[104,22,129,36],[104,26,129,41],[105,6,130,4],[105,10,130,8],[105,11,130,9,"Array"],[105,16,130,14],[105,17,130,15,"isArray"],[105,24,130,22],[105,25,130,23,"refs"],[105,29,130,27],[105,30,130,28],[105,32,130,30],[106,8,131,6],[106,15,131,13,"refs"],[106,19,131,17],[106,23,131,21,"refs"],[106,27,131,25],[106,28,131,26,"current"],[106,35,131,33],[106,40,131,38],[106,44,131,42],[107,6,132,4],[108,6,133,4],[108,13,133,11,"refs"],[108,17,133,15],[108,18,133,16,"some"],[108,22,133,20],[108,23,133,22,"r"],[108,24,133,23],[108,28,133,28,"r"],[108,29,133,29],[108,33,133,33,"r"],[108,34,133,34],[108,35,133,35,"current"],[108,42,133,42],[108,47,133,47],[108,51,133,51],[108,52,133,52],[109,4,134,2],[109,5,134,3],[110,4,135,2],[110,11,135,9,"extract"],[110,18,135,16],[110,19,135,17,"props"],[110,24,135,22],[110,25,135,23],[110,47,135,45],[110,48,135,46],[110,49,135,47],[110,53,135,51,"extract"],[110,60,135,58],[110,61,135,59,"props"],[110,66,135,64],[110,67,135,65],[110,76,135,74],[110,77,135,75],[110,78,135,76],[111,2,136,0],[112,2,138,0],[112,6,138,6,"stateToPropMappings"],[112,25,138,25],[112,28,138,28],[113,4,139,2],[113,5,139,3,"State"],[113,17,139,8],[113,18,139,9,"UNDETERMINED"],[113,30,139,21],[113,33,139,24,"undefined"],[113,42,139,33],[114,4,140,2],[114,5,140,3,"State"],[114,17,140,8],[114,18,140,9,"BEGAN"],[114,23,140,14],[114,26,140,17],[114,35,140,26],[115,4,141,2],[115,5,141,3,"State"],[115,17,141,8],[115,18,141,9,"FAILED"],[115,24,141,15],[115,27,141,18],[115,37,141,28],[116,4,142,2],[116,5,142,3,"State"],[116,17,142,8],[116,18,142,9,"CANCELLED"],[116,27,142,18],[116,30,142,21],[116,43,142,34],[117,4,143,2],[117,5,143,3,"State"],[117,17,143,8],[117,18,143,9,"ACTIVE"],[117,24,143,15],[117,27,143,18],[117,40,143,31],[118,4,144,2],[118,5,144,3,"State"],[118,17,144,8],[118,18,144,9,"END"],[118,21,144,12],[118,24,144,15],[119,2,145,0],[119,3,145,10],[121,2,156,0],[123,2,170,0],[123,6,170,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[123,33,170,33],[123,36,170,36],[123,37,170,37],[125,2,172,0],[126,2,173,15],[126,11,173,24,"createHandler"],[126,24,173,37,"createHandler"],[126,25,173,37,"_ref"],[126,29,173,37],[126,31,182,76],[127,4,182,76],[127,8,177,2,"name"],[127,12,177,6],[127,15,177,6,"_ref"],[127,19,177,6],[127,20,177,2,"name"],[127,24,177,6],[128,6,177,6,"_ref$allowedProps"],[128,23,177,6],[128,26,177,6,"_ref"],[128,30,177,6],[128,31,178,2,"allowedProps"],[128,43,178,14],[129,6,178,2,"allowedProps"],[129,18,178,14],[129,21,178,14,"_ref$allowedProps"],[129,38,178,14],[129,43,178,14,"undefined"],[129,52,178,14],[129,55,178,17],[129,57,178,19],[129,60,178,19,"_ref$allowedProps"],[129,77,178,19],[130,6,178,19,"_ref$config"],[130,17,178,19],[130,20,178,19,"_ref"],[130,24,178,19],[130,25,179,2,"config"],[130,31,179,8],[131,6,179,2,"config"],[131,12,179,8],[131,15,179,8,"_ref$config"],[131,26,179,8],[131,31,179,8,"undefined"],[131,40,179,8],[131,43,179,11],[131,44,179,12],[131,45,179,13],[131,48,179,13,"_ref$config"],[131,59,179,13],[132,6,180,2,"transformProps"],[132,20,180,16],[132,23,180,16,"_ref"],[132,27,180,16],[132,28,180,2,"transformProps"],[132,42,180,16],[133,6,180,16,"_ref$customNativeProp"],[133,27,180,16],[133,30,180,16,"_ref"],[133,34,180,16],[133,35,181,2,"customNativeProps"],[133,52,181,19],[134,6,181,2,"customNativeProps"],[134,23,181,19],[134,26,181,19,"_ref$customNativeProp"],[134,47,181,19],[134,52,181,19,"undefined"],[134,61,181,19],[134,64,181,22],[134,66,181,24],[134,69,181,24,"_ref$customNativeProp"],[134,90,181,24],[135,4,181,24],[135,8,186,8,"Handler"],[135,15,186,15],[135,41,186,15,"_React$Component"],[135,57,186,15],[136,6,201,4],[136,15,201,4,"Handler"],[136,23,201,16,"props"],[136,28,201,48],[136,30,201,50],[137,8,201,50],[137,12,201,50,"_this"],[137,17,201,50],[138,8,201,50],[138,12,201,50,"_classCallCheck2"],[138,28,201,50],[138,29,201,50,"default"],[138,36,201,50],[138,44,201,50,"Handler"],[138,51,201,50],[139,8,202,6,"_this"],[139,13,202,6],[139,16,202,6,"_callSuper"],[139,26,202,6],[139,33,202,6,"Handler"],[139,40,202,6],[139,43,202,12,"props"],[139,48,202,17],[140,8,202,19,"_this"],[140,13,202,19],[140,14,284,12,"onGestureHandlerEvent"],[140,35,284,33],[140,38,284,37,"event"],[140,43,284,59],[140,47,284,64],[141,10,285,6],[141,14,285,10,"event"],[141,19,285,15],[141,20,285,16,"nativeEvent"],[141,31,285,27],[141,32,285,28,"handlerTag"],[141,42,285,38],[141,47,285,43,"_this"],[141,52,285,43],[141,53,285,48,"handlerTag"],[141,63,285,58],[141,65,285,60],[142,12,286,8],[142,16,286,12],[142,23,286,19,"_this"],[142,28,286,19],[142,29,286,24,"props"],[142,34,286,29],[142,35,286,30,"onGestureEvent"],[142,49,286,44],[142,54,286,49],[142,64,286,59],[142,66,286,61],[143,14,287,10,"_this"],[143,19,287,10],[143,20,287,15,"props"],[143,25,287,20],[143,26,287,21,"onGestureEvent"],[143,40,287,35],[143,43,287,38,"event"],[143,48,287,43],[143,49,287,44],[144,12,288,8],[145,10,289,6],[145,11,289,7],[145,17,289,13],[146,12,290,8,"_this"],[146,17,290,8],[146,18,290,13,"props"],[146,23,290,18],[146,24,290,19,"onGestureHandlerEvent"],[146,45,290,40],[146,48,290,43,"event"],[146,53,290,48],[146,54,290,49],[147,10,291,6],[148,8,292,4],[148,9,292,5],[149,8,294,4],[150,8,294,4,"_this"],[150,13,294,4],[150,14,295,12,"onGestureHandlerStateChange"],[150,41,295,39],[150,44,296,6,"event"],[150,49,296,39],[150,53,297,9],[151,10,298,6],[151,14,298,10,"event"],[151,19,298,15],[151,20,298,16,"nativeEvent"],[151,31,298,27],[151,32,298,28,"handlerTag"],[151,42,298,38],[151,47,298,43,"_this"],[151,52,298,43],[151,53,298,48,"handlerTag"],[151,63,298,58],[151,65,298,60],[152,12,299,8],[152,16,299,12],[152,23,299,19,"_this"],[152,28,299,19],[152,29,299,24,"props"],[152,34,299,29],[152,35,299,30,"onHandlerStateChange"],[152,55,299,50],[152,60,299,55],[152,70,299,65],[152,72,299,67],[153,14,300,10,"_this"],[153,19,300,10],[153,20,300,15,"props"],[153,25,300,20],[153,26,300,21,"onHandlerStateChange"],[153,46,300,41],[153,49,300,44,"event"],[153,54,300,49],[153,55,300,50],[154,12,301,8],[155,12,303,8],[155,16,303,14,"state"],[155,21,303,42],[155,24,303,45,"event"],[155,29,303,50],[155,30,303,51,"nativeEvent"],[155,41,303,62],[155,42,303,63,"state"],[155,47,303,68],[156,12,304,8],[156,16,304,14,"stateEventName"],[156,30,304,28],[156,33,304,31,"stateToPropMappings"],[156,52,304,50],[156,53,304,51,"state"],[156,58,304,56],[156,59,304,57],[157,12,305,8],[157,16,305,14,"eventHandler"],[157,28,305,26],[157,31,305,29,"stateEventName"],[157,45,305,43],[157,49,305,47,"_this"],[157,54,305,47],[157,55,305,52,"props"],[157,60,305,57],[157,61,305,58,"stateEventName"],[157,75,305,72],[157,76,305,73],[158,12,306,8],[158,16,306,12,"eventHandler"],[158,28,306,24],[158,32,306,28],[158,39,306,35,"eventHandler"],[158,51,306,47],[158,56,306,52],[158,66,306,62],[158,68,306,64],[159,14,307,10,"eventHandler"],[159,26,307,22],[159,27,307,23,"event"],[159,32,307,28],[159,33,307,29],[160,12,308,8],[161,10,309,6],[161,11,309,7],[161,17,309,13],[162,12,310,8,"_this"],[162,17,310,8],[162,18,310,13,"props"],[162,23,310,18],[162,24,310,19,"onGestureHandlerStateChange"],[162,51,310,46],[162,54,310,49,"event"],[162,59,310,54],[162,60,310,55],[163,10,311,6],[164,8,312,4],[164,9,312,5],[165,8,312,5,"_this"],[165,13,312,5],[165,14,314,12,"refHandler"],[165,24,314,22],[165,27,314,26,"node"],[165,31,314,35],[165,35,314,40],[166,10,315,6,"_this"],[166,15,315,6],[166,16,315,11,"viewNode"],[166,24,315,19],[166,27,315,22,"node"],[166,31,315,26],[167,10,317,6],[167,14,317,12,"child"],[167,19,317,17],[167,22,317,20,"React"],[167,27,317,25],[167,28,317,26,"Children"],[167,36,317,34],[167,37,317,35,"only"],[167,41,317,39],[167,42,317,40,"_this"],[167,47,317,40],[167,48,317,45,"props"],[167,53,317,50],[167,54,317,51,"children"],[167,62,317,59],[167,63,317,60],[168,10,318,6],[169,10,319,6],[170,10,320,6],[170,14,320,12,"ref"],[170,17,320,15],[170,20,320,18],[170,24,320,18,"isReact19"],[170,41,320,27],[170,43,320,28],[170,44,320,29],[170,47,320,33,"child"],[170,52,320,38],[170,53,320,56,"props"],[170,58,320,61],[170,60,320,63,"ref"],[170,63,320,66],[170,66,320,69,"child"],[170,71,320,74],[170,73,320,76,"ref"],[170,76,320,79],[171,10,322,6],[171,14,322,10],[171,15,322,11,"ref"],[171,18,322,14],[171,20,322,16],[172,12,323,8],[173,10,324,6],[174,10,326,6],[174,14,326,10],[174,21,326,17,"ref"],[174,24,326,20],[174,29,326,25],[174,39,326,35],[174,41,326,37],[175,12,327,8,"ref"],[175,15,327,11],[175,16,327,12,"node"],[175,20,327,16],[175,21,327,17],[176,10,328,6],[176,11,328,7],[176,17,328,13],[177,12,329,8,"ref"],[177,15,329,11],[177,16,329,12,"current"],[177,23,329,19],[177,26,329,22,"node"],[177,30,329,26],[178,10,330,6],[179,8,331,4],[179,9,331,5],[180,8,331,5,"_this"],[180,13,331,5],[180,14,333,12,"createGestureHandler"],[180,34,333,32],[180,37,334,6,"newConfig"],[180,46,334,50],[180,50,335,9],[181,10,336,6,"_this"],[181,15,336,6],[181,16,336,11,"config"],[181,22,336,17],[181,25,336,20,"newConfig"],[181,34,336,29],[182,10,338,6,"RNGestureHandlerModule"],[182,41,338,28],[182,42,338,29,"createGestureHandler"],[182,62,338,49],[182,63,339,8,"name"],[182,67,339,12],[182,69,340,8,"_this"],[182,74,340,8],[182,75,340,13,"handlerTag"],[182,85,340,23],[182,87,341,8,"newConfig"],[182,96,342,6],[182,97,342,7],[183,8,343,4],[183,9,343,5],[184,8,343,5,"_this"],[184,13,343,5],[184,14,345,12,"attachGestureHandler"],[184,34,345,32],[184,37,345,36,"newViewTag"],[184,47,345,54],[184,51,345,59],[185,10,346,6,"_this"],[185,15,346,6],[185,16,346,11,"viewTag"],[185,23,346,18],[185,26,346,21,"newViewTag"],[185,36,346,31],[186,10,358,13],[187,12,359,8],[187,16,359,8,"registerOldGestureHandler"],[187,59,359,33],[187,61,359,34,"_this"],[187,66,359,34],[187,67,359,39,"handlerTag"],[187,77,359,49],[187,79,359,51],[188,14,360,10,"onGestureEvent"],[188,28,360,24],[188,30,360,26,"_this"],[188,35,360,26],[188,36,360,31,"onGestureHandlerEvent"],[188,57,360,52],[189,14,361,10,"onGestureStateChange"],[189,34,361,30],[189,36,361,32,"_this"],[189,41,361,32],[189,42,361,37,"onGestureHandlerStateChange"],[190,12,362,8],[190,13,362,9],[190,14,362,10],[191,12,364,8],[191,16,364,14,"actionType"],[191,26,364,24],[191,29,364,27],[191,30,364,28],[191,36,364,34],[192,14,365,10],[192,18,365,16,"onGestureEvent"],[192,32,365,30],[192,35,365,33,"_this"],[192,40,365,33],[192,41,365,38,"props"],[192,46,365,43],[192,48,365,45,"onGestureEvent"],[192,62,365,59],[193,14,366,10],[193,18,366,16,"isGestureHandlerWorklet"],[193,41,366,39],[193,44,367,12,"onGestureEvent"],[193,58,367,26],[193,63,368,13],[193,72,368,22],[193,76,368,26,"onGestureEvent"],[193,90,368,40],[193,94,369,14],[193,115,369,35],[193,119,369,39,"onGestureEvent"],[193,133,369,53],[193,134,369,54],[194,14,370,10],[194,18,370,16,"onHandlerStateChange"],[194,38,370,36],[194,41,370,39,"_this"],[194,46,370,39],[194,47,370,44,"props"],[194,52,370,49],[194,54,370,51,"onHandlerStateChange"],[194,74,370,71],[195,14,371,10],[195,18,371,16,"isStateChangeHandlerWorklet"],[195,45,371,43],[195,48,372,12,"onHandlerStateChange"],[195,68,372,32],[195,73,373,13],[195,82,373,22],[195,86,373,26,"onHandlerStateChange"],[195,106,373,46],[195,110,374,14],[195,131,374,35],[195,135,374,39,"onHandlerStateChange"],[195,155,374,59],[195,156,374,60],[196,14,375,10],[196,18,375,16,"isReanimatedHandler"],[196,37,375,35],[196,40,376,12,"isGestureHandlerWorklet"],[196,63,376,35],[196,67,376,39,"isStateChangeHandlerWorklet"],[196,94,376,66],[197,14,377,10],[197,18,377,14,"isReanimatedHandler"],[197,37,377,33],[197,39,377,35],[198,16,378,12],[199,16,379,12],[199,23,379,19,"ActionType"],[199,45,379,29],[199,46,379,30,"REANIMATED_WORKLET"],[199,64,379,48],[200,14,380,10],[200,15,380,11],[200,21,380,17],[200,25,380,21,"onGestureEvent"],[200,39,380,35],[200,43,380,39],[200,55,380,51],[200,59,380,55,"onGestureEvent"],[200,73,380,69],[200,75,380,71],[201,16,381,12],[202,16,382,12],[202,23,382,19,"ActionType"],[202,45,382,29],[202,46,382,30,"NATIVE_ANIMATED_EVENT"],[202,67,382,51],[203,14,383,10],[203,15,383,11],[203,21,383,17],[204,16,384,12],[205,16,385,12],[205,23,385,19,"ActionType"],[205,45,385,29],[205,46,385,30,"JS_FUNCTION_OLD_API"],[205,65,385,49],[206,14,386,10],[207,12,387,8],[207,13,387,9],[207,15,387,11],[207,16,387,12],[208,12,389,8,"RNGestureHandlerModule"],[208,43,389,30],[208,44,389,31,"attachGestureHandler"],[208,64,389,51],[208,65,390,10,"_this"],[208,70,390,10],[208,71,390,15,"handlerTag"],[208,81,390,25],[208,83,391,10,"newViewTag"],[208,93,391,20],[208,95,392,10,"actionType"],[208,105,393,8],[208,106,393,9],[209,10,394,6],[210,10,396,6],[210,14,396,6,"scheduleFlushOperations"],[210,44,396,29],[210,46,396,30],[210,47,396,31],[211,10,398,6],[211,14,398,6,"ghQueueMicrotask"],[211,48,398,22],[211,50,398,23],[211,56,398,29],[212,12,399,8,"MountRegistry"],[212,40,399,21],[212,41,399,22,"gestureHandlerWillMount"],[212,64,399,45],[212,65,399,45,"_this"],[212,70,399,50],[212,71,399,51],[213,10,400,6],[213,11,400,7],[213,12,400,8],[214,8,401,4],[214,9,401,5],[215,8,401,5,"_this"],[215,13,401,5],[215,14,403,12,"updateGestureHandler"],[215,34,403,32],[215,37,404,6,"newConfig"],[215,46,404,50],[215,50,405,9],[216,10,406,6,"_this"],[216,15,406,6],[216,16,406,11,"config"],[216,22,406,17],[216,25,406,20,"newConfig"],[216,34,406,29],[217,10,408,6,"RNGestureHandlerModule"],[217,41,408,28],[217,42,408,29,"updateGestureHandler"],[217,62,408,49],[217,63,408,50,"_this"],[217,68,408,50],[217,69,408,55,"handlerTag"],[217,79,408,65],[217,81,408,67,"newConfig"],[217,90,408,76],[217,91,408,77],[218,10,409,6],[218,14,409,6,"scheduleFlushOperations"],[218,44,409,29],[218,46,409,30],[218,47,409,31],[219,8,410,4],[219,9,410,5],[220,8,203,6,"_this"],[220,13,203,6],[220,14,203,11,"handlerTag"],[220,24,203,21],[220,27,203,24],[220,31,203,24,"getNextHandlerTag"],[220,67,203,41],[220,69,203,42],[220,70,203,43],[221,8,204,6,"_this"],[221,13,204,6],[221,14,204,11,"config"],[221,20,204,17],[221,23,204,20],[221,24,204,21],[221,25,204,22],[222,8,205,6,"_this"],[222,13,205,6],[222,14,205,11,"propsRef"],[222,22,205,19],[222,38,205,22,"React"],[222,43,205,27],[222,44,205,28,"createRef"],[222,53,205,37],[222,54,205,38],[222,55,205,39],[223,8,206,6,"_this"],[223,13,206,6],[223,14,206,11,"isMountedRef"],[223,26,206,23],[223,42,206,26,"React"],[223,47,206,31],[223,48,206,32,"createRef"],[223,57,206,41],[223,58,206,42],[223,59,206,43],[224,8,207,6,"_this"],[224,13,207,6],[224,14,207,11,"state"],[224,19,207,16],[224,22,207,19],[225,10,207,21,"allowTouches"],[226,8,207,34],[226,9,207,35],[227,8,208,6],[227,12,208,10,"props"],[227,17,208,15],[227,18,208,16,"id"],[227,20,208,18],[227,22,208,20],[228,10,209,8],[228,14,209,12,"handlerIDToTag"],[228,46,209,26],[228,47,209,27,"props"],[228,52,209,32],[228,53,209,33,"id"],[228,55,209,35],[228,56,209,36],[228,61,209,41,"undefined"],[228,70,209,50],[228,72,209,52],[229,12,210,10],[229,18,210,16],[229,22,210,20,"Error"],[229,27,210,25],[229,28,210,26],[229,48,210,46,"props"],[229,53,210,51],[229,54,210,52,"id"],[229,56,210,54],[229,78,210,76],[229,79,210,77],[230,10,211,8],[231,10,212,8,"handlerIDToTag"],[231,42,212,22],[231,43,212,23,"props"],[231,48,212,28],[231,49,212,29,"id"],[231,51,212,31],[231,52,212,32],[231,55,212,35,"_this"],[231,60,212,35],[231,61,212,40,"handlerTag"],[231,71,212,50],[232,8,213,6],[233,8,213,7],[233,15,213,7,"_this"],[233,20,213,7],[234,6,214,4],[235,6,214,5],[235,10,214,5,"_inherits2"],[235,20,214,5],[235,21,214,5,"default"],[235,28,214,5],[235,30,214,5,"Handler"],[235,37,214,5],[235,39,214,5,"_React$Component"],[235,55,214,5],[236,6,214,5],[236,17,214,5,"_createClass2"],[236,30,214,5],[236,31,214,5,"default"],[236,38,214,5],[236,40,214,5,"Handler"],[236,47,214,5],[237,8,214,5,"key"],[237,11,214,5],[238,8,214,5,"value"],[238,13,214,5],[238,15,216,4],[238,24,216,4,"componentDidMount"],[238,41,216,21,"componentDidMount"],[238,42,216,21],[238,44,216,24],[239,10,217,6],[239,14,217,12,"props"],[239,19,217,34],[239,22,217,37],[239,26,217,41],[239,27,217,42,"props"],[239,32,217,47],[240,10,218,6],[240,14,218,10],[240,15,218,11,"isMountedRef"],[240,27,218,23],[240,28,218,24,"current"],[240,35,218,31],[240,38,218,34],[240,42,218,38],[241,10,229,6],[241,14,229,10,"hasUnresolvedRefs"],[241,31,229,27],[241,32,229,28,"props"],[241,37,229,33],[241,38,229,34],[241,40,229,36],[242,12,230,8],[243,12,231,8],[244,12,232,8],[245,12,233,8],[246,12,234,8],[247,12,235,8],[248,12,236,8],[248,16,236,8,"ghQueueMicrotask"],[248,50,236,24],[248,52,236,25],[248,58,236,31],[249,14,237,10],[249,18,237,14],[249,19,237,15,"update"],[249,25,237,21],[249,26,237,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[249,53,237,49],[249,54,237,50],[250,12,238,8],[250,13,238,9],[250,14,238,10],[251,10,239,6],[252,10,241,6],[252,14,241,10],[252,15,241,11,"createGestureHandler"],[252,35,241,31],[252,36,242,8],[252,40,242,8,"filterConfig"],[252,59,242,20],[252,61,243,10,"transformProps"],[252,75,243,24],[252,78,243,27,"transformProps"],[252,92,243,41],[252,93,243,42],[252,97,243,46],[252,98,243,47,"props"],[252,103,243,52],[252,104,243,53],[252,107,243,56],[252,111,243,60],[252,112,243,61,"props"],[252,117,243,66],[252,119,244,10],[252,120,244,11],[252,123,244,14,"allowedProps"],[252,135,244,26],[252,137,244,28],[252,140,244,31,"customNativeProps"],[252,157,244,48],[252,158,244,49],[252,160,245,10,"config"],[252,166,246,8],[252,167,247,6],[252,168,247,7],[253,10,249,6],[253,14,249,10],[253,15,249,11],[253,19,249,15],[253,20,249,16,"viewNode"],[253,28,249,24],[253,30,249,26],[254,12,250,8],[254,18,250,14],[254,22,250,18,"Error"],[254,27,250,23],[254,28,251,10],[254,75,251,57,"Handler"],[254,82,251,64],[254,83,251,65,"displayName"],[254,94,251,76],[254,154,252,8],[254,155,252,9],[255,10,253,6],[256,10,255,6],[256,14,255,10],[256,15,255,11,"attachGestureHandler"],[256,35,255,31],[256,36,255,32],[256,40,255,32,"findNodeHandle"],[256,63,255,46],[256,65,255,47],[256,69,255,51],[256,70,255,52,"viewNode"],[256,78,255,60],[256,79,255,71],[256,80,255,72],[256,81,255,73],[256,82,255,74],[257,8,256,4],[258,6,256,5],[259,8,256,5,"key"],[259,11,256,5],[260,8,256,5,"value"],[260,13,256,5],[260,15,258,4],[260,24,258,4,"componentDidUpdate"],[260,42,258,22,"componentDidUpdate"],[260,43,258,22],[260,45,258,25],[261,10,259,6],[261,14,259,12,"viewTag"],[261,21,259,19],[261,24,259,22],[261,28,259,22,"findNodeHandle"],[261,51,259,36],[261,53,259,37],[261,57,259,41],[261,58,259,42,"viewNode"],[261,66,259,50],[261,67,259,51],[262,10,260,6],[262,14,260,10],[262,18,260,14],[262,19,260,15,"viewTag"],[262,26,260,22],[262,31,260,27,"viewTag"],[262,38,260,34],[262,40,260,36],[263,12,261,8],[263,16,261,12],[263,17,261,13,"attachGestureHandler"],[263,37,261,33],[263,38,261,34,"viewTag"],[263,45,261,51],[263,46,261,52],[263,47,261,53],[263,48,261,54],[264,10,262,6],[265,10,263,6],[265,14,263,10],[265,15,263,11,"update"],[265,21,263,17],[265,22,263,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[265,49,263,45],[265,50,263,46],[266,8,264,4],[267,6,264,5],[268,8,264,5,"key"],[268,11,264,5],[269,8,264,5,"value"],[269,13,264,5],[269,15,266,4],[269,24,266,4,"componentWillUnmount"],[269,44,266,24,"componentWillUnmount"],[269,45,266,24],[269,47,266,27],[270,10,267,6],[270,14,267,10],[270,15,267,11,"inspectorToggleListener"],[270,38,267,34],[270,40,267,36,"remove"],[270,46,267,42],[270,47,267,43],[270,48,267,44],[271,10,268,6],[271,14,268,10],[271,15,268,11,"isMountedRef"],[271,27,268,23],[271,28,268,24,"current"],[271,35,268,31],[271,38,268,34],[271,43,268,39],[272,10,269,33],[273,12,270,8],[273,16,270,8,"unregisterOldGestureHandler"],[273,61,270,35],[273,63,270,36],[273,67,270,40],[273,68,270,41,"handlerTag"],[273,78,270,51],[273,79,270,52],[274,10,271,6],[275,10,272,6,"RNGestureHandlerModule"],[275,41,272,28],[275,42,272,29,"dropGestureHandler"],[275,60,272,47],[275,61,272,48],[275,65,272,52],[275,66,272,53,"handlerTag"],[275,76,272,63],[275,77,272,64],[276,10,273,6],[276,14,273,6,"scheduleFlushOperations"],[276,44,273,29],[276,46,273,30],[276,47,273,31],[277,10,274,6],[278,10,275,6],[278,14,275,12,"handlerID"],[278,23,275,41],[278,26,275,44],[278,30,275,48],[278,31,275,49,"props"],[278,36,275,54],[278,37,275,55,"id"],[278,39,275,57],[279,10,276,6],[279,14,276,10,"handlerID"],[279,23,276,19],[279,25,276,21],[280,12,277,8],[281,12,278,8],[281,19,278,15,"handlerIDToTag"],[281,51,278,29],[281,52,278,30,"handlerID"],[281,61,278,39],[281,62,278,40],[282,10,279,6],[283,10,281,6,"MountRegistry"],[283,38,281,19],[283,39,281,20,"gestureHandlerWillUnmount"],[283,64,281,45],[283,65,281,46],[283,69,281,50],[283,70,281,51],[284,8,282,4],[285,6,282,5],[286,8,282,5,"key"],[286,11,282,5],[287,8,282,5,"value"],[287,13,282,5],[287,15,412,4],[287,24,412,12,"update"],[287,30,412,18,"update"],[287,31,412,19,"remainingTries"],[287,45,412,41],[287,47,412,43],[288,10,413,6],[288,14,413,10],[288,15,413,11],[288,19,413,15],[288,20,413,16,"isMountedRef"],[288,32,413,28],[288,33,413,29,"current"],[288,40,413,36],[288,42,413,38],[289,12,414,8],[290,10,415,6],[291,10,417,6],[291,14,417,12,"props"],[291,19,417,34],[291,22,417,37],[291,26,417,41],[291,27,417,42,"props"],[291,32,417,47],[293,10,419,6],[294,10,420,6],[295,10,421,6],[296,10,422,6],[296,14,422,10,"hasUnresolvedRefs"],[296,31,422,27],[296,32,422,28,"props"],[296,37,422,33],[296,38,422,34],[296,42,422,38,"remainingTries"],[296,56,422,52],[296,59,422,55],[296,60,422,56],[296,62,422,58],[297,12,423,8],[297,16,423,8,"ghQueueMicrotask"],[297,50,423,24],[297,52,423,25],[297,58,423,31],[298,14,424,10],[298,18,424,14],[298,19,424,15,"update"],[298,25,424,21],[298,26,424,22,"remainingTries"],[298,40,424,36],[298,43,424,39],[298,44,424,40],[298,45,424,41],[299,12,425,8],[299,13,425,9],[299,14,425,10],[300,10,426,6],[300,11,426,7],[300,17,426,13],[301,12,427,8],[301,16,427,14,"newConfig"],[301,25,427,23],[301,28,427,26],[301,32,427,26,"filterConfig"],[301,51,427,38],[301,53,428,10,"transformProps"],[301,67,428,24],[301,70,428,27,"transformProps"],[301,84,428,41],[301,85,428,42],[301,89,428,46],[301,90,428,47,"props"],[301,95,428,52],[301,96,428,53],[301,99,428,56],[301,103,428,60],[301,104,428,61,"props"],[301,109,428,66],[301,111,429,10],[301,112,429,11],[301,115,429,14,"allowedProps"],[301,127,429,26],[301,129,429,28],[301,132,429,31,"customNativeProps"],[301,149,429,48],[301,150,429,49],[301,152,430,10,"config"],[301,158,431,8],[301,159,431,9],[302,12,432,8],[302,16,432,12],[302,17,432,13],[302,21,432,13,"deepEqual"],[302,38,432,22],[302,40,432,23],[302,44,432,27],[302,45,432,28,"config"],[302,51,432,34],[302,53,432,36,"newConfig"],[302,62,432,45],[302,63,432,46],[302,65,432,48],[303,14,433,10],[303,18,433,14],[303,19,433,15,"updateGestureHandler"],[303,39,433,35],[303,40,433,36,"newConfig"],[303,49,433,45],[303,50,433,46],[304,12,434,8],[305,10,435,6],[306,8,436,4],[307,6,436,5],[308,8,436,5,"key"],[308,11,436,5],[309,8,436,5,"value"],[309,13,436,5],[309,15,438,4],[309,24,438,4,"setNativeProps"],[309,38,438,18,"setNativeProps"],[309,39,438,19,"updates"],[309,46,438,31],[309,48,438,33],[310,10,439,6],[310,14,439,12,"mergedProps"],[310,25,439,23],[310,28,439,26],[311,12,439,28],[311,15,439,31],[311,19,439,35],[311,20,439,36,"props"],[311,25,439,41],[312,12,439,43],[312,15,439,46,"updates"],[313,10,439,54],[313,11,439,55],[314,10,440,6],[314,14,440,12,"newConfig"],[314,23,440,21],[314,26,440,24],[314,30,440,24,"filterConfig"],[314,49,440,36],[314,51,441,8,"transformProps"],[314,65,441,22],[314,68,441,25,"transformProps"],[314,82,441,39],[314,83,441,40,"mergedProps"],[314,94,441,51],[314,95,441,52],[314,98,441,55,"mergedProps"],[314,109,441,66],[314,111,442,8],[314,112,442,9],[314,115,442,12,"allowedProps"],[314,127,442,24],[314,129,442,26],[314,132,442,29,"customNativeProps"],[314,149,442,46],[314,150,442,47],[314,152,443,8,"config"],[314,158,444,6],[314,159,444,7],[315,10,445,6],[315,14,445,10],[315,15,445,11,"updateGestureHandler"],[315,35,445,31],[315,36,445,32,"newConfig"],[315,45,445,41],[315,46,445,42],[316,8,446,4],[317,6,446,5],[318,8,446,5,"key"],[318,11,446,5],[319,8,446,5,"value"],[319,13,446,5],[319,15,448,4],[319,24,448,4,"render"],[319,30,448,10,"render"],[319,31,448,10],[319,33,448,13],[320,10,456,6],[320,14,456,10,"gestureEventHandler"],[320,33,456,29],[320,36,456,32],[320,40,456,36],[320,41,456,37,"onGestureHandlerEvent"],[320,62,456,58],[321,10,457,6],[323,10,462,6],[323,14,462,6,"_this$props"],[323,25,462,6],[323,28,463,8],[323,32,463,12],[323,33,463,13,"props"],[323,38,463,18],[324,12,462,14,"onGestureEvent"],[324,26,462,28],[324,29,462,28,"_this$props"],[324,40,462,28],[324,41,462,14,"onGestureEvent"],[324,55,462,28],[325,12,462,30,"onGestureHandlerEvent"],[325,33,462,51],[325,36,462,51,"_this$props"],[325,47,462,51],[325,48,462,30,"onGestureHandlerEvent"],[325,69,462,51],[326,10,464,6],[326,14,464,10,"onGestureEvent"],[326,28,464,24],[326,32,464,28],[326,39,464,35,"onGestureEvent"],[326,53,464,49],[326,58,464,54],[326,68,464,64],[326,70,464,66],[327,12,465,8],[328,12,466,8],[329,12,467,8],[330,12,468,8],[330,16,468,12,"onGestureHandlerEvent"],[330,37,468,33],[330,39,468,35],[331,14,469,10],[331,20,469,16],[331,24,469,20,"Error"],[331,29,469,25],[331,30,470,12],[331,103,471,10],[331,104,471,11],[332,12,472,8],[333,12,473,8,"gestureEventHandler"],[333,31,473,27],[333,34,473,30,"onGestureEvent"],[333,48,473,44],[334,10,474,6],[334,11,474,7],[334,17,474,13],[335,12,475,8],[335,16,476,10,"onGestureHandlerEvent"],[335,37,476,31],[335,41,477,10],[335,48,477,17,"onGestureHandlerEvent"],[335,69,477,38],[335,74,477,43],[335,84,477,53],[335,86,478,10],[336,14,479,10],[336,20,479,16],[336,24,479,20,"Error"],[336,29,479,25],[336,30,480,12],[336,103,481,10],[336,104,481,11],[337,12,482,8],[338,10,483,6],[339,10,485,6],[339,14,485,10,"gestureStateEventHandler"],[339,38,485,34],[339,41,485,37],[339,45,485,41],[339,46,485,42,"onGestureHandlerStateChange"],[339,73,485,69],[340,10,486,6],[342,10,491,6],[342,14,491,6,"_this$props2"],[342,26,491,6],[342,29,494,40],[342,33,494,44],[342,34,494,45,"props"],[342,39,494,50],[343,12,492,8,"onHandlerStateChange"],[343,32,492,28],[343,35,492,28,"_this$props2"],[343,47,492,28],[343,48,492,8,"onHandlerStateChange"],[343,68,492,28],[344,12,493,8,"onGestureHandlerStateChange"],[344,39,493,35],[344,42,493,35,"_this$props2"],[344,54,493,35],[344,55,493,8,"onGestureHandlerStateChange"],[344,82,493,35],[345,10,495,6],[345,14,495,10,"onHandlerStateChange"],[345,34,495,30],[345,38,495,34],[345,45,495,41,"onHandlerStateChange"],[345,65,495,61],[345,70,495,66],[345,80,495,76],[345,82,495,78],[346,12,496,8],[347,12,497,8],[348,12,498,8],[349,12,499,8],[349,16,499,12,"onGestureHandlerStateChange"],[349,43,499,39],[349,45,499,41],[350,14,500,10],[350,20,500,16],[350,24,500,20,"Error"],[350,29,500,25],[350,30,501,12],[350,103,502,10],[350,104,502,11],[351,12,503,8],[352,12,504,8,"gestureStateEventHandler"],[352,36,504,32],[352,39,504,35,"onHandlerStateChange"],[352,59,504,55],[353,10,505,6],[353,11,505,7],[353,17,505,13],[354,12,506,8],[354,16,507,10,"onGestureHandlerStateChange"],[354,43,507,37],[354,47,508,10],[354,54,508,17,"onGestureHandlerStateChange"],[354,81,508,44],[354,86,508,49],[354,96,508,59],[354,98,509,10],[355,14,510,10],[355,20,510,16],[355,24,510,20,"Error"],[355,29,510,25],[355,30,511,12],[355,103,512,10],[355,104,512,11],[356,12,513,8],[357,10,514,6],[358,10,515,6],[358,14,515,12,"events"],[358,20,515,18],[358,23,515,21],[359,12,516,8,"onGestureHandlerEvent"],[359,33,516,29],[359,35,516,31],[359,39,516,35],[359,40,516,36,"state"],[359,45,516,41],[359,46,516,42,"allowTouches"],[359,58,516,54],[359,61,517,12,"gestureEventHandler"],[359,80,517,31],[359,83,518,12,"undefined"],[359,92,518,21],[360,12,519,8,"onGestureHandlerStateChange"],[360,39,519,35],[360,41,519,37],[360,45,519,41],[360,46,519,42,"state"],[360,51,519,47],[360,52,519,48,"allowTouches"],[360,64,519,60],[360,67,520,12,"gestureStateEventHandler"],[360,91,520,36],[360,94,521,12,"undefined"],[361,10,522,6],[361,11,522,7],[362,10,524,6],[362,14,524,10],[362,15,524,11,"propsRef"],[362,23,524,19],[362,24,524,20,"current"],[362,31,524,27],[362,34,524,30,"events"],[362,40,524,36],[363,10,526,6],[363,14,526,10,"child"],[363,19,526,20],[363,22,526,23],[363,26,526,27],[364,10,527,6],[364,14,527,10],[365,12,528,8,"child"],[365,17,528,13],[365,20,528,16,"React"],[365,25,528,21],[365,26,528,22,"Children"],[365,34,528,30],[365,35,528,31,"only"],[365,39,528,35],[365,40,528,36],[365,44,528,40],[365,45,528,41,"props"],[365,50,528,46],[365,51,528,47,"children"],[365,59,528,55],[365,60,528,56],[366,10,529,6],[366,11,529,7],[366,12,529,8],[366,19,529,15,"e"],[366,20,529,16],[366,22,529,18],[367,12,530,8],[367,18,530,14],[367,22,530,18,"Error"],[367,27,530,23],[367,28,531,10],[367,32,531,10,"tagMessage"],[367,50,531,20],[367,52,532,12],[367,55,532,15,"name"],[367,59,532,19],[367,215,533,10],[367,216,534,8],[367,217,534,9],[368,10,535,6],[369,10,537,6],[369,14,537,10,"grandChildren"],[369,27,537,23],[369,30,537,26,"child"],[369,35,537,31],[369,36,537,32,"props"],[369,41,537,37],[369,42,537,38,"children"],[369,50,537,46],[370,10,555,6],[370,30,555,13,"React"],[370,35,555,18],[370,36,555,19,"cloneElement"],[370,48,555,31],[370,49,556,8,"child"],[370,54,556,13],[370,56,557,8],[371,12,558,10,"ref"],[371,15,558,13],[371,17,558,15],[371,21,558,19],[371,22,558,20,"refHandler"],[371,32,558,30],[372,12,559,10,"collapsable"],[372,23,559,21],[372,25,559,23],[372,30,559,28],[373,12,560,10],[373,16,560,14],[373,20,560,14,"isTestEnv"],[373,37,560,23],[373,39,560,24],[373,40,560,25],[373,43,561,14],[374,14,562,16,"handlerType"],[374,25,562,27],[374,27,562,29,"name"],[374,31,562,33],[375,14,563,16,"handlerTag"],[375,24,563,26],[375,26,563,28],[375,30,563,32],[375,31,563,33,"handlerTag"],[375,41,563,43],[376,14,564,16,"enabled"],[376,21,564,23],[376,23,564,25],[376,27,564,29],[376,28,564,30,"props"],[376,33,564,35],[376,34,564,36,"enabled"],[377,12,565,14],[377,13,565,15],[377,16,566,14],[377,17,566,15],[377,18,566,16],[377,19,566,17],[378,12,567,10,"testID"],[378,18,567,16],[378,20,567,18],[378,24,567,22],[378,25,567,23,"props"],[378,30,567,28],[378,31,567,29,"testID"],[378,37,567,35],[378,41,567,39,"child"],[378,46,567,44],[378,47,567,45,"props"],[378,52,567,50],[378,53,567,51,"testID"],[378,59,567,57],[379,12,568,10],[379,15,568,13,"events"],[380,10,569,8],[380,11,569,9],[380,13,570,8,"grandChildren"],[380,26,571,6],[380,27,571,7],[381,8,572,4],[382,6,572,5],[383,4,572,5],[383,6,186,24,"React"],[383,11,186,29],[383,12,186,30,"Component"],[383,21,186,39],[384,4,186,8,"Handler"],[384,11,186,15],[384,12,190,11,"displayName"],[384,23,190,22],[384,26,190,25,"name"],[384,30,190,29],[385,4,186,8,"Handler"],[385,11,186,15],[385,12,191,11,"contextType"],[385,23,191,22],[385,26,191,25,"GestureHandlerRootViewContext"],[385,64,191,54],[386,4,574,2],[386,11,574,9,"Handler"],[386,18,574,16],[387,2,575,0],[388,0,575,1],[388,3]],"functionMap":{"names":["<global>","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setState$argument_0","ghQueueMicrotask$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;sCC+F;GDE;0CCC;GDE;8BEE;CFG;gCGC;CHG;2DIO;GJE;AKM;kBCI;qBCI,8BD;GDC;CLE;eQqC;ECa;ICe;KDa;IEE;UPO;0BQC,yBR;WOE;yBEU;SFE;KFkB;IKE;KLM;IME;KNgB;oCOE;KPQ;0CQG;KRiB;yBSE;KTiB;mCUE;KVU;mCWE;4BnBmB;SmBuB;uBPW;OOE;KXC;mCYE;KZO;IaE;yBTW;SSE;KbW;IcE;KdQ;IeE;Kf4H;GDC;CRE"}},"type":"js/module"}]}