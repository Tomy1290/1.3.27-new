{"dependencies":[{"name":"../Utilities/stringifySafe","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":22},"end":{"line":13,"column":59}}],"key":"F5lIdwjTzDlKvpgn4agRz3qCB1o=","exportNames":["*"]}},{"name":"invariant","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":18},"end":{"line":14,"column":38}}],"key":"oQpL0Es3H146KnQH9ygFeHrzVP4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = undefined;\n  var stringifySafe = require(_dependencyMap[0]).default;\n  var invariant = require(_dependencyMap[1]);\n  function processTransform(transform) {\n    if (typeof transform === 'string') {\n      var regex = new RegExp(/(\\w+)\\(([^)]+)\\)/g);\n      var transformArray = [];\n      var matches;\n      while (matches = regex.exec(transform)) {\n        var _getKeyAndValueFromCS = _getKeyAndValueFromCSSTransform(matches[1], matches[2]),\n          _key = _getKeyAndValueFromCS.key,\n          value = _getKeyAndValueFromCS.value;\n        if (value !== undefined) {\n          transformArray.push({\n            [_key]: value\n          });\n        }\n      }\n      transform = transformArray;\n    }\n    return transform;\n  }\n  var _getKeyAndValueFromCSSTransform = (key, args) => {\n    var argsWithUnitsRegex = new RegExp(/([+-]?\\d+(\\.\\d+)?)([a-zA-Z]+|%)?/g);\n    switch (key) {\n      case 'matrix':\n        return {\n          key,\n          value: args.match(/[+-]?\\d+(\\.\\d+)?/g)?.map(Number)\n        };\n      case 'translate':\n      case 'translate3d':\n        var parsedArgs = [];\n        var missingUnitOfMeasurement = false;\n        var matches;\n        while (matches = argsWithUnitsRegex.exec(args)) {\n          var _value = Number(matches[1]);\n          var _unitOfMeasurement = matches[3];\n          if (_value !== 0 && !_unitOfMeasurement) {\n            missingUnitOfMeasurement = true;\n          }\n          if (_unitOfMeasurement === '%') {\n            parsedArgs.push(`${_value}%`);\n          } else {\n            parsedArgs.push(_value);\n          }\n        }\n        if (parsedArgs?.length === 1) {\n          parsedArgs.push(0);\n        }\n        return {\n          key: 'translate',\n          value: parsedArgs\n        };\n      case 'translateX':\n      case 'translateY':\n      case 'perspective':\n        var argMatches = argsWithUnitsRegex.exec(args);\n        if (!argMatches?.length) {\n          return {\n            key,\n            value: undefined\n          };\n        }\n        var value = Number(argMatches[1]);\n        var unitOfMeasurement = argMatches[3];\n        return {\n          key,\n          value\n        };\n      default:\n        return {\n          key,\n          value: !isNaN(args) ? Number(args) : args\n        };\n    }\n  };\n  var _default = exports.default = processTransform;\n});","lineCount":85,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13,"Object"],[4,8,11,13],[4,9,11,13,"defineProperty"],[4,23,11,13],[4,24,11,13,"exports"],[4,31,11,13],[5,4,11,13,"value"],[5,9,11,13],[6,2,11,13],[7,2,11,13,"exports"],[7,9,11,13],[7,10,11,13,"default"],[7,17,11,13],[7,20,11,13,"undefined"],[7,29,11,13],[8,2,13,0],[8,6,13,6,"stringifySafe"],[8,19,13,19],[8,22,13,22,"require"],[8,29,13,29],[8,30,13,29,"_dependencyMap"],[8,44,13,29],[8,47,13,58],[8,48,13,59],[8,49,13,60,"default"],[8,56,13,67],[9,2,14,0],[9,6,14,6,"invariant"],[9,15,14,15],[9,18,14,18,"require"],[9,25,14,25],[9,26,14,25,"_dependencyMap"],[9,40,14,25],[9,43,14,37],[9,44,14,38],[10,2,24,0],[10,11,24,9,"processTransform"],[10,27,24,25,"processTransform"],[10,28,25,2,"transform"],[10,37,25,35],[10,39,26,33],[11,4,27,2],[11,8,27,6],[11,15,27,13,"transform"],[11,24,27,22],[11,29,27,27],[11,37,27,35],[11,39,27,37],[12,6,28,4],[12,10,28,10,"regex"],[12,15,28,15],[12,18,28,18],[12,22,28,22,"RegExp"],[12,28,28,28],[12,29,28,29],[12,48,28,48],[12,49,28,49],[13,6,29,4],[13,10,29,10,"transformArray"],[13,24,29,39],[13,27,29,42],[13,29,29,44],[14,6,30,4],[14,10,30,8,"matches"],[14,17,30,15],[15,6,32,4],[15,13,32,12,"matches"],[15,20,32,19],[15,23,32,22,"regex"],[15,28,32,27],[15,29,32,28,"exec"],[15,33,32,32],[15,34,32,33,"transform"],[15,43,32,42],[15,44,32,43],[15,46,32,46],[16,8,33,6],[16,12,33,6,"_getKeyAndValueFromCS"],[16,33,33,6],[16,36,33,27,"_getKeyAndValueFromCSSTransform"],[16,67,33,58],[16,68,34,8,"matches"],[16,75,34,15],[16,76,34,16],[16,77,34,17],[16,78,34,18],[16,80,35,8,"matches"],[16,87,35,15],[16,88,35,16],[16,89,35,17],[16,90,36,6],[16,91,36,7],[17,10,33,13,"key"],[17,14,33,16],[17,17,33,16,"_getKeyAndValueFromCS"],[17,38,33,16],[17,39,33,13,"key"],[17,42,33,16],[18,10,33,18,"value"],[18,15,33,23],[18,18,33,23,"_getKeyAndValueFromCS"],[18,39,33,23],[18,40,33,18,"value"],[18,45,33,23],[19,8,38,6],[19,12,38,10,"value"],[19,17,38,15],[19,22,38,20,"undefined"],[19,31,38,29],[19,33,38,31],[20,10,39,8,"transformArray"],[20,24,39,22],[20,25,39,23,"push"],[20,29,39,27],[20,30,39,28],[21,12,39,29],[21,13,39,30,"key"],[21,17,39,33],[21,20,39,36,"value"],[22,10,39,41],[22,11,39,42],[22,12,39,43],[23,8,40,6],[24,6,41,4],[25,6,42,4,"transform"],[25,15,42,13],[25,18,42,16,"transformArray"],[25,32,42,30],[26,4,43,2],[27,4,49,2],[27,11,49,9,"transform"],[27,20,49,18],[28,2,50,0],[29,2,52,0],[29,6,52,6,"_getKeyAndValueFromCSSTransform"],[29,37,55,68],[29,40,55,71,"_getKeyAndValueFromCSSTransform"],[29,41,56,2,"key"],[29,44,56,5],[29,46,57,2,"args"],[29,50,57,6],[29,55,58,5],[30,4,59,2],[30,8,59,8,"argsWithUnitsRegex"],[30,26,59,26],[30,29,59,29],[30,33,59,33,"RegExp"],[30,39,59,39],[30,40,59,40],[30,75,59,75],[30,76,59,76],[31,4,61,2],[31,12,61,10,"key"],[31,15,61,13],[32,6,62,4],[32,11,62,9],[32,19,62,17],[33,8,63,6],[33,15,63,13],[34,10,63,14,"key"],[34,13,63,17],[35,10,63,19,"value"],[35,15,63,24],[35,17,63,26,"args"],[35,21,63,30],[35,22,63,31,"match"],[35,27,63,36],[35,28,63,37],[35,47,63,56],[35,48,63,57],[35,50,63,59,"map"],[35,53,63,62],[35,54,63,63,"Number"],[35,60,63,69],[36,8,63,70],[36,9,63,71],[37,6,64,4],[37,11,64,9],[37,22,64,20],[38,6,65,4],[38,11,65,9],[38,24,65,22],[39,8,66,6],[39,12,66,12,"parsedArgs"],[39,22,66,22],[39,25,66,25],[39,27,66,27],[40,8,67,6],[40,12,67,10,"missingUnitOfMeasurement"],[40,36,67,34],[40,39,67,37],[40,44,67,42],[41,8,69,6],[41,12,69,10,"matches"],[41,19,69,17],[42,8,70,6],[42,15,70,14,"matches"],[42,22,70,21],[42,25,70,24,"argsWithUnitsRegex"],[42,43,70,42],[42,44,70,43,"exec"],[42,48,70,47],[42,49,70,48,"args"],[42,53,70,52],[42,54,70,53],[42,56,70,56],[43,10,71,8],[43,14,71,14,"value"],[43,20,71,19],[43,23,71,22,"Number"],[43,29,71,28],[43,30,71,29,"matches"],[43,37,71,36],[43,38,71,37],[43,39,71,38],[43,40,71,39],[43,41,71,40],[44,10,72,8],[44,14,72,14,"unitOfMeasurement"],[44,32,72,31],[44,35,72,34,"matches"],[44,42,72,41],[44,43,72,42],[44,44,72,43],[44,45,72,44],[45,10,74,8],[45,14,74,12,"value"],[45,20,74,17],[45,25,74,22],[45,26,74,23],[45,30,74,27],[45,31,74,28,"unitOfMeasurement"],[45,49,74,45],[45,51,74,47],[46,12,75,10,"missingUnitOfMeasurement"],[46,36,75,34],[46,39,75,37],[46,43,75,41],[47,10,76,8],[48,10,78,8],[48,14,78,12,"unitOfMeasurement"],[48,32,78,29],[48,37,78,34],[48,40,78,37],[48,42,78,39],[49,12,79,10,"parsedArgs"],[49,22,79,20],[49,23,79,21,"push"],[49,27,79,25],[49,28,79,26],[49,31,79,29,"value"],[49,37,79,34],[49,40,79,37],[49,41,79,38],[50,10,80,8],[50,11,80,9],[50,17,80,15],[51,12,81,10,"parsedArgs"],[51,22,81,20],[51,23,81,21,"push"],[51,27,81,25],[51,28,81,26,"value"],[51,34,81,31],[51,35,81,32],[52,10,82,8],[53,8,83,6],[54,8,109,6],[54,12,109,10,"parsedArgs"],[54,22,109,20],[54,24,109,22,"length"],[54,30,109,28],[54,35,109,33],[54,36,109,34],[54,38,109,36],[55,10,110,8,"parsedArgs"],[55,20,110,18],[55,21,110,19,"push"],[55,25,110,23],[55,26,110,24],[55,27,110,25],[55,28,110,26],[56,8,111,6],[57,8,113,6],[57,15,113,13],[58,10,113,14,"key"],[58,13,113,17],[58,15,113,19],[58,26,113,30],[59,10,113,32,"value"],[59,15,113,37],[59,17,113,39,"parsedArgs"],[60,8,113,49],[60,9,113,50],[61,6,114,4],[61,11,114,9],[61,23,114,21],[62,6,115,4],[62,11,115,9],[62,23,115,21],[63,6,116,4],[63,11,116,9],[63,24,116,22],[64,8,117,6],[64,12,117,12,"argMatches"],[64,22,117,22],[64,25,117,25,"argsWithUnitsRegex"],[64,43,117,43],[64,44,117,44,"exec"],[64,48,117,48],[64,49,117,49,"args"],[64,53,117,53],[64,54,117,54],[65,8,119,6],[65,12,119,10],[65,13,119,11,"argMatches"],[65,23,119,21],[65,25,119,23,"length"],[65,31,119,29],[65,33,119,31],[66,10,120,8],[66,17,120,15],[67,12,120,16,"key"],[67,15,120,19],[68,12,120,21,"value"],[68,17,120,26],[68,19,120,28,"undefined"],[69,10,120,37],[69,11,120,38],[70,8,121,6],[71,8,123,6],[71,12,123,12,"value"],[71,17,123,17],[71,20,123,20,"Number"],[71,26,123,26],[71,27,123,27,"argMatches"],[71,37,123,37],[71,38,123,38],[71,39,123,39],[71,40,123,40],[71,41,123,41],[72,8,124,6],[72,12,124,12,"unitOfMeasurement"],[72,29,124,29],[72,32,124,32,"argMatches"],[72,42,124,42],[72,43,124,43],[72,44,124,44],[72,45,124,45],[73,8,134,6],[73,15,134,13],[74,10,134,14,"key"],[74,13,134,17],[75,10,134,19,"value"],[76,8,134,24],[76,9,134,25],[77,6,136,4],[78,8,137,6],[78,15,137,13],[79,10,137,14,"key"],[79,13,137,17],[80,10,137,19,"value"],[80,15,137,24],[80,17,137,26],[80,18,137,27,"isNaN"],[80,23,137,32],[80,24,137,33,"args"],[80,28,137,37],[80,29,137,38],[80,32,137,41,"Number"],[80,38,137,47],[80,39,137,48,"args"],[80,43,137,52],[80,44,137,53],[80,47,137,56,"args"],[81,8,137,60],[81,9,137,61],[82,4,138,2],[83,2,139,0],[83,3,139,1],[84,2,139,2],[84,6,139,2,"_default"],[84,14,139,2],[84,17,139,2,"exports"],[84,24,139,2],[84,25,139,2,"default"],[84,32,139,2],[84,35,269,15,"processTransform"],[84,51,269,31],[85,0,269,31],[85,3]],"functionMap":{"names":["<global>","processTransform","_getKeyAndValueFromCSSTransform","_validateTransforms","transform.forEach$argument_0","_validateTransform"],"mappings":"AAA;ACuB;CD0B;uEEK;CFoF;AGE;oBCC;GDgB;CHC;AKE;CL0G"}},"type":"js/module"}]}