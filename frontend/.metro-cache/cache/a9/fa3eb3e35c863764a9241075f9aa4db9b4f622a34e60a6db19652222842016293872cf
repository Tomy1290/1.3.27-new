{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"aU3Lrys8xTVpYSDJal2nhppojC8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":414},"end":{"line":9,"column":31,"index":445}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":481},"end":{"line":11,"column":34,"index":515}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":516},"end":{"line":24,"column":22,"index":714}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"../handlers/PanGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":856},"end":{"line":33,"column":66,"index":922}}],"key":"Z7WldcovRqVbXERv5Mkjp/bqHuA=","exportNames":["*"]}},{"name":"../handlers/TapGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":38,"column":0,"index":1052},"end":{"line":38,"column":66,"index":1118}}],"key":"+Msf+8iAdn6txPXicJvQZ0hdOZ0=","exportNames":["*"]}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":39,"column":0,"index":1119},"end":{"line":39,"column":33,"index":1152}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"3suYSPX9nHbHZ1xNTsKXtKj0atE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = undefined;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2]));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(_dependencyMap[3]));\n  var _getPrototypeOf2 = _interopRequireDefault(require(_dependencyMap[4]));\n  var _inherits2 = _interopRequireDefault(require(_dependencyMap[5]));\n  var _react = _interopRequireWildcard(require(_dependencyMap[6]));\n  var React = _react;\n  var _invariant = _interopRequireDefault(require(_dependencyMap[7]));\n  var _reactNative = require(_dependencyMap[8]);\n  var _PanGestureHandler = require(_dependencyMap[9]);\n  var _TapGestureHandler = require(_dependencyMap[10]);\n  var _State = require(_dependencyMap[11]);\n  var _jsxRuntime = require(_dependencyMap[12]);\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); } // This component is based on RN's DrawerLayoutAndroid API\n  //\n  // It perhaps deserves to be put in a separate repo, but since it relies on\n  // react-native-gesture-handler library which isn't very popular at the moment I\n  // decided to keep it here for the time being. It will allow us to move faster\n  // and fix issues that may arise in gesture handler library that could be found\n  // when using the drawer component\n  var DRAG_TOSS = 0.05;\n  var IDLE = 'Idle';\n  var DRAGGING = 'Dragging';\n  var SETTLING = 'Settling';\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  // Animated.AnimatedInterpolation has been converted to a generic type\n  // in @types/react-native 0.70. This way we can maintain compatibility\n  // with all versions of @types/react-native`\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n  /**\n   * @deprecated use Reanimated version of DrawerLayout instead\n   */\n  var DrawerLayout = exports.default = /*#__PURE__*/function (_Component) {\n    function DrawerLayout(_props) {\n      var _this;\n      (0, _classCallCheck2.default)(this, DrawerLayout);\n      _this = _callSuper(this, DrawerLayout, [_props]);\n      _this.accessibilityIsModalView = /*#__PURE__*/React.createRef();\n      _this.pointerEventsView = /*#__PURE__*/React.createRef();\n      _this.panGestureHandler = /*#__PURE__*/React.createRef();\n      _this.drawerShown = false;\n      _this.updateAnimatedEvent = (props, state) => {\n        // Event definition is based on\n        var drawerPosition = props.drawerPosition,\n          drawerWidth = props.drawerWidth,\n          drawerType = props.drawerType;\n        var dragXValue = state.dragX,\n          touchXValue = state.touchX,\n          drawerTranslation = state.drawerTranslation,\n          containerWidth = state.containerWidth;\n        var dragX = dragXValue;\n        var touchX = touchXValue;\n        if (drawerPosition !== 'left') {\n          // Most of the code is written in a way to handle left-side drawer. In\n          // order to handle right-side drawer the only thing we need to do is to\n          // reverse events coming from gesture handler in a way they emulate\n          // left-side drawer gestures. E.g. dragX is simply -dragX, and touchX is\n          // calulcated by subtracing real touchX from the width of the container\n          // (such that when touch happens at the right edge the value is simply 0)\n          dragX = _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragXValue); // TODO(TS): (for all \"as\" in this file) make sure we can map this\n          touchX = _reactNative.Animated.add(new _reactNative.Animated.Value(containerWidth), _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), touchXValue)); // TODO(TS): make sure we can map this;\n          touchXValue.setValue(containerWidth);\n        } else {\n          touchXValue.setValue(0);\n        }\n\n        // While closing the drawer when user starts gesture outside of its area (in greyed\n        // out part of the window), we want the drawer to follow only once finger reaches the\n        // edge of the drawer.\n        // E.g. on the diagram below drawer is illustrate by X signs and the greyed out area by\n        // dots. The touch gesture starts at '*' and moves left, touch path is indicated by\n        // an arrow pointing left\n        // 1) +---------------+ 2) +---------------+ 3) +---------------+ 4) +---------------+\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|.<-*..|    |XXXXXXXX|<--*..|    |XXXXX|<-----*..|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    +---------------+    +---------------+    +---------------+    +---------------+\n        //\n        // For the above to work properly we define animated value that will keep\n        // start position of the gesture. Then we use that value to calculate how\n        // much we need to subtract from the dragX. If the gesture started on the\n        // greyed out area we take the distance from the edge of the drawer to the\n        // start position. Otherwise we don't subtract at all and the drawer be\n        // pulled back as soon as you start the pan.\n        //\n        // This is used only when drawerType is \"front\"\n        //\n        var translationX = dragX;\n        if (drawerType === 'front') {\n          var startPositionX = _reactNative.Animated.add(touchX, _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragX));\n          var dragOffsetFromOnStartPosition = startPositionX.interpolate({\n            inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],\n            outputRange: [0, 0, 1]\n          });\n          translationX = _reactNative.Animated.add(dragX, dragOffsetFromOnStartPosition); // TODO: as above\n        }\n        _this.openValue = _reactNative.Animated.add(translationX, drawerTranslation).interpolate({\n          inputRange: [0, drawerWidth],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n        var gestureOptions = {\n          useNativeDriver: props.useNativeAnimations\n        };\n        if (_this.props.onDrawerSlide) {\n          gestureOptions.listener = ev => {\n            var translationX = Math.floor(Math.abs(ev.nativeEvent.translationX));\n            var position = translationX / _this.state.containerWidth;\n            _this.props.onDrawerSlide?.(position);\n          };\n        }\n        _this.onGestureEvent = _reactNative.Animated.event([{\n          nativeEvent: {\n            translationX: dragXValue,\n            x: touchXValue\n          }\n        }], gestureOptions);\n      };\n      _this.handleContainerLayout = _ref => {\n        var nativeEvent = _ref.nativeEvent;\n        _this.setState({\n          containerWidth: nativeEvent.layout.width\n        });\n      };\n      _this.emitStateChanged = (newState, drawerWillShow) => {\n        _this.props.onDrawerStateChanged?.(newState, drawerWillShow);\n      };\n      _this.openingHandlerStateChange = _ref2 => {\n        var nativeEvent = _ref2.nativeEvent;\n        if (nativeEvent.oldState === _State.State.ACTIVE) {\n          _this.handleRelease({\n            nativeEvent\n          });\n        } else if (nativeEvent.state === _State.State.ACTIVE) {\n          _this.emitStateChanged(DRAGGING, false);\n          _this.setState({\n            drawerState: DRAGGING\n          });\n          if (_this.props.keyboardDismissMode === 'on-drag') {\n            _reactNative.Keyboard.dismiss();\n          }\n          if (_this.props.hideStatusBar) {\n            _reactNative.StatusBar.setHidden(true, _this.props.statusBarAnimation || 'slide');\n          }\n        }\n      };\n      _this.onTapHandlerStateChange = _ref3 => {\n        var nativeEvent = _ref3.nativeEvent;\n        if (_this.drawerShown && nativeEvent.oldState === _State.State.ACTIVE && _this.props.drawerLockMode !== 'locked-open') {\n          _this.closeDrawer();\n        }\n      };\n      _this.handleRelease = _ref4 => {\n        var nativeEvent = _ref4.nativeEvent;\n        var _this$props = _this.props,\n          drawerWidth = _this$props.drawerWidth,\n          drawerPosition = _this$props.drawerPosition,\n          drawerType = _this$props.drawerType;\n        var containerWidth = _this.state.containerWidth;\n        var dragX = nativeEvent.translationX,\n          velocityX = nativeEvent.velocityX,\n          touchX = nativeEvent.x;\n        if (drawerPosition !== 'left') {\n          // See description in _updateAnimatedEvent about why events are flipped\n          // for right-side drawer\n          dragX = -dragX;\n          touchX = containerWidth - touchX;\n          velocityX = -velocityX;\n        }\n        var gestureStartX = touchX - dragX;\n        var dragOffsetBasedOnStart = 0;\n        if (drawerType === 'front') {\n          dragOffsetBasedOnStart = gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;\n        }\n        var startOffsetX = dragX + dragOffsetBasedOnStart + (_this.drawerShown ? drawerWidth : 0);\n        var projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n        var shouldOpen = projOffsetX > drawerWidth / 2;\n        if (shouldOpen) {\n          _this.animateDrawer(startOffsetX, drawerWidth, velocityX);\n        } else {\n          _this.animateDrawer(startOffsetX, 0, velocityX);\n        }\n      };\n      _this.updateShowing = showing => {\n        _this.drawerShown = showing;\n        _this.accessibilityIsModalView.current?.setNativeProps({\n          accessibilityViewIsModal: showing\n        });\n        _this.pointerEventsView.current?.setNativeProps({\n          pointerEvents: showing ? 'auto' : 'none'\n        });\n        var _this$props2 = _this.props,\n          drawerPosition = _this$props2.drawerPosition,\n          minSwipeDistance = _this$props2.minSwipeDistance,\n          edgeWidth = _this$props2.edgeWidth;\n        var fromLeft = drawerPosition === 'left';\n        // gestureOrientation is 1 if the expected gesture is from left to right and\n        // -1 otherwise e.g. when drawer is on the left and is closed we expect left\n        // to right gesture, thus orientation will be 1.\n        var gestureOrientation = (fromLeft ? 1 : -1) * (_this.drawerShown ? -1 : 1);\n        // When drawer is closed we want the hitSlop to be horizontally shorter than\n        // the container size by the value of SLOP. This will make it only activate\n        // when gesture happens not further than SLOP away from the edge\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: showing ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: showing ? undefined : edgeWidth\n        };\n        // @ts-ignore internal API, maybe could be fixed in handler types\n        _this.panGestureHandler.current?.setNativeProps({\n          hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance\n        });\n      };\n      _this.animateDrawer = (fromValue, toValue, velocity, speed) => {\n        _this.state.dragX.setValue(0);\n        _this.state.touchX.setValue(_this.props.drawerPosition === 'left' ? 0 : _this.state.containerWidth);\n        if (fromValue != null) {\n          var nextFramePosition = fromValue;\n          if (_this.props.useNativeAnimations) {\n            // When using native driver, we predict the next position of the\n            // animation because it takes one frame of a roundtrip to pass RELEASE\n            // event from native driver to JS before we can start animating. Without\n            // it, it is more noticable that the frame is dropped.\n            if (fromValue < toValue && velocity > 0) {\n              nextFramePosition = Math.min(fromValue + velocity / 60.0, toValue);\n            } else if (fromValue > toValue && velocity < 0) {\n              nextFramePosition = Math.max(fromValue + velocity / 60.0, toValue);\n            }\n          }\n          _this.state.drawerTranslation.setValue(nextFramePosition);\n        }\n        var willShow = toValue !== 0;\n        _this.updateShowing(willShow);\n        _this.emitStateChanged(SETTLING, willShow);\n        _this.setState({\n          drawerState: SETTLING\n        });\n        if (_this.props.hideStatusBar) {\n          _reactNative.StatusBar.setHidden(willShow, _this.props.statusBarAnimation || 'slide');\n        }\n        _reactNative.Animated.spring(_this.state.drawerTranslation, {\n          velocity,\n          bounciness: 0,\n          toValue,\n          useNativeDriver: _this.props.useNativeAnimations,\n          speed: speed ?? undefined\n        }).start(_ref5 => {\n          var finished = _ref5.finished;\n          if (finished) {\n            _this.emitStateChanged(IDLE, willShow);\n            _this.setState({\n              drawerOpened: willShow\n            });\n            if (_this.state.drawerState !== DRAGGING) {\n              // It's possilbe that user started drag while the drawer\n              // was settling, don't override state in this case\n              _this.setState({\n                drawerState: IDLE\n              });\n            }\n            if (willShow) {\n              _this.props.onDrawerOpen?.();\n            } else {\n              _this.props.onDrawerClose?.();\n            }\n          }\n        });\n      };\n      _this.openDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        _this.animateDrawer(\n        // TODO: decide if it should be null or undefined is the proper value\n        undefined, _this.props.drawerWidth, options.velocity ? options.velocity : 0, options.speed);\n\n        // We need to force the update, otherwise the overlay is not rerendered and\n        // it would not be clickable\n        _this.forceUpdate();\n      };\n      _this.closeDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        // TODO: decide if it should be null or undefined is the proper value\n        _this.animateDrawer(undefined, 0, options.velocity ? options.velocity : 0, options.speed);\n\n        // We need to force the update, otherwise the overlay is not rerendered and\n        // it would be still clickable\n        _this.forceUpdate();\n      };\n      _this.renderOverlay = () => {\n        /* Overlay styles */\n        (0, _invariant.default)(_this.openValue, 'should be set');\n        var overlayOpacity;\n        if (_this.state.drawerState !== IDLE) {\n          overlayOpacity = _this.openValue;\n        } else {\n          overlayOpacity = _this.state.drawerOpened ? 1 : 0;\n        }\n        var dynamicOverlayStyles = {\n          opacity: overlayOpacity,\n          backgroundColor: _this.props.overlayColor\n        };\n        return /*#__PURE__*/(0, _jsxRuntime.jsx)(_TapGestureHandler.TapGestureHandler, {\n          onHandlerStateChange: _this.onTapHandlerStateChange,\n          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.Animated.View, {\n            pointerEvents: _this.drawerShown ? 'auto' : 'none',\n            ref: _this.pointerEventsView,\n            style: [styles.overlay, dynamicOverlayStyles]\n          })\n        });\n      };\n      _this.renderDrawer = () => {\n        var _this$props3 = _this.props,\n          drawerBackgroundColor = _this$props3.drawerBackgroundColor,\n          drawerWidth = _this$props3.drawerWidth,\n          drawerPosition = _this$props3.drawerPosition,\n          drawerType = _this$props3.drawerType,\n          drawerContainerStyle = _this$props3.drawerContainerStyle,\n          contentContainerStyle = _this$props3.contentContainerStyle;\n        var fromLeft = drawerPosition === 'left';\n        var drawerSlide = drawerType !== 'back';\n        var containerSlide = drawerType !== 'front';\n\n        // We rely on row and row-reverse flex directions to position the drawer\n        // properly. Apparently for RTL these are flipped which requires us to use\n        // the opposite setting for the drawer to appear from left or right\n        // according to the drawerPosition prop\n        var reverseContentDirection = _reactNative.I18nManager.isRTL ? fromLeft : !fromLeft;\n        var dynamicDrawerStyles = {\n          backgroundColor: drawerBackgroundColor,\n          width: drawerWidth\n        };\n        var openValue = _this.openValue;\n        (0, _invariant.default)(openValue, 'should be set');\n        var containerStyles;\n        if (containerSlide) {\n          var containerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],\n            extrapolate: 'clamp'\n          });\n          containerStyles = {\n            transform: [{\n              translateX: containerTranslateX\n            }]\n          };\n        }\n        var drawerTranslateX = 0;\n        if (drawerSlide) {\n          var closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;\n          if (_this.state.drawerState !== IDLE) {\n            drawerTranslateX = openValue.interpolate({\n              inputRange: [0, 1],\n              outputRange: [closedDrawerOffset, 0],\n              extrapolate: 'clamp'\n            });\n          } else {\n            drawerTranslateX = _this.state.drawerOpened ? 0 : closedDrawerOffset;\n          }\n        }\n        var drawerStyles = {\n          transform: [{\n            translateX: drawerTranslateX\n          }],\n          flexDirection: reverseContentDirection ? 'row-reverse' : 'row'\n        };\n        return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNative.Animated.View, {\n          style: styles.main,\n          onLayout: _this.handleContainerLayout,\n          children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNative.Animated.View, {\n            style: [drawerType === 'front' ? styles.containerOnBack : styles.containerInFront, containerStyles, contentContainerStyle],\n            importantForAccessibility: _this.drawerShown ? 'no-hide-descendants' : 'yes',\n            children: [typeof _this.props.children === 'function' ? _this.props.children(_this.openValue) : _this.props.children, _this.renderOverlay()]\n          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.Animated.View, {\n            pointerEvents: \"box-none\",\n            ref: _this.accessibilityIsModalView,\n            accessibilityViewIsModal: _this.drawerShown,\n            style: [styles.drawerContainer, drawerStyles, drawerContainerStyle],\n            children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.View, {\n              style: dynamicDrawerStyles,\n              children: _this.props.renderNavigationView(_this.openValue)\n            })\n          })]\n        });\n      };\n      _this.setPanGestureRef = ref => {\n        // TODO(TS): make sure it is OK taken from\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31065#issuecomment-596081842\n        _this.panGestureHandler.current = ref;\n        _this.props.onGestureRef?.(ref);\n      };\n      var _dragX = new _reactNative.Animated.Value(0);\n      var _touchX = new _reactNative.Animated.Value(0);\n      var _drawerTranslation = new _reactNative.Animated.Value(0);\n      _this.state = {\n        dragX: _dragX,\n        touchX: _touchX,\n        drawerTranslation: _drawerTranslation,\n        containerWidth: 0,\n        drawerState: IDLE,\n        drawerOpened: false\n      };\n      _this.updateAnimatedEvent(_props, _this.state);\n      return _this;\n    }\n    (0, _inherits2.default)(DrawerLayout, _Component);\n    return (0, _createClass2.default)(DrawerLayout, [{\n      key: \"shouldComponentUpdate\",\n      value: function shouldComponentUpdate(props, state) {\n        if (this.props.drawerPosition !== props.drawerPosition || this.props.drawerWidth !== props.drawerWidth || this.props.drawerType !== props.drawerType || this.state.containerWidth !== state.containerWidth) {\n          this.updateAnimatedEvent(props, state);\n        }\n        return true;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props4 = this.props,\n          drawerPosition = _this$props4.drawerPosition,\n          drawerLockMode = _this$props4.drawerLockMode,\n          edgeWidth = _this$props4.edgeWidth,\n          minSwipeDistance = _this$props4.minSwipeDistance;\n        var fromLeft = drawerPosition === 'left';\n\n        // gestureOrientation is 1 if the expected gesture is from left to right and\n        // -1 otherwise e.g. when drawer is on the left and is closed we expect left\n        // to right gesture, thus orientation will be 1.\n        var gestureOrientation = (fromLeft ? 1 : -1) * (this.drawerShown ? -1 : 1);\n\n        // When drawer is closed we want the hitSlop to be horizontally shorter than\n        // the container size by the value of SLOP. This will make it only activate\n        // when gesture happens not further than SLOP away from the edge\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: this.drawerShown ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: this.drawerShown ? undefined : edgeWidth\n        };\n        return /*#__PURE__*/(0, _jsxRuntime.jsx)(_PanGestureHandler.PanGestureHandler\n        // @ts-ignore could be fixed in handler types\n        , {\n          userSelect: this.props.userSelect,\n          activeCursor: this.props.activeCursor,\n          mouseButton: this.props.mouseButton,\n          enableContextMenu: this.props.enableContextMenu,\n          ref: this.setPanGestureRef,\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance,\n          failOffsetY: [-15, 15],\n          onGestureEvent: this.onGestureEvent,\n          onHandlerStateChange: this.openingHandlerStateChange,\n          enableTrackpadTwoFingerGesture: this.props.enableTrackpadTwoFingerGesture,\n          enabled: drawerLockMode !== 'locked-closed' && drawerLockMode !== 'locked-open',\n          children: this.renderDrawer()\n        });\n      }\n    }]);\n  }(_react.Component);\n  DrawerLayout.defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'rgba(0, 0, 0, 0.7)',\n    drawerLockMode: 'unlocked',\n    enableTrackpadTwoFingerGesture: false\n  };\n  DrawerLayout.positions = {\n    Left: 'left',\n    Right: 'right'\n  };\n  var styles = _reactNative.StyleSheet.create({\n    drawerContainer: {\n      ..._reactNative.StyleSheet.absoluteFillObject,\n      zIndex: 1001,\n      flexDirection: 'row'\n    },\n    containerInFront: {\n      ..._reactNative.StyleSheet.absoluteFillObject,\n      zIndex: 1002\n    },\n    containerOnBack: {\n      ..._reactNative.StyleSheet.absoluteFillObject\n    },\n    main: {\n      flex: 1,\n      zIndex: 0,\n      overflow: 'hidden'\n    },\n    overlay: {\n      ..._reactNative.StyleSheet.absoluteFillObject,\n      zIndex: 1000\n    }\n  });\n});","lineCount":542,"map":[[12,2,9,0],[12,6,9,0,"_react"],[12,12,9,0],[12,15,9,0,"_interopRequireWildcard"],[12,38,9,0],[12,39,9,0,"require"],[12,46,9,0],[12,47,9,0,"_dependencyMap"],[12,61,9,0],[13,2,9,31],[13,6,9,31,"React"],[13,11,9,31],[13,14,9,31,"_react"],[13,20,9,31],[14,2,11,0],[14,6,11,0,"_invariant"],[14,16,11,0],[14,19,11,0,"_interopRequireDefault"],[14,41,11,0],[14,42,11,0,"require"],[14,49,11,0],[14,50,11,0,"_dependencyMap"],[14,64,11,0],[15,2,12,0],[15,6,12,0,"_reactNative"],[15,18,12,0],[15,21,12,0,"require"],[15,28,12,0],[15,29,12,0,"_dependencyMap"],[15,43,12,0],[16,2,33,0],[16,6,33,0,"_PanGestureHandler"],[16,24,33,0],[16,27,33,0,"require"],[16,34,33,0],[16,35,33,0,"_dependencyMap"],[16,49,33,0],[17,2,38,0],[17,6,38,0,"_TapGestureHandler"],[17,24,38,0],[17,27,38,0,"require"],[17,34,38,0],[17,35,38,0,"_dependencyMap"],[17,49,38,0],[18,2,39,0],[18,6,39,0,"_State"],[18,12,39,0],[18,15,39,0,"require"],[18,22,39,0],[18,23,39,0,"_dependencyMap"],[18,37,39,0],[19,2,39,33],[19,6,39,33,"_jsxRuntime"],[19,17,39,33],[19,20,39,33,"require"],[19,27,39,33],[19,28,39,33,"_dependencyMap"],[19,42,39,33],[20,2,39,33],[20,11,39,33,"_interopRequireWildcard"],[20,35,39,33,"e"],[20,36,39,33],[20,38,39,33,"t"],[20,39,39,33],[20,68,39,33,"WeakMap"],[20,75,39,33],[20,81,39,33,"r"],[20,82,39,33],[20,89,39,33,"WeakMap"],[20,96,39,33],[20,100,39,33,"n"],[20,101,39,33],[20,108,39,33,"WeakMap"],[20,115,39,33],[20,127,39,33,"_interopRequireWildcard"],[20,150,39,33],[20,162,39,33,"_interopRequireWildcard"],[20,163,39,33,"e"],[20,164,39,33],[20,166,39,33,"t"],[20,167,39,33],[20,176,39,33,"t"],[20,177,39,33],[20,181,39,33,"e"],[20,182,39,33],[20,186,39,33,"e"],[20,187,39,33],[20,188,39,33,"__esModule"],[20,198,39,33],[20,207,39,33,"e"],[20,208,39,33],[20,214,39,33,"o"],[20,215,39,33],[20,217,39,33,"i"],[20,218,39,33],[20,220,39,33,"f"],[20,221,39,33],[20,226,39,33,"__proto__"],[20,235,39,33],[20,243,39,33,"default"],[20,250,39,33],[20,252,39,33,"e"],[20,253,39,33],[20,270,39,33,"e"],[20,271,39,33],[20,294,39,33,"e"],[20,295,39,33],[20,320,39,33,"e"],[20,321,39,33],[20,330,39,33,"f"],[20,331,39,33],[20,337,39,33,"o"],[20,338,39,33],[20,341,39,33,"t"],[20,342,39,33],[20,345,39,33,"n"],[20,346,39,33],[20,349,39,33,"r"],[20,350,39,33],[20,358,39,33,"o"],[20,359,39,33],[20,360,39,33,"has"],[20,363,39,33],[20,364,39,33,"e"],[20,365,39,33],[20,375,39,33,"o"],[20,376,39,33],[20,377,39,33,"get"],[20,380,39,33],[20,381,39,33,"e"],[20,382,39,33],[20,385,39,33,"o"],[20,386,39,33],[20,387,39,33,"set"],[20,390,39,33],[20,391,39,33,"e"],[20,392,39,33],[20,394,39,33,"f"],[20,395,39,33],[20,409,39,33,"_t"],[20,411,39,33],[20,415,39,33,"e"],[20,416,39,33],[20,432,39,33,"_t"],[20,434,39,33],[20,441,39,33,"hasOwnProperty"],[20,455,39,33],[20,456,39,33,"call"],[20,460,39,33],[20,461,39,33,"e"],[20,462,39,33],[20,464,39,33,"_t"],[20,466,39,33],[20,473,39,33,"i"],[20,474,39,33],[20,478,39,33,"o"],[20,479,39,33],[20,482,39,33,"Object"],[20,488,39,33],[20,489,39,33,"defineProperty"],[20,503,39,33],[20,508,39,33,"Object"],[20,514,39,33],[20,515,39,33,"getOwnPropertyDescriptor"],[20,539,39,33],[20,540,39,33,"e"],[20,541,39,33],[20,543,39,33,"_t"],[20,545,39,33],[20,552,39,33,"i"],[20,553,39,33],[20,554,39,33,"get"],[20,557,39,33],[20,561,39,33,"i"],[20,562,39,33],[20,563,39,33,"set"],[20,566,39,33],[20,570,39,33,"o"],[20,571,39,33],[20,572,39,33,"f"],[20,573,39,33],[20,575,39,33,"_t"],[20,577,39,33],[20,579,39,33,"i"],[20,580,39,33],[20,584,39,33,"f"],[20,585,39,33],[20,586,39,33,"_t"],[20,588,39,33],[20,592,39,33,"e"],[20,593,39,33],[20,594,39,33,"_t"],[20,596,39,33],[20,607,39,33,"f"],[20,608,39,33],[20,613,39,33,"e"],[20,614,39,33],[20,616,39,33,"t"],[20,617,39,33],[21,2,39,33],[21,11,39,33,"_callSuper"],[21,22,39,33,"t"],[21,23,39,33],[21,25,39,33,"o"],[21,26,39,33],[21,28,39,33,"e"],[21,29,39,33],[21,40,39,33,"o"],[21,41,39,33],[21,48,39,33,"_getPrototypeOf2"],[21,64,39,33],[21,65,39,33,"default"],[21,72,39,33],[21,74,39,33,"o"],[21,75,39,33],[21,82,39,33,"_possibleConstructorReturn2"],[21,109,39,33],[21,110,39,33,"default"],[21,117,39,33],[21,119,39,33,"t"],[21,120,39,33],[21,122,39,33,"_isNativeReflectConstruct"],[21,147,39,33],[21,152,39,33,"Reflect"],[21,159,39,33],[21,160,39,33,"construct"],[21,169,39,33],[21,170,39,33,"o"],[21,171,39,33],[21,173,39,33,"e"],[21,174,39,33],[21,186,39,33,"_getPrototypeOf2"],[21,202,39,33],[21,203,39,33,"default"],[21,210,39,33],[21,212,39,33,"t"],[21,213,39,33],[21,215,39,33,"constructor"],[21,226,39,33],[21,230,39,33,"o"],[21,231,39,33],[21,232,39,33,"apply"],[21,237,39,33],[21,238,39,33,"t"],[21,239,39,33],[21,241,39,33,"e"],[21,242,39,33],[22,2,39,33],[22,11,39,33,"_isNativeReflectConstruct"],[22,37,39,33],[22,51,39,33,"t"],[22,52,39,33],[22,56,39,33,"Boolean"],[22,63,39,33],[22,64,39,33,"prototype"],[22,73,39,33],[22,74,39,33,"valueOf"],[22,81,39,33],[22,82,39,33,"call"],[22,86,39,33],[22,87,39,33,"Reflect"],[22,94,39,33],[22,95,39,33,"construct"],[22,104,39,33],[22,105,39,33,"Boolean"],[22,112,39,33],[22,145,39,33,"t"],[22,146,39,33],[22,159,39,33,"_isNativeReflectConstruct"],[22,184,39,33],[22,196,39,33,"_isNativeReflectConstruct"],[22,197,39,33],[22,210,39,33,"t"],[22,211,39,33],[22,221,1,0],[23,2,2,0],[24,2,3,0],[25,2,4,0],[26,2,5,0],[27,2,6,0],[28,2,7,0],[29,2,41,0],[29,6,41,6,"DRAG_TOSS"],[29,15,41,15],[29,18,41,18],[29,22,41,22],[30,2,43,0],[30,6,43,6,"IDLE"],[30,10,43,23],[30,13,43,26],[30,19,43,32],[31,2,44,0],[31,6,44,6,"DRAGGING"],[31,14,44,27],[31,17,44,30],[31,27,44,40],[32,2,45,0],[32,6,45,6,"SETTLING"],[32,14,45,27],[32,17,45,30],[32,27,45,40],[34,2,47,0],[35,0,48,0],[36,0,49,0],[38,2,52,0],[39,0,53,0],[40,0,54,0],[42,2,57,0],[43,0,58,0],[44,0,59,0],[46,2,62,0],[47,0,63,0],[48,0,64,0],[50,2,67,0],[51,0,68,0],[52,0,69,0],[54,2,72,0],[55,2,73,0],[56,2,74,0],[58,2,77,0],[59,0,78,0],[60,0,79,0],[62,2,208,0],[63,0,209,0],[64,0,210,0],[66,2,220,0],[67,0,221,0],[68,0,222,0],[69,2,228,0],[70,0,229,0],[71,0,230,0],[72,2,228,0],[72,6,231,21,"DrawerLayout"],[72,18,231,33],[72,21,231,33,"exports"],[72,28,231,33],[72,29,231,33,"default"],[72,36,231,33],[72,62,231,33,"_Component"],[72,72,231,33],[73,4,247,2],[73,13,247,2,"DrawerLayout"],[73,26,247,14,"props"],[73,32,247,38],[73,34,247,40],[74,6,247,40],[74,10,247,40,"_this"],[74,15,247,40],[75,6,247,40],[75,10,247,40,"_classCallCheck2"],[75,26,247,40],[75,27,247,40,"default"],[75,34,247,40],[75,42,247,40,"DrawerLayout"],[75,54,247,40],[76,6,248,4,"_this"],[76,11,248,4],[76,14,248,4,"_callSuper"],[76,24,248,4],[76,31,248,4,"DrawerLayout"],[76,43,248,4],[76,46,248,10,"props"],[76,52,248,15],[77,6,248,17,"_this"],[77,11,248,17],[77,12,283,10,"accessibilityIsModalView"],[77,36,283,34],[77,52,283,37,"React"],[77,57,283,42],[77,58,283,43,"createRef"],[77,67,283,52],[77,68,283,59],[77,69,283,60],[78,6,283,60,"_this"],[78,11,283,60],[78,12,284,10,"pointerEventsView"],[78,29,284,27],[78,45,284,30,"React"],[78,50,284,35],[78,51,284,36,"createRef"],[78,60,284,45],[78,61,284,52],[78,62,284,53],[79,6,284,53,"_this"],[79,11,284,53],[79,12,285,10,"panGestureHandler"],[79,29,285,27],[79,45,285,30,"React"],[79,50,285,35],[79,51,285,36,"createRef"],[79,60,285,45],[79,61,285,72],[79,62,285,73],[80,6,285,73,"_this"],[80,11,285,73],[80,12,286,10,"drawerShown"],[80,23,286,21],[80,26,286,24],[80,31,286,29],[81,6,286,29,"_this"],[81,11,286,29],[81,12,293,10,"updateAnimatedEvent"],[81,31,293,29],[81,34,293,32],[81,35,294,4,"props"],[81,40,294,28],[81,42,295,4,"state"],[81,47,295,28],[81,52,296,7],[82,8,297,4],[83,8,298,4],[83,12,298,12,"drawerPosition"],[83,26,298,26],[83,29,298,56,"props"],[83,34,298,61],[83,35,298,12,"drawerPosition"],[83,49,298,26],[84,10,298,28,"drawerWidth"],[84,21,298,39],[84,24,298,56,"props"],[84,29,298,61],[84,30,298,28,"drawerWidth"],[84,41,298,39],[85,10,298,41,"drawerType"],[85,20,298,51],[85,23,298,56,"props"],[85,28,298,61],[85,29,298,41,"drawerType"],[85,39,298,51],[86,8,299,4],[86,12,300,13,"dragXValue"],[86,22,300,23],[86,25,304,8,"state"],[86,30,304,13],[86,31,300,6,"dragX"],[86,36,300,11],[87,10,301,14,"touchXValue"],[87,21,301,25],[87,24,304,8,"state"],[87,29,304,13],[87,30,301,6,"touchX"],[87,36,301,12],[88,10,302,6,"drawerTranslation"],[88,27,302,23],[88,30,304,8,"state"],[88,35,304,13],[88,36,302,6,"drawerTranslation"],[88,53,302,23],[89,10,303,6,"containerWidth"],[89,24,303,20],[89,27,304,8,"state"],[89,32,304,13],[89,33,303,6,"containerWidth"],[89,47,303,20],[90,8,306,4],[90,12,306,8,"dragX"],[90,17,306,13],[90,20,306,16,"dragXValue"],[90,30,306,26],[91,8,307,4],[91,12,307,8,"touchX"],[91,18,307,14],[91,21,307,17,"touchXValue"],[91,32,307,28],[92,8,309,4],[92,12,309,8,"drawerPosition"],[92,26,309,22],[92,31,309,27],[92,37,309,33],[92,39,309,35],[93,10,310,6],[94,10,311,6],[95,10,312,6],[96,10,313,6],[97,10,314,6],[98,10,315,6],[99,10,316,6,"dragX"],[99,15,316,11],[99,18,316,14,"Animated"],[99,39,316,22],[99,40,316,23,"multiply"],[99,48,316,31],[99,49,317,8],[99,53,317,12,"Animated"],[99,74,317,20],[99,75,317,21,"Value"],[99,80,317,26],[99,83,317,29],[99,84,317,30],[99,86,318,8,"dragXValue"],[99,96,319,6],[99,97,319,25],[99,98,319,26],[99,99,319,27],[100,10,320,6,"touchX"],[100,16,320,12],[100,19,320,15,"Animated"],[100,40,320,23],[100,41,320,24,"add"],[100,44,320,27],[100,45,321,8],[100,49,321,12,"Animated"],[100,70,321,20],[100,71,321,21,"Value"],[100,76,321,26],[100,77,321,27,"containerWidth"],[100,91,321,41],[100,92,321,42],[100,94,322,8,"Animated"],[100,115,322,16],[100,116,322,17,"multiply"],[100,124,322,25],[100,125,322,26],[100,129,322,30,"Animated"],[100,150,322,38],[100,151,322,39,"Value"],[100,156,322,44],[100,159,322,47],[100,160,322,48],[100,162,322,50,"touchXValue"],[100,173,322,61],[100,174,323,6],[100,175,323,25],[100,176,323,26],[100,177,323,27],[101,10,324,6,"touchXValue"],[101,21,324,17],[101,22,324,18,"setValue"],[101,30,324,26],[101,31,324,27,"containerWidth"],[101,45,324,41],[101,46,324,42],[102,8,325,4],[102,9,325,5],[102,15,325,11],[103,10,326,6,"touchXValue"],[103,21,326,17],[103,22,326,18,"setValue"],[103,30,326,26],[103,31,326,27],[103,32,326,28],[103,33,326,29],[104,8,327,4],[106,8,329,4],[107,8,330,4],[108,8,331,4],[109,8,332,4],[110,8,333,4],[111,8,334,4],[112,8,335,4],[113,8,336,4],[114,8,337,4],[115,8,338,4],[116,8,339,4],[117,8,340,4],[118,8,341,4],[119,8,342,4],[120,8,343,4],[121,8,344,4],[122,8,345,4],[123,8,346,4],[124,8,347,4],[125,8,348,4],[126,8,349,4],[127,8,350,4],[128,8,351,4],[129,8,352,4],[130,8,353,4],[131,8,354,4],[131,12,354,8,"translationX"],[131,24,354,20],[131,27,354,23,"dragX"],[131,32,354,28],[132,8,355,4],[132,12,355,8,"drawerType"],[132,22,355,18],[132,27,355,23],[132,34,355,30],[132,36,355,32],[133,10,356,6],[133,14,356,12,"startPositionX"],[133,28,356,26],[133,31,356,29,"Animated"],[133,52,356,37],[133,53,356,38,"add"],[133,56,356,41],[133,57,357,8,"touchX"],[133,63,357,14],[133,65,358,8,"Animated"],[133,86,358,16],[133,87,358,17,"multiply"],[133,95,358,25],[133,96,358,26],[133,100,358,30,"Animated"],[133,121,358,38],[133,122,358,39,"Value"],[133,127,358,44],[133,130,358,47],[133,131,358,48],[133,133,358,50,"dragX"],[133,138,358,55],[133,139,359,6],[133,140,359,7],[134,10,361,6],[134,14,361,12,"dragOffsetFromOnStartPosition"],[134,43,361,41],[134,46,361,44,"startPositionX"],[134,60,361,58],[134,61,361,59,"interpolate"],[134,72,361,70],[134,73,361,71],[135,12,362,8,"inputRange"],[135,22,362,18],[135,24,362,20],[135,25,362,21,"drawerWidth"],[135,36,362,32],[135,39,362,36],[135,40,362,37],[135,42,362,39,"drawerWidth"],[135,53,362,50],[135,55,362,53,"drawerWidth"],[135,66,362,64],[135,69,362,68],[135,70,362,69],[135,71,362,70],[136,12,363,8,"outputRange"],[136,23,363,19],[136,25,363,21],[136,26,363,22],[136,27,363,23],[136,29,363,25],[136,30,363,26],[136,32,363,28],[136,33,363,29],[137,10,364,6],[137,11,364,7],[137,12,364,8],[138,10,365,6,"translationX"],[138,22,365,18],[138,25,365,21,"Animated"],[138,46,365,29],[138,47,365,30,"add"],[138,50,365,33],[138,51,366,8,"dragX"],[138,56,366,13],[138,58,367,8,"dragOffsetFromOnStartPosition"],[138,87,368,6],[138,88,368,25],[138,89,368,26],[138,90,368,27],[139,8,369,4],[140,8,371,4,"_this"],[140,13,371,4],[140,14,371,9,"openValue"],[140,23,371,18],[140,26,371,21,"Animated"],[140,47,371,29],[140,48,371,30,"add"],[140,51,371,33],[140,52,371,34,"translationX"],[140,64,371,46],[140,66,371,48,"drawerTranslation"],[140,83,371,65],[140,84,371,66],[140,85,371,67,"interpolate"],[140,96,371,78],[140,97,371,79],[141,10,372,6,"inputRange"],[141,20,372,16],[141,22,372,18],[141,23,372,19],[141,24,372,20],[141,26,372,22,"drawerWidth"],[141,37,372,33],[141,38,372,35],[142,10,373,6,"outputRange"],[142,21,373,17],[142,23,373,19],[142,24,373,20],[142,25,373,21],[142,27,373,23],[142,28,373,24],[142,29,373,25],[143,10,374,6,"extrapolate"],[143,21,374,17],[143,23,374,19],[144,8,375,4],[144,9,375,5],[144,10,375,6],[145,8,377,4],[145,12,377,10,"gestureOptions"],[145,26,383,5],[145,29,383,8],[146,10,384,6,"useNativeDriver"],[146,25,384,21],[146,27,384,23,"props"],[146,32,384,28],[146,33,384,29,"useNativeAnimations"],[147,8,385,4],[147,9,385,5],[148,8,387,4],[148,12,387,8,"_this"],[148,17,387,8],[148,18,387,13,"props"],[148,23,387,18],[148,24,387,19,"onDrawerSlide"],[148,37,387,32],[148,39,387,34],[149,10,388,6,"gestureOptions"],[149,24,388,20],[149,25,388,21,"listener"],[149,33,388,29],[149,36,388,33,"ev"],[149,38,388,35],[149,42,388,40],[150,12,389,8],[150,16,389,14,"translationX"],[150,28,389,26],[150,31,389,29,"Math"],[150,35,389,33],[150,36,389,34,"floor"],[150,41,389,39],[150,42,389,40,"Math"],[150,46,389,44],[150,47,389,45,"abs"],[150,50,389,48],[150,51,389,49,"ev"],[150,53,389,51],[150,54,389,52,"nativeEvent"],[150,65,389,63],[150,66,389,64,"translationX"],[150,78,389,76],[150,79,389,77],[150,80,389,78],[151,12,390,8],[151,16,390,14,"position"],[151,24,390,22],[151,27,390,25,"translationX"],[151,39,390,37],[151,42,390,40,"_this"],[151,47,390,40],[151,48,390,45,"state"],[151,53,390,50],[151,54,390,51,"containerWidth"],[151,68,390,65],[152,12,392,8,"_this"],[152,17,392,8],[152,18,392,13,"props"],[152,23,392,18],[152,24,392,19,"onDrawerSlide"],[152,37,392,32],[152,40,392,35,"position"],[152,48,392,43],[152,49,392,44],[153,10,393,6],[153,11,393,7],[154,8,394,4],[155,8,396,4,"_this"],[155,13,396,4],[155,14,396,9,"onGestureEvent"],[155,28,396,23],[155,31,396,26,"Animated"],[155,52,396,34],[155,53,396,35,"event"],[155,58,396,40],[155,59,397,6],[155,60,397,7],[156,10,397,9,"nativeEvent"],[156,21,397,20],[156,23,397,22],[157,12,397,24,"translationX"],[157,24,397,36],[157,26,397,38,"dragXValue"],[157,36,397,48],[158,12,397,50,"x"],[158,13,397,51],[158,15,397,53,"touchXValue"],[159,10,397,65],[160,8,397,67],[160,9,397,68],[160,10,397,69],[160,12,398,6,"gestureOptions"],[160,26,399,4],[160,27,399,5],[161,6,400,2],[161,7,400,3],[162,6,400,3,"_this"],[162,11,400,3],[162,12,402,10,"handleContainerLayout"],[162,33,402,31],[162,36,402,34,"_ref"],[162,40,402,34],[162,44,402,74],[163,8,402,74],[163,12,402,37,"nativeEvent"],[163,23,402,48],[163,26,402,48,"_ref"],[163,30,402,48],[163,31,402,37,"nativeEvent"],[163,42,402,48],[164,8,403,4,"_this"],[164,13,403,4],[164,14,403,9,"setState"],[164,22,403,17],[164,23,403,18],[165,10,403,20,"containerWidth"],[165,24,403,34],[165,26,403,36,"nativeEvent"],[165,37,403,47],[165,38,403,48,"layout"],[165,44,403,54],[165,45,403,55,"width"],[166,8,403,61],[166,9,403,62],[166,10,403,63],[167,6,404,2],[167,7,404,3],[168,6,404,3,"_this"],[168,11,404,3],[168,12,406,10,"emitStateChanged"],[168,28,406,26],[168,31,406,29],[168,32,407,4,"newState"],[168,40,407,25],[168,42,408,4,"drawerWillShow"],[168,56,408,27],[168,61,409,7],[169,8,410,4,"_this"],[169,13,410,4],[169,14,410,9,"props"],[169,19,410,14],[169,20,410,15,"onDrawerStateChanged"],[169,40,410,35],[169,43,410,38,"newState"],[169,51,410,46],[169,53,410,48,"drawerWillShow"],[169,67,410,62],[169,68,410,63],[170,6,411,2],[170,7,411,3],[171,6,411,3,"_this"],[171,11,411,3],[171,12,413,10,"openingHandlerStateChange"],[171,37,413,35],[171,40,413,38,"_ref2"],[171,45,413,38],[171,49,415,64],[172,8,415,64],[172,12,414,4,"nativeEvent"],[172,23,414,15],[172,26,414,15,"_ref2"],[172,31,414,15],[172,32,414,4,"nativeEvent"],[172,43,414,15],[173,8,416,4],[173,12,416,8,"nativeEvent"],[173,23,416,19],[173,24,416,20,"oldState"],[173,32,416,28],[173,37,416,33,"State"],[173,49,416,38],[173,50,416,39,"ACTIVE"],[173,56,416,45],[173,58,416,47],[174,10,417,6,"_this"],[174,15,417,6],[174,16,417,11,"handleRelease"],[174,29,417,24],[174,30,417,25],[175,12,417,27,"nativeEvent"],[176,10,417,39],[176,11,417,40],[176,12,417,41],[177,8,418,4],[177,9,418,5],[177,15,418,11],[177,19,418,15,"nativeEvent"],[177,30,418,26],[177,31,418,27,"state"],[177,36,418,32],[177,41,418,37,"State"],[177,53,418,42],[177,54,418,43,"ACTIVE"],[177,60,418,49],[177,62,418,51],[178,10,419,6,"_this"],[178,15,419,6],[178,16,419,11,"emitStateChanged"],[178,32,419,27],[178,33,419,28,"DRAGGING"],[178,41,419,36],[178,43,419,38],[178,48,419,43],[178,49,419,44],[179,10,420,6,"_this"],[179,15,420,6],[179,16,420,11,"setState"],[179,24,420,19],[179,25,420,20],[180,12,420,22,"drawerState"],[180,23,420,33],[180,25,420,35,"DRAGGING"],[181,10,420,44],[181,11,420,45],[181,12,420,46],[182,10,421,6],[182,14,421,10,"_this"],[182,19,421,10],[182,20,421,15,"props"],[182,25,421,20],[182,26,421,21,"keyboardDismissMode"],[182,45,421,40],[182,50,421,45],[182,59,421,54],[182,61,421,56],[183,12,422,8,"Keyboard"],[183,33,422,16],[183,34,422,17,"dismiss"],[183,41,422,24],[183,42,422,25],[183,43,422,26],[184,10,423,6],[185,10,424,6],[185,14,424,10,"_this"],[185,19,424,10],[185,20,424,15,"props"],[185,25,424,20],[185,26,424,21,"hideStatusBar"],[185,39,424,34],[185,41,424,36],[186,12,425,8,"StatusBar"],[186,34,425,17],[186,35,425,18,"setHidden"],[186,44,425,27],[186,45,425,28],[186,49,425,32],[186,51,425,34,"_this"],[186,56,425,34],[186,57,425,39,"props"],[186,62,425,44],[186,63,425,45,"statusBarAnimation"],[186,81,425,63],[186,85,425,67],[186,92,425,74],[186,93,425,75],[187,10,426,6],[188,8,427,4],[189,6,428,2],[189,7,428,3],[190,6,428,3,"_this"],[190,11,428,3],[190,12,430,10,"onTapHandlerStateChange"],[190,35,430,33],[190,38,430,36,"_ref3"],[190,43,430,36],[190,47,432,64],[191,8,432,64],[191,12,431,4,"nativeEvent"],[191,23,431,15],[191,26,431,15,"_ref3"],[191,31,431,15],[191,32,431,4,"nativeEvent"],[191,43,431,15],[192,8,433,4],[192,12,434,6,"_this"],[192,17,434,6],[192,18,434,11,"drawerShown"],[192,29,434,22],[192,33,435,6,"nativeEvent"],[192,44,435,17],[192,45,435,18,"oldState"],[192,53,435,26],[192,58,435,31,"State"],[192,70,435,36],[192,71,435,37,"ACTIVE"],[192,77,435,43],[192,81,436,6,"_this"],[192,86,436,6],[192,87,436,11,"props"],[192,92,436,16],[192,93,436,17,"drawerLockMode"],[192,107,436,31],[192,112,436,36],[192,125,436,49],[192,127,437,6],[193,10,438,6,"_this"],[193,15,438,6],[193,16,438,11,"closeDrawer"],[193,27,438,22],[193,28,438,23],[193,29,438,24],[194,8,439,4],[195,6,440,2],[195,7,440,3],[196,6,440,3,"_this"],[196,11,440,3],[196,12,442,10,"handleRelease"],[196,25,442,23],[196,28,442,26,"_ref4"],[196,33,442,26],[196,37,444,64],[197,8,444,64],[197,12,443,4,"nativeEvent"],[197,23,443,15],[197,26,443,15,"_ref4"],[197,31,443,15],[197,32,443,4,"nativeEvent"],[197,43,443,15],[198,8,445,4],[198,12,445,4,"_this$props"],[198,23,445,4],[198,26,445,56,"_this"],[198,31,445,56],[198,32,445,61,"props"],[198,37,445,66],[199,10,445,12,"drawerWidth"],[199,21,445,23],[199,24,445,23,"_this$props"],[199,35,445,23],[199,36,445,12,"drawerWidth"],[199,47,445,23],[200,10,445,25,"drawerPosition"],[200,24,445,39],[200,27,445,39,"_this$props"],[200,38,445,39],[200,39,445,25,"drawerPosition"],[200,53,445,39],[201,10,445,41,"drawerType"],[201,20,445,51],[201,23,445,51,"_this$props"],[201,34,445,51],[201,35,445,41,"drawerType"],[201,45,445,51],[202,8,446,4],[202,12,446,12,"containerWidth"],[202,26,446,26],[202,29,446,31,"_this"],[202,34,446,31],[202,35,446,36,"state"],[202,40,446,41],[202,41,446,12,"containerWidth"],[202,55,446,26],[203,8,447,4],[203,12,447,24,"dragX"],[203,17,447,29],[203,20,447,56,"nativeEvent"],[203,31,447,67],[203,32,447,10,"translationX"],[203,44,447,22],[204,10,447,31,"velocityX"],[204,19,447,40],[204,22,447,56,"nativeEvent"],[204,33,447,67],[204,34,447,31,"velocityX"],[204,43,447,40],[205,10,447,45,"touchX"],[205,16,447,51],[205,19,447,56,"nativeEvent"],[205,30,447,67],[205,31,447,42,"x"],[205,32,447,43],[206,8,449,4],[206,12,449,8,"drawerPosition"],[206,26,449,22],[206,31,449,27],[206,37,449,33],[206,39,449,35],[207,10,450,6],[208,10,451,6],[209,10,452,6,"dragX"],[209,15,452,11],[209,18,452,14],[209,19,452,15,"dragX"],[209,24,452,20],[210,10,453,6,"touchX"],[210,16,453,12],[210,19,453,15,"containerWidth"],[210,33,453,29],[210,36,453,32,"touchX"],[210,42,453,38],[211,10,454,6,"velocityX"],[211,19,454,15],[211,22,454,18],[211,23,454,19,"velocityX"],[211,32,454,28],[212,8,455,4],[213,8,457,4],[213,12,457,10,"gestureStartX"],[213,25,457,23],[213,28,457,26,"touchX"],[213,34,457,32],[213,37,457,35,"dragX"],[213,42,457,40],[214,8,458,4],[214,12,458,8,"dragOffsetBasedOnStart"],[214,34,458,30],[214,37,458,33],[214,38,458,34],[215,8,460,4],[215,12,460,8,"drawerType"],[215,22,460,18],[215,27,460,23],[215,34,460,30],[215,36,460,32],[216,10,461,6,"dragOffsetBasedOnStart"],[216,32,461,28],[216,35,462,8,"gestureStartX"],[216,48,462,21],[216,51,462,24,"drawerWidth"],[216,62,462,36],[216,65,462,39,"gestureStartX"],[216,78,462,52],[216,81,462,55,"drawerWidth"],[216,92,462,67],[216,95,462,70],[216,96,462,71],[217,8,463,4],[218,8,465,4],[218,12,465,10,"startOffsetX"],[218,24,465,22],[218,27,466,6,"dragX"],[218,32,466,11],[218,35,466,14,"dragOffsetBasedOnStart"],[218,57,466,36],[218,61,466,40,"_this"],[218,66,466,40],[218,67,466,45,"drawerShown"],[218,78,466,56],[218,81,466,59,"drawerWidth"],[218,92,466,70],[218,95,466,74],[218,96,466,75],[218,97,466,76],[219,8,467,4],[219,12,467,10,"projOffsetX"],[219,23,467,21],[219,26,467,24,"startOffsetX"],[219,38,467,36],[219,41,467,39,"DRAG_TOSS"],[219,50,467,48],[219,53,467,51,"velocityX"],[219,62,467,60],[220,8,469,4],[220,12,469,10,"shouldOpen"],[220,22,469,20],[220,25,469,23,"projOffsetX"],[220,36,469,34],[220,39,469,37,"drawerWidth"],[220,50,469,48],[220,53,469,52],[220,54,469,53],[221,8,471,4],[221,12,471,8,"shouldOpen"],[221,22,471,18],[221,24,471,20],[222,10,472,6,"_this"],[222,15,472,6],[222,16,472,11,"animateDrawer"],[222,29,472,24],[222,30,472,25,"startOffsetX"],[222,42,472,37],[222,44,472,39,"drawerWidth"],[222,55,472,50],[222,57,472,53,"velocityX"],[222,66,472,62],[222,67,472,63],[223,8,473,4],[223,9,473,5],[223,15,473,11],[224,10,474,6,"_this"],[224,15,474,6],[224,16,474,11,"animateDrawer"],[224,29,474,24],[224,30,474,25,"startOffsetX"],[224,42,474,37],[224,44,474,39],[224,45,474,40],[224,47,474,42,"velocityX"],[224,56,474,51],[224,57,474,52],[225,8,475,4],[226,6,476,2],[226,7,476,3],[227,6,476,3,"_this"],[227,11,476,3],[227,12,478,10,"updateShowing"],[227,25,478,23],[227,28,478,27,"showing"],[227,35,478,43],[227,39,478,48],[228,8,479,4,"_this"],[228,13,479,4],[228,14,479,9,"drawerShown"],[228,25,479,20],[228,28,479,23,"showing"],[228,35,479,30],[229,8,480,4,"_this"],[229,13,480,4],[229,14,480,9,"accessibilityIsModalView"],[229,38,480,33],[229,39,480,34,"current"],[229,46,480,41],[229,48,480,43,"setNativeProps"],[229,62,480,57],[229,63,480,58],[230,10,481,6,"accessibilityViewIsModal"],[230,34,481,30],[230,36,481,32,"showing"],[231,8,482,4],[231,9,482,5],[231,10,482,6],[232,8,483,4,"_this"],[232,13,483,4],[232,14,483,9,"pointerEventsView"],[232,31,483,26],[232,32,483,27,"current"],[232,39,483,34],[232,41,483,36,"setNativeProps"],[232,55,483,50],[232,56,483,51],[233,10,484,6,"pointerEvents"],[233,23,484,19],[233,25,484,21,"showing"],[233,32,484,28],[233,35,484,31],[233,41,484,37],[233,44,484,40],[234,8,485,4],[234,9,485,5],[234,10,485,6],[235,8,486,4],[235,12,486,4,"_this$props2"],[235,24,486,4],[235,27,486,60,"_this"],[235,32,486,60],[235,33,486,65,"props"],[235,38,486,70],[236,10,486,12,"drawerPosition"],[236,24,486,26],[236,27,486,26,"_this$props2"],[236,39,486,26],[236,40,486,12,"drawerPosition"],[236,54,486,26],[237,10,486,28,"minSwipeDistance"],[237,26,486,44],[237,29,486,44,"_this$props2"],[237,41,486,44],[237,42,486,28,"minSwipeDistance"],[237,58,486,44],[238,10,486,46,"edgeWidth"],[238,19,486,55],[238,22,486,55,"_this$props2"],[238,34,486,55],[238,35,486,46,"edgeWidth"],[238,44,486,55],[239,8,487,4],[239,12,487,10,"fromLeft"],[239,20,487,18],[239,23,487,21,"drawerPosition"],[239,37,487,35],[239,42,487,40],[239,48,487,46],[240,8,488,4],[241,8,489,4],[242,8,490,4],[243,8,491,4],[243,12,491,10,"gestureOrientation"],[243,30,491,28],[243,33,492,6],[243,34,492,7,"fromLeft"],[243,42,492,15],[243,45,492,18],[243,46,492,19],[243,51,492,24],[243,56,492,29,"_this"],[243,61,492,29],[243,62,492,34,"drawerShown"],[243,73,492,45],[243,81,492,53],[243,82,492,54],[243,83,492,55],[244,8,493,4],[245,8,494,4],[246,8,495,4],[247,8,496,4],[247,12,496,10,"hitSlop"],[247,19,496,17],[247,22,496,20,"fromLeft"],[247,30,496,28],[247,33,497,8],[248,10,497,10,"left"],[248,14,497,14],[248,16,497,16],[248,17,497,17],[249,10,497,19,"width"],[249,15,497,24],[249,17,497,26,"showing"],[249,24,497,33],[249,27,497,36,"undefined"],[249,36,497,45],[249,39,497,48,"edgeWidth"],[250,8,497,58],[250,9,497,59],[250,12,498,8],[251,10,498,10,"right"],[251,15,498,15],[251,17,498,17],[251,18,498,18],[252,10,498,20,"width"],[252,15,498,25],[252,17,498,27,"showing"],[252,24,498,34],[252,27,498,37,"undefined"],[252,36,498,46],[252,39,498,49,"edgeWidth"],[253,8,498,59],[253,9,498,60],[254,8,499,4],[255,8,500,4,"_this"],[255,13,500,4],[255,14,500,9,"panGestureHandler"],[255,31,500,26],[255,32,500,27,"current"],[255,39,500,34],[255,41,500,36,"setNativeProps"],[255,55,500,50],[255,56,500,51],[256,10,501,6,"hitSlop"],[256,17,501,13],[257,10,502,6,"activeOffsetX"],[257,23,502,19],[257,25,502,21,"gestureOrientation"],[257,43,502,39],[257,46,502,42,"minSwipeDistance"],[258,8,503,4],[258,9,503,5],[258,10,503,6],[259,6,504,2],[259,7,504,3],[260,6,504,3,"_this"],[260,11,504,3],[260,12,506,10,"animateDrawer"],[260,25,506,23],[260,28,506,26],[260,29,507,4,"fromValue"],[260,38,507,40],[260,40,508,4,"toValue"],[260,47,508,19],[260,49,509,4,"velocity"],[260,57,509,20],[260,59,510,4,"speed"],[260,64,510,18],[260,69,511,7],[261,8,512,4,"_this"],[261,13,512,4],[261,14,512,9,"state"],[261,19,512,14],[261,20,512,15,"dragX"],[261,25,512,20],[261,26,512,21,"setValue"],[261,34,512,29],[261,35,512,30],[261,36,512,31],[261,37,512,32],[262,8,513,4,"_this"],[262,13,513,4],[262,14,513,9,"state"],[262,19,513,14],[262,20,513,15,"touchX"],[262,26,513,21],[262,27,513,22,"setValue"],[262,35,513,30],[262,36,514,6,"_this"],[262,41,514,6],[262,42,514,11,"props"],[262,47,514,16],[262,48,514,17,"drawerPosition"],[262,62,514,31],[262,67,514,36],[262,73,514,42],[262,76,514,45],[262,77,514,46],[262,80,514,49,"_this"],[262,85,514,49],[262,86,514,54,"state"],[262,91,514,59],[262,92,514,60,"containerWidth"],[262,106,515,4],[262,107,515,5],[263,8,517,4],[263,12,517,8,"fromValue"],[263,21,517,17],[263,25,517,21],[263,29,517,25],[263,31,517,27],[264,10,518,6],[264,14,518,10,"nextFramePosition"],[264,31,518,27],[264,34,518,30,"fromValue"],[264,43,518,39],[265,10,519,6],[265,14,519,10,"_this"],[265,19,519,10],[265,20,519,15,"props"],[265,25,519,20],[265,26,519,21,"useNativeAnimations"],[265,45,519,40],[265,47,519,42],[266,12,520,8],[267,12,521,8],[268,12,522,8],[269,12,523,8],[270,12,524,8],[270,16,524,12,"fromValue"],[270,25,524,21],[270,28,524,24,"toValue"],[270,35,524,31],[270,39,524,35,"velocity"],[270,47,524,43],[270,50,524,46],[270,51,524,47],[270,53,524,49],[271,14,525,10,"nextFramePosition"],[271,31,525,27],[271,34,525,30,"Math"],[271,38,525,34],[271,39,525,35,"min"],[271,42,525,38],[271,43,525,39,"fromValue"],[271,52,525,48],[271,55,525,51,"velocity"],[271,63,525,59],[271,66,525,62],[271,70,525,66],[271,72,525,68,"toValue"],[271,79,525,75],[271,80,525,76],[272,12,526,8],[272,13,526,9],[272,19,526,15],[272,23,526,19,"fromValue"],[272,32,526,28],[272,35,526,31,"toValue"],[272,42,526,38],[272,46,526,42,"velocity"],[272,54,526,50],[272,57,526,53],[272,58,526,54],[272,60,526,56],[273,14,527,10,"nextFramePosition"],[273,31,527,27],[273,34,527,30,"Math"],[273,38,527,34],[273,39,527,35,"max"],[273,42,527,38],[273,43,527,39,"fromValue"],[273,52,527,48],[273,55,527,51,"velocity"],[273,63,527,59],[273,66,527,62],[273,70,527,66],[273,72,527,68,"toValue"],[273,79,527,75],[273,80,527,76],[274,12,528,8],[275,10,529,6],[276,10,530,6,"_this"],[276,15,530,6],[276,16,530,11,"state"],[276,21,530,16],[276,22,530,17,"drawerTranslation"],[276,39,530,34],[276,40,530,35,"setValue"],[276,48,530,43],[276,49,530,44,"nextFramePosition"],[276,66,530,61],[276,67,530,62],[277,8,531,4],[278,8,533,4],[278,12,533,10,"willShow"],[278,20,533,18],[278,23,533,21,"toValue"],[278,30,533,28],[278,35,533,33],[278,36,533,34],[279,8,534,4,"_this"],[279,13,534,4],[279,14,534,9,"updateShowing"],[279,27,534,22],[279,28,534,23,"willShow"],[279,36,534,31],[279,37,534,32],[280,8,535,4,"_this"],[280,13,535,4],[280,14,535,9,"emitStateChanged"],[280,30,535,25],[280,31,535,26,"SETTLING"],[280,39,535,34],[280,41,535,36,"willShow"],[280,49,535,44],[280,50,535,45],[281,8,536,4,"_this"],[281,13,536,4],[281,14,536,9,"setState"],[281,22,536,17],[281,23,536,18],[282,10,536,20,"drawerState"],[282,21,536,31],[282,23,536,33,"SETTLING"],[283,8,536,42],[283,9,536,43],[283,10,536,44],[284,8,537,4],[284,12,537,8,"_this"],[284,17,537,8],[284,18,537,13,"props"],[284,23,537,18],[284,24,537,19,"hideStatusBar"],[284,37,537,32],[284,39,537,34],[285,10,538,6,"StatusBar"],[285,32,538,15],[285,33,538,16,"setHidden"],[285,42,538,25],[285,43,538,26,"willShow"],[285,51,538,34],[285,53,538,36,"_this"],[285,58,538,36],[285,59,538,41,"props"],[285,64,538,46],[285,65,538,47,"statusBarAnimation"],[285,83,538,65],[285,87,538,69],[285,94,538,76],[285,95,538,77],[286,8,539,4],[287,8,540,4,"Animated"],[287,29,540,12],[287,30,540,13,"spring"],[287,36,540,19],[287,37,540,20,"_this"],[287,42,540,20],[287,43,540,25,"state"],[287,48,540,30],[287,49,540,31,"drawerTranslation"],[287,66,540,48],[287,68,540,50],[288,10,541,6,"velocity"],[288,18,541,14],[289,10,542,6,"bounciness"],[289,20,542,16],[289,22,542,18],[289,23,542,19],[290,10,543,6,"toValue"],[290,17,543,13],[291,10,544,6,"useNativeDriver"],[291,25,544,21],[291,27,544,23,"_this"],[291,32,544,23],[291,33,544,28,"props"],[291,38,544,33],[291,39,544,34,"useNativeAnimations"],[291,58,544,54],[292,10,545,6,"speed"],[292,15,545,11],[292,17,545,13,"speed"],[292,22,545,18],[292,26,545,22,"undefined"],[293,8,546,4],[293,9,546,5],[293,10,546,6],[293,11,546,7,"start"],[293,16,546,12],[293,17,546,13,"_ref5"],[293,22,546,13],[293,26,546,31],[294,10,546,31],[294,14,546,16,"finished"],[294,22,546,24],[294,25,546,24,"_ref5"],[294,30,546,24],[294,31,546,16,"finished"],[294,39,546,24],[295,10,547,6],[295,14,547,10,"finished"],[295,22,547,18],[295,24,547,20],[296,12,548,8,"_this"],[296,17,548,8],[296,18,548,13,"emitStateChanged"],[296,34,548,29],[296,35,548,30,"IDLE"],[296,39,548,34],[296,41,548,36,"willShow"],[296,49,548,44],[296,50,548,45],[297,12,549,8,"_this"],[297,17,549,8],[297,18,549,13,"setState"],[297,26,549,21],[297,27,549,22],[298,14,549,24,"drawerOpened"],[298,26,549,36],[298,28,549,38,"willShow"],[299,12,549,47],[299,13,549,48],[299,14,549,49],[300,12,550,8],[300,16,550,12,"_this"],[300,21,550,12],[300,22,550,17,"state"],[300,27,550,22],[300,28,550,23,"drawerState"],[300,39,550,34],[300,44,550,39,"DRAGGING"],[300,52,550,47],[300,54,550,49],[301,14,551,10],[302,14,552,10],[303,14,553,10,"_this"],[303,19,553,10],[303,20,553,15,"setState"],[303,28,553,23],[303,29,553,24],[304,16,553,26,"drawerState"],[304,27,553,37],[304,29,553,39,"IDLE"],[305,14,553,44],[305,15,553,45],[305,16,553,46],[306,12,554,8],[307,12,555,8],[307,16,555,12,"willShow"],[307,24,555,20],[307,26,555,22],[308,14,556,10,"_this"],[308,19,556,10],[308,20,556,15,"props"],[308,25,556,20],[308,26,556,21,"onDrawerOpen"],[308,38,556,33],[308,41,556,36],[308,42,556,37],[309,12,557,8],[309,13,557,9],[309,19,557,15],[310,14,558,10,"_this"],[310,19,558,10],[310,20,558,15,"props"],[310,25,558,20],[310,26,558,21,"onDrawerClose"],[310,39,558,34],[310,42,558,37],[310,43,558,38],[311,12,559,8],[312,10,560,6],[313,8,561,4],[313,9,561,5],[313,10,561,6],[314,6,562,2],[314,7,562,3],[315,6,562,3,"_this"],[315,11,562,3],[315,12,564,2,"openDrawer"],[315,22,564,12],[315,25,564,15],[315,37,564,55],[316,8,564,55],[316,12,564,16,"options"],[316,19,564,45],[316,22,564,45,"arguments"],[316,31,564,45],[316,32,564,45,"length"],[316,38,564,45],[316,46,564,45,"arguments"],[316,55,564,45],[316,63,564,45,"undefined"],[316,72,564,45],[316,75,564,45,"arguments"],[316,84,564,45],[316,90,564,48],[316,91,564,49],[316,92,564,50],[317,8,565,4,"_this"],[317,13,565,4],[317,14,565,9,"animateDrawer"],[317,27,565,22],[318,8,566,6],[319,8,567,6,"undefined"],[319,17,567,15],[319,19,568,6,"_this"],[319,24,568,6],[319,25,568,11,"props"],[319,30,568,16],[319,31,568,17,"drawerWidth"],[319,42,568,28],[319,44,569,6,"options"],[319,51,569,13],[319,52,569,14,"velocity"],[319,60,569,22],[319,63,569,25,"options"],[319,70,569,32],[319,71,569,33,"velocity"],[319,79,569,41],[319,82,569,44],[319,83,569,45],[319,85,570,6,"options"],[319,92,570,13],[319,93,570,14,"speed"],[319,98,571,4],[319,99,571,5],[321,8,573,4],[322,8,574,4],[323,8,575,4,"_this"],[323,13,575,4],[323,14,575,9,"forceUpdate"],[323,25,575,20],[323,26,575,21],[323,27,575,22],[324,6,576,2],[324,7,576,3],[325,6,576,3,"_this"],[325,11,576,3],[325,12,578,2,"closeDrawer"],[325,23,578,13],[325,26,578,16],[325,38,578,56],[326,8,578,56],[326,12,578,17,"options"],[326,19,578,46],[326,22,578,46,"arguments"],[326,31,578,46],[326,32,578,46,"length"],[326,38,578,46],[326,46,578,46,"arguments"],[326,55,578,46],[326,63,578,46,"undefined"],[326,72,578,46],[326,75,578,46,"arguments"],[326,84,578,46],[326,90,578,49],[326,91,578,50],[326,92,578,51],[327,8,579,4],[328,8,580,4,"_this"],[328,13,580,4],[328,14,580,9,"animateDrawer"],[328,27,580,22],[328,28,581,6,"undefined"],[328,37,581,15],[328,39,582,6],[328,40,582,7],[328,42,583,6,"options"],[328,49,583,13],[328,50,583,14,"velocity"],[328,58,583,22],[328,61,583,25,"options"],[328,68,583,32],[328,69,583,33,"velocity"],[328,77,583,41],[328,80,583,44],[328,81,583,45],[328,83,584,6,"options"],[328,90,584,13],[328,91,584,14,"speed"],[328,96,585,4],[328,97,585,5],[330,8,587,4],[331,8,588,4],[332,8,589,4,"_this"],[332,13,589,4],[332,14,589,9,"forceUpdate"],[332,25,589,20],[332,26,589,21],[332,27,589,22],[333,6,590,2],[333,7,590,3],[334,6,590,3,"_this"],[334,11,590,3],[334,12,592,10,"renderOverlay"],[334,25,592,23],[334,28,592,26],[334,34,592,32],[335,8,593,4],[336,8,594,4],[336,12,594,4,"invariant"],[336,30,594,13],[336,32,594,14,"_this"],[336,37,594,14],[336,38,594,19,"openValue"],[336,47,594,28],[336,49,594,30],[336,64,594,45],[336,65,594,46],[337,8,595,4],[337,12,595,8,"overlayOpacity"],[337,26,595,22],[338,8,597,4],[338,12,597,8,"_this"],[338,17,597,8],[338,18,597,13,"state"],[338,23,597,18],[338,24,597,19,"drawerState"],[338,35,597,30],[338,40,597,35,"IDLE"],[338,44,597,39],[338,46,597,41],[339,10,598,6,"overlayOpacity"],[339,24,598,20],[339,27,598,23,"_this"],[339,32,598,23],[339,33,598,28,"openValue"],[339,42,598,37],[340,8,599,4],[340,9,599,5],[340,15,599,11],[341,10,600,6,"overlayOpacity"],[341,24,600,20],[341,27,600,23,"_this"],[341,32,600,23],[341,33,600,28,"state"],[341,38,600,33],[341,39,600,34,"drawerOpened"],[341,51,600,46],[341,54,600,49],[341,55,600,50],[341,58,600,53],[341,59,600,54],[342,8,601,4],[343,8,603,4],[343,12,603,10,"dynamicOverlayStyles"],[343,32,603,30],[343,35,603,33],[344,10,604,6,"opacity"],[344,17,604,13],[344,19,604,15,"overlayOpacity"],[344,33,604,29],[345,10,605,6,"backgroundColor"],[345,25,605,21],[345,27,605,23,"_this"],[345,32,605,23],[345,33,605,28,"props"],[345,38,605,33],[345,39,605,34,"overlayColor"],[346,8,606,4],[346,9,606,5],[347,8,608,4],[347,28,609,6],[347,32,609,6,"_jsxRuntime"],[347,43,609,6],[347,44,609,6,"jsx"],[347,47,609,6],[347,49,609,7,"_TapGestureHandler"],[347,67,609,7],[347,68,609,7,"TapGestureHandler"],[347,85,609,24],[348,10,609,25,"onHandlerStateChange"],[348,30,609,45],[348,32,609,47,"_this"],[348,37,609,47],[348,38,609,52,"onTapHandlerStateChange"],[348,61,609,76],[349,10,609,76,"children"],[349,18,609,76],[349,33,610,8],[349,37,610,8,"_jsxRuntime"],[349,48,610,8],[349,49,610,8,"jsx"],[349,52,610,8],[349,54,610,9,"_reactNative"],[349,66,610,9],[349,67,610,9,"Animated"],[349,75,610,17],[349,76,610,18,"View"],[349,80,610,22],[350,12,611,10,"pointerEvents"],[350,25,611,23],[350,27,611,25,"_this"],[350,32,611,25],[350,33,611,30,"drawerShown"],[350,44,611,41],[350,47,611,44],[350,53,611,50],[350,56,611,53],[350,62,611,60],[351,12,612,10,"ref"],[351,15,612,13],[351,17,612,15,"_this"],[351,22,612,15],[351,23,612,20,"pointerEventsView"],[351,40,612,38],[352,12,613,10,"style"],[352,17,613,15],[352,19,613,17],[352,20,613,18,"styles"],[352,26,613,24],[352,27,613,25,"overlay"],[352,34,613,32],[352,36,613,34,"dynamicOverlayStyles"],[352,56,613,54],[353,10,613,56],[353,11,614,9],[354,8,614,10],[354,9,615,25],[354,10,615,26],[355,6,617,2],[355,7,617,3],[356,6,617,3,"_this"],[356,11,617,3],[356,12,619,10,"renderDrawer"],[356,24,619,22],[356,27,619,25],[356,33,619,31],[357,8,620,4],[357,12,620,4,"_this$props3"],[357,24,620,4],[357,27,627,8,"_this"],[357,32,627,8],[357,33,627,13,"props"],[357,38,627,18],[358,10,621,6,"drawerBackgroundColor"],[358,31,621,27],[358,34,621,27,"_this$props3"],[358,46,621,27],[358,47,621,6,"drawerBackgroundColor"],[358,68,621,27],[359,10,622,6,"drawerWidth"],[359,21,622,17],[359,24,622,17,"_this$props3"],[359,36,622,17],[359,37,622,6,"drawerWidth"],[359,48,622,17],[360,10,623,6,"drawerPosition"],[360,24,623,20],[360,27,623,20,"_this$props3"],[360,39,623,20],[360,40,623,6,"drawerPosition"],[360,54,623,20],[361,10,624,6,"drawerType"],[361,20,624,16],[361,23,624,16,"_this$props3"],[361,35,624,16],[361,36,624,6,"drawerType"],[361,46,624,16],[362,10,625,6,"drawerContainerStyle"],[362,30,625,26],[362,33,625,26,"_this$props3"],[362,45,625,26],[362,46,625,6,"drawerContainerStyle"],[362,66,625,26],[363,10,626,6,"contentContainerStyle"],[363,31,626,27],[363,34,626,27,"_this$props3"],[363,46,626,27],[363,47,626,6,"contentContainerStyle"],[363,68,626,27],[364,8,629,4],[364,12,629,10,"fromLeft"],[364,20,629,18],[364,23,629,21,"drawerPosition"],[364,37,629,35],[364,42,629,40],[364,48,629,46],[365,8,630,4],[365,12,630,10,"drawerSlide"],[365,23,630,21],[365,26,630,24,"drawerType"],[365,36,630,34],[365,41,630,39],[365,47,630,45],[366,8,631,4],[366,12,631,10,"containerSlide"],[366,26,631,24],[366,29,631,27,"drawerType"],[366,39,631,37],[366,44,631,42],[366,51,631,49],[368,8,633,4],[369,8,634,4],[370,8,635,4],[371,8,636,4],[372,8,637,4],[372,12,637,10,"reverseContentDirection"],[372,35,637,33],[372,38,637,36,"I18nManager"],[372,62,637,47],[372,63,637,48,"isRTL"],[372,68,637,53],[372,71,637,56,"fromLeft"],[372,79,637,64],[372,82,637,67],[372,83,637,68,"fromLeft"],[372,91,637,76],[373,8,639,4],[373,12,639,10,"dynamicDrawerStyles"],[373,31,639,29],[373,34,639,32],[374,10,640,6,"backgroundColor"],[374,25,640,21],[374,27,640,23,"drawerBackgroundColor"],[374,48,640,44],[375,10,641,6,"width"],[375,15,641,11],[375,17,641,13,"drawerWidth"],[376,8,642,4],[376,9,642,5],[377,8,643,4],[377,12,643,10,"openValue"],[377,21,643,19],[377,24,643,22,"_this"],[377,29,643,22],[377,30,643,27,"openValue"],[377,39,643,36],[378,8,644,4],[378,12,644,4,"invariant"],[378,30,644,13],[378,32,644,14,"openValue"],[378,41,644,23],[378,43,644,25],[378,58,644,40],[378,59,644,41],[379,8,646,4],[379,12,646,8,"containerStyles"],[379,27,646,23],[380,8,647,4],[380,12,647,8,"containerSlide"],[380,26,647,22],[380,28,647,24],[381,10,648,6],[381,14,648,12,"containerTranslateX"],[381,33,648,31],[381,36,648,34,"openValue"],[381,45,648,43],[381,46,648,44,"interpolate"],[381,57,648,55],[381,58,648,56],[382,12,649,8,"inputRange"],[382,22,649,18],[382,24,649,20],[382,25,649,21],[382,26,649,22],[382,28,649,24],[382,29,649,25],[382,30,649,26],[383,12,650,8,"outputRange"],[383,23,650,19],[383,25,650,21,"fromLeft"],[383,33,650,29],[383,36,650,32],[383,37,650,33],[383,38,650,34],[383,40,650,36,"drawerWidth"],[383,51,650,47],[383,52,650,49],[383,55,650,52],[383,56,650,53],[383,57,650,54],[383,59,650,56],[383,60,650,57,"drawerWidth"],[383,71,650,69],[383,72,650,70],[384,12,651,8,"extrapolate"],[384,23,651,19],[384,25,651,21],[385,10,652,6],[385,11,652,7],[385,12,652,8],[386,10,653,6,"containerStyles"],[386,25,653,21],[386,28,653,24],[387,12,654,8,"transform"],[387,21,654,17],[387,23,654,19],[387,24,654,20],[388,14,654,22,"translateX"],[388,24,654,32],[388,26,654,34,"containerTranslateX"],[389,12,654,54],[389,13,654,55],[390,10,655,6],[390,11,655,7],[391,8,656,4],[392,8,658,4],[392,12,658,8,"drawerTranslateX"],[392,28,658,56],[392,31,658,59],[392,32,658,60],[393,8,659,4],[393,12,659,8,"drawerSlide"],[393,23,659,19],[393,25,659,21],[394,10,660,6],[394,14,660,12,"closedDrawerOffset"],[394,32,660,30],[394,35,660,33,"fromLeft"],[394,43,660,41],[394,46,660,44],[394,47,660,45,"drawerWidth"],[394,58,660,57],[394,61,660,60,"drawerWidth"],[394,72,660,72],[395,10,661,6],[395,14,661,10,"_this"],[395,19,661,10],[395,20,661,15,"state"],[395,25,661,20],[395,26,661,21,"drawerState"],[395,37,661,32],[395,42,661,37,"IDLE"],[395,46,661,41],[395,48,661,43],[396,12,662,8,"drawerTranslateX"],[396,28,662,24],[396,31,662,27,"openValue"],[396,40,662,36],[396,41,662,37,"interpolate"],[396,52,662,48],[396,53,662,49],[397,14,663,10,"inputRange"],[397,24,663,20],[397,26,663,22],[397,27,663,23],[397,28,663,24],[397,30,663,26],[397,31,663,27],[397,32,663,28],[398,14,664,10,"outputRange"],[398,25,664,21],[398,27,664,23],[398,28,664,24,"closedDrawerOffset"],[398,46,664,42],[398,48,664,44],[398,49,664,45],[398,50,664,46],[399,14,665,10,"extrapolate"],[399,25,665,21],[399,27,665,23],[400,12,666,8],[400,13,666,9],[400,14,666,10],[401,10,667,6],[401,11,667,7],[401,17,667,13],[402,12,668,8,"drawerTranslateX"],[402,28,668,24],[402,31,668,27,"_this"],[402,36,668,27],[402,37,668,32,"state"],[402,42,668,37],[402,43,668,38,"drawerOpened"],[402,55,668,50],[402,58,668,53],[402,59,668,54],[402,62,668,57,"closedDrawerOffset"],[402,80,668,75],[403,10,669,6],[404,8,670,4],[405,8,671,4],[405,12,671,10,"drawerStyles"],[405,24,674,5],[405,27,674,8],[406,10,675,6,"transform"],[406,19,675,15],[406,21,675,17],[406,22,675,18],[407,12,675,20,"translateX"],[407,22,675,30],[407,24,675,32,"drawerTranslateX"],[408,10,675,49],[408,11,675,50],[408,12,675,51],[409,10,676,6,"flexDirection"],[409,23,676,19],[409,25,676,21,"reverseContentDirection"],[409,48,676,44],[409,51,676,47],[409,64,676,60],[409,67,676,63],[410,8,677,4],[410,9,677,5],[411,8,679,4],[411,28,680,6],[411,32,680,6,"_jsxRuntime"],[411,43,680,6],[411,44,680,6,"jsxs"],[411,48,680,6],[411,50,680,7,"_reactNative"],[411,62,680,7],[411,63,680,7,"Animated"],[411,71,680,15],[411,72,680,16,"View"],[411,76,680,20],[412,10,680,21,"style"],[412,15,680,26],[412,17,680,28,"styles"],[412,23,680,34],[412,24,680,35,"main"],[412,28,680,40],[413,10,680,41,"onLayout"],[413,18,680,49],[413,20,680,51,"_this"],[413,25,680,51],[413,26,680,56,"handleContainerLayout"],[413,47,680,78],[414,10,680,78,"children"],[414,18,680,78],[414,34,681,8],[414,38,681,8,"_jsxRuntime"],[414,49,681,8],[414,50,681,8,"jsxs"],[414,54,681,8],[414,56,681,9,"_reactNative"],[414,68,681,9],[414,69,681,9,"Animated"],[414,77,681,17],[414,78,681,18,"View"],[414,82,681,22],[415,12,682,10,"style"],[415,17,682,15],[415,19,682,17],[415,20,683,12,"drawerType"],[415,30,683,22],[415,35,683,27],[415,42,683,34],[415,45,684,16,"styles"],[415,51,684,22],[415,52,684,23,"containerOnBack"],[415,67,684,38],[415,70,685,16,"styles"],[415,76,685,22],[415,77,685,23,"containerInFront"],[415,93,685,39],[415,95,686,12,"containerStyles"],[415,110,686,27],[415,112,687,12,"contentContainerStyle"],[415,133,687,33],[415,134,688,12],[416,12,689,10,"importantForAccessibility"],[416,37,689,35],[416,39,690,12,"_this"],[416,44,690,12],[416,45,690,17,"drawerShown"],[416,56,690,28],[416,59,690,31],[416,80,690,52],[416,83,690,55],[416,88,691,11],[417,12,691,11,"children"],[417,20,691,11],[417,23,692,11],[417,30,692,18,"_this"],[417,35,692,18],[417,36,692,23,"props"],[417,41,692,28],[417,42,692,29,"children"],[417,50,692,37],[417,55,692,42],[417,65,692,52],[417,68,693,14,"_this"],[417,73,693,14],[417,74,693,19,"props"],[417,79,693,24],[417,80,693,25,"children"],[417,88,693,33],[417,89,693,34,"_this"],[417,94,693,34],[417,95,693,39,"openValue"],[417,104,693,48],[417,105,693,49],[417,108,694,14,"_this"],[417,113,694,14],[417,114,694,19,"props"],[417,119,694,24],[417,120,694,25,"children"],[417,128,694,33],[417,130,695,11,"_this"],[417,135,695,11],[417,136,695,16,"renderOverlay"],[417,149,695,29],[417,150,695,30],[417,151,695,31],[418,10,695,31],[418,11,696,23],[418,12,696,24],[418,27,697,8],[418,31,697,8,"_jsxRuntime"],[418,42,697,8],[418,43,697,8,"jsx"],[418,46,697,8],[418,48,697,9,"_reactNative"],[418,60,697,9],[418,61,697,9,"Animated"],[418,69,697,17],[418,70,697,18,"View"],[418,74,697,22],[419,12,698,10,"pointerEvents"],[419,25,698,23],[419,27,698,24],[419,37,698,34],[420,12,699,10,"ref"],[420,15,699,13],[420,17,699,15,"_this"],[420,22,699,15],[420,23,699,20,"accessibilityIsModalView"],[420,47,699,45],[421,12,700,10,"accessibilityViewIsModal"],[421,36,700,34],[421,38,700,36,"_this"],[421,43,700,36],[421,44,700,41,"drawerShown"],[421,55,700,53],[422,12,701,10,"style"],[422,17,701,15],[422,19,701,17],[422,20,701,18,"styles"],[422,26,701,24],[422,27,701,25,"drawerContainer"],[422,42,701,40],[422,44,701,42,"drawerStyles"],[422,56,701,54],[422,58,701,56,"drawerContainerStyle"],[422,78,701,76],[422,79,701,78],[423,12,701,78,"children"],[423,20,701,78],[423,35,702,10],[423,39,702,10,"_jsxRuntime"],[423,50,702,10],[423,51,702,10,"jsx"],[423,54,702,10],[423,56,702,11,"_reactNative"],[423,68,702,11],[423,69,702,11,"View"],[423,73,702,15],[424,14,702,16,"style"],[424,19,702,21],[424,21,702,23,"dynamicDrawerStyles"],[424,40,702,43],[425,14,702,43,"children"],[425,22,702,43],[425,24,703,13,"_this"],[425,29,703,13],[425,30,703,18,"props"],[425,35,703,23],[425,36,703,24,"renderNavigationView"],[425,56,703,44],[425,57,703,45,"_this"],[425,62,703,45],[425,63,703,50,"openValue"],[425,72,703,77],[426,12,703,78],[426,13,704,16],[427,10,704,17],[427,11,705,23],[427,12,705,24],[428,8,705,24],[428,9,706,21],[428,10,706,22],[429,6,708,2],[429,7,708,3],[430,6,708,3,"_this"],[430,11,708,3],[430,12,710,10,"setPanGestureRef"],[430,28,710,26],[430,31,710,30,"ref"],[430,34,710,52],[430,38,710,57],[431,8,711,4],[432,8,712,4],[433,8,714,6,"_this"],[433,13,714,6],[433,14,714,11,"panGestureHandler"],[433,31,714,28],[433,32,715,6,"current"],[433,39,715,13],[433,42,715,16,"ref"],[433,45,715,19],[434,8,716,4,"_this"],[434,13,716,4],[434,14,716,9,"props"],[434,19,716,14],[434,20,716,15,"onGestureRef"],[434,32,716,27],[434,35,716,30,"ref"],[434,38,716,33],[434,39,716,34],[435,6,717,2],[435,7,717,3],[436,6,250,4],[436,10,250,10,"dragX"],[436,16,250,15],[436,19,250,18],[436,23,250,22,"Animated"],[436,44,250,30],[436,45,250,31,"Value"],[436,50,250,36],[436,51,250,37],[436,52,250,38],[436,53,250,39],[437,6,251,4],[437,10,251,10,"touchX"],[437,17,251,16],[437,20,251,19],[437,24,251,23,"Animated"],[437,45,251,31],[437,46,251,32,"Value"],[437,51,251,37],[437,52,251,38],[437,53,251,39],[437,54,251,40],[438,6,252,4],[438,10,252,10,"drawerTranslation"],[438,28,252,27],[438,31,252,30],[438,35,252,34,"Animated"],[438,56,252,42],[438,57,252,43,"Value"],[438,62,252,48],[438,63,252,49],[438,64,252,50],[438,65,252,51],[439,6,254,4,"_this"],[439,11,254,4],[439,12,254,9,"state"],[439,17,254,14],[439,20,254,17],[440,8,255,6,"dragX"],[440,13,255,11],[440,15,255,6,"dragX"],[440,21,255,11],[441,8,256,6,"touchX"],[441,14,256,12],[441,16,256,6,"touchX"],[441,23,256,12],[442,8,257,6,"drawerTranslation"],[442,25,257,23],[442,27,257,6,"drawerTranslation"],[442,45,257,23],[443,8,258,6,"containerWidth"],[443,22,258,20],[443,24,258,22],[443,25,258,23],[444,8,259,6,"drawerState"],[444,19,259,17],[444,21,259,19,"IDLE"],[444,25,259,23],[445,8,260,6,"drawerOpened"],[445,20,260,18],[445,22,260,20],[446,6,261,4],[446,7,261,5],[447,6,263,4,"_this"],[447,11,263,4],[447,12,263,9,"updateAnimatedEvent"],[447,31,263,28],[447,32,263,29,"props"],[447,38,263,34],[447,40,263,36,"_this"],[447,45,263,36],[447,46,263,41,"state"],[447,51,263,46],[447,52,263,47],[448,6,263,48],[448,13,263,48,"_this"],[448,18,263,48],[449,4,264,2],[450,4,264,3],[450,8,264,3,"_inherits2"],[450,18,264,3],[450,19,264,3,"default"],[450,26,264,3],[450,28,264,3,"DrawerLayout"],[450,40,264,3],[450,42,264,3,"_Component"],[450,52,264,3],[451,4,264,3],[451,15,264,3,"_createClass2"],[451,28,264,3],[451,29,264,3,"default"],[451,36,264,3],[451,38,264,3,"DrawerLayout"],[451,50,264,3],[452,6,264,3,"key"],[452,9,264,3],[453,6,264,3,"value"],[453,11,264,3],[453,13,266,2],[453,22,266,2,"shouldComponentUpdate"],[453,43,266,23,"shouldComponentUpdate"],[453,44,266,24,"props"],[453,49,266,48],[453,51,266,50,"state"],[453,56,266,74],[453,58,266,76],[454,8,267,4],[454,12,268,6],[454,16,268,10],[454,17,268,11,"props"],[454,22,268,16],[454,23,268,17,"drawerPosition"],[454,37,268,31],[454,42,268,36,"props"],[454,47,268,41],[454,48,268,42,"drawerPosition"],[454,62,268,56],[454,66,269,6],[454,70,269,10],[454,71,269,11,"props"],[454,76,269,16],[454,77,269,17,"drawerWidth"],[454,88,269,28],[454,93,269,33,"props"],[454,98,269,38],[454,99,269,39,"drawerWidth"],[454,110,269,50],[454,114,270,6],[454,118,270,10],[454,119,270,11,"props"],[454,124,270,16],[454,125,270,17,"drawerType"],[454,135,270,27],[454,140,270,32,"props"],[454,145,270,37],[454,146,270,38,"drawerType"],[454,156,270,48],[454,160,271,6],[454,164,271,10],[454,165,271,11,"state"],[454,170,271,16],[454,171,271,17,"containerWidth"],[454,185,271,31],[454,190,271,36,"state"],[454,195,271,41],[454,196,271,42,"containerWidth"],[454,210,271,56],[454,212,272,6],[455,10,273,6],[455,14,273,10],[455,15,273,11,"updateAnimatedEvent"],[455,34,273,30],[455,35,273,31,"props"],[455,40,273,36],[455,42,273,38,"state"],[455,47,273,43],[455,48,273,44],[456,8,274,4],[457,8,276,4],[457,15,276,11],[457,19,276,15],[458,6,277,2],[459,4,277,3],[460,6,277,3,"key"],[460,9,277,3],[461,6,277,3,"value"],[461,11,277,3],[461,13,719,2],[461,22,719,2,"render"],[461,28,719,8,"render"],[461,29,719,8],[461,31,719,11],[462,8,720,4],[462,12,720,4,"_this$props4"],[462,24,720,4],[462,27,721,6],[462,31,721,10],[462,32,721,11,"props"],[462,37,721,16],[463,10,720,12,"drawerPosition"],[463,24,720,26],[463,27,720,26,"_this$props4"],[463,39,720,26],[463,40,720,12,"drawerPosition"],[463,54,720,26],[464,10,720,28,"drawerLockMode"],[464,24,720,42],[464,27,720,42,"_this$props4"],[464,39,720,42],[464,40,720,28,"drawerLockMode"],[464,54,720,42],[465,10,720,44,"edgeWidth"],[465,19,720,53],[465,22,720,53,"_this$props4"],[465,34,720,53],[465,35,720,44,"edgeWidth"],[465,44,720,53],[466,10,720,55,"minSwipeDistance"],[466,26,720,71],[466,29,720,71,"_this$props4"],[466,41,720,71],[466,42,720,55,"minSwipeDistance"],[466,58,720,71],[467,8,723,4],[467,12,723,10,"fromLeft"],[467,20,723,18],[467,23,723,21,"drawerPosition"],[467,37,723,35],[467,42,723,40],[467,48,723,46],[469,8,725,4],[470,8,726,4],[471,8,727,4],[472,8,728,4],[472,12,728,10,"gestureOrientation"],[472,30,728,28],[472,33,729,6],[472,34,729,7,"fromLeft"],[472,42,729,15],[472,45,729,18],[472,46,729,19],[472,51,729,24],[472,56,729,29],[472,60,729,33],[472,61,729,34,"drawerShown"],[472,72,729,45],[472,80,729,53],[472,81,729,54],[472,82,729,55],[474,8,731,4],[475,8,732,4],[476,8,733,4],[477,8,734,4],[477,12,734,10,"hitSlop"],[477,19,734,17],[477,22,734,20,"fromLeft"],[477,30,734,28],[477,33,735,8],[478,10,735,10,"left"],[478,14,735,14],[478,16,735,16],[478,17,735,17],[479,10,735,19,"width"],[479,15,735,24],[479,17,735,26],[479,21,735,30],[479,22,735,31,"drawerShown"],[479,33,735,42],[479,36,735,45,"undefined"],[479,45,735,54],[479,48,735,57,"edgeWidth"],[480,8,735,67],[480,9,735,68],[480,12,736,8],[481,10,736,10,"right"],[481,15,736,15],[481,17,736,17],[481,18,736,18],[482,10,736,20,"width"],[482,15,736,25],[482,17,736,27],[482,21,736,31],[482,22,736,32,"drawerShown"],[482,33,736,43],[482,36,736,46,"undefined"],[482,45,736,55],[482,48,736,58,"edgeWidth"],[483,8,736,68],[483,9,736,69],[484,8,738,4],[484,28,739,6],[484,32,739,6,"_jsxRuntime"],[484,43,739,6],[484,44,739,6,"jsx"],[484,47,739,6],[484,49,739,7,"_PanGestureHandler"],[484,67,739,7],[484,68,739,7,"PanGestureHandler"],[485,8,740,8],[486,8,740,8],[487,10,741,8,"userSelect"],[487,20,741,18],[487,22,741,20],[487,26,741,24],[487,27,741,25,"props"],[487,32,741,30],[487,33,741,31,"userSelect"],[487,43,741,42],[488,10,742,8,"activeCursor"],[488,22,742,20],[488,24,742,22],[488,28,742,26],[488,29,742,27,"props"],[488,34,742,32],[488,35,742,33,"activeCursor"],[488,47,742,46],[489,10,743,8,"mouseButton"],[489,21,743,19],[489,23,743,21],[489,27,743,25],[489,28,743,26,"props"],[489,33,743,31],[489,34,743,32,"mouseButton"],[489,45,743,44],[490,10,744,8,"enableContextMenu"],[490,27,744,25],[490,29,744,27],[490,33,744,31],[490,34,744,32,"props"],[490,39,744,37],[490,40,744,38,"enableContextMenu"],[490,57,744,56],[491,10,745,8,"ref"],[491,13,745,11],[491,15,745,13],[491,19,745,17],[491,20,745,18,"setPanGestureRef"],[491,36,745,35],[492,10,746,8,"hitSlop"],[492,17,746,15],[492,19,746,17,"hitSlop"],[492,26,746,25],[493,10,747,8,"activeOffsetX"],[493,23,747,21],[493,25,747,23,"gestureOrientation"],[493,43,747,41],[493,46,747,44,"minSwipeDistance"],[493,62,747,62],[494,10,748,8,"failOffsetY"],[494,21,748,19],[494,23,748,21],[494,29,748,27],[494,31,748,29],[494,32,748,31],[495,10,749,8,"onGestureEvent"],[495,24,749,22],[495,26,749,24],[495,30,749,28],[495,31,749,29,"onGestureEvent"],[495,45,749,44],[496,10,750,8,"onHandlerStateChange"],[496,30,750,28],[496,32,750,30],[496,36,750,34],[496,37,750,35,"openingHandlerStateChange"],[496,62,750,61],[497,10,751,8,"enableTrackpadTwoFingerGesture"],[497,40,751,38],[497,42,752,10],[497,46,752,14],[497,47,752,15,"props"],[497,52,752,20],[497,53,752,21,"enableTrackpadTwoFingerGesture"],[497,83,753,9],[498,10,754,8,"enabled"],[498,17,754,15],[498,19,755,10,"drawerLockMode"],[498,33,755,24],[498,38,755,29],[498,53,755,44],[498,57,755,48,"drawerLockMode"],[498,71,755,62],[498,76,755,67],[498,89,756,9],[499,10,756,9,"children"],[499,18,756,9],[499,20,757,9],[499,24,757,13],[499,25,757,14,"renderDrawer"],[499,37,757,26],[499,38,757,27],[500,8,757,28],[500,9,758,25],[500,10,758,26],[501,6,760,2],[502,4,760,3],[503,2,760,3],[503,4,231,42,"Component"],[503,20,231,51],[504,2,231,21,"DrawerLayout"],[504,14,231,33],[504,15,235,9,"defaultProps"],[504,27,235,21],[504,30,235,24],[505,4,236,4,"drawerWidth"],[505,15,236,15],[505,17,236,17],[505,20,236,20],[506,4,237,4,"drawerPosition"],[506,18,237,18],[506,20,237,20],[506,26,237,26],[507,4,238,4,"useNativeAnimations"],[507,23,238,23],[507,25,238,25],[507,29,238,29],[508,4,239,4,"drawerType"],[508,14,239,14],[508,16,239,16],[508,23,239,23],[509,4,240,4,"edgeWidth"],[509,13,240,13],[509,15,240,15],[509,17,240,17],[510,4,241,4,"minSwipeDistance"],[510,20,241,20],[510,22,241,22],[510,23,241,23],[511,4,242,4,"overlayColor"],[511,16,242,16],[511,18,242,18],[511,38,242,38],[512,4,243,4,"drawerLockMode"],[512,18,243,18],[512,20,243,20],[512,30,243,30],[513,4,244,4,"enableTrackpadTwoFingerGesture"],[513,34,244,34],[513,36,244,36],[514,2,245,2],[514,3,245,3],[515,2,231,21,"DrawerLayout"],[515,14,231,33],[515,15,288,9,"positions"],[515,24,288,18],[515,27,288,21],[516,4,289,4,"Left"],[516,8,289,8],[516,10,289,10],[516,16,289,16],[517,4,290,4,"Right"],[517,9,290,9],[517,11,290,11],[518,2,291,2],[518,3,291,3],[519,2,763,0],[519,6,763,6,"styles"],[519,12,763,12],[519,15,763,15,"StyleSheet"],[519,38,763,25],[519,39,763,26,"create"],[519,45,763,32],[519,46,763,33],[520,4,764,2,"drawerContainer"],[520,19,764,17],[520,21,764,19],[521,6,765,4],[521,9,765,7,"StyleSheet"],[521,32,765,17],[521,33,765,18,"absoluteFillObject"],[521,51,765,36],[522,6,766,4,"zIndex"],[522,12,766,10],[522,14,766,12],[522,18,766,16],[523,6,767,4,"flexDirection"],[523,19,767,17],[523,21,767,19],[524,4,768,2],[524,5,768,3],[525,4,769,2,"containerInFront"],[525,20,769,18],[525,22,769,20],[526,6,770,4],[526,9,770,7,"StyleSheet"],[526,32,770,17],[526,33,770,18,"absoluteFillObject"],[526,51,770,36],[527,6,771,4,"zIndex"],[527,12,771,10],[527,14,771,12],[528,4,772,2],[528,5,772,3],[529,4,773,2,"containerOnBack"],[529,19,773,17],[529,21,773,19],[530,6,774,4],[530,9,774,7,"StyleSheet"],[530,32,774,17],[530,33,774,18,"absoluteFillObject"],[531,4,775,2],[531,5,775,3],[532,4,776,2,"main"],[532,8,776,6],[532,10,776,8],[533,6,777,4,"flex"],[533,10,777,8],[533,12,777,10],[533,13,777,11],[534,6,778,4,"zIndex"],[534,12,778,10],[534,14,778,12],[534,15,778,13],[535,6,779,4,"overflow"],[535,14,779,12],[535,16,779,14],[536,4,780,2],[536,5,780,3],[537,4,781,2,"overlay"],[537,11,781,9],[537,13,781,11],[538,6,782,4],[538,9,782,7,"StyleSheet"],[538,32,782,17],[538,33,782,18,"absoluteFillObject"],[538,51,782,36],[539,6,783,4,"zIndex"],[539,12,783,10],[539,14,783,12],[540,4,784,2],[541,2,785,0],[541,3,785,1],[541,4,785,2],[542,0,785,3],[542,3]],"functionMap":{"names":["<global>","DrawerLayout","constructor","shouldComponentUpdate","updateAnimatedEvent","gestureOptions.listener","handleContainerLayout","emitStateChanged","openingHandlerStateChange","onTapHandlerStateChange","handleRelease","updateShowing","animateDrawer","Animated.spring.start$argument_0","openDrawer","closeDrawer","renderOverlay","renderDrawer","setPanGestureRef","render"],"mappings":"AAA;eCsO;ECgB;GDiB;EEE;GFW;gCGgB;gCC+F;ODK;GHO;kCKE;GLE;6BME;GNK;sCOE;GPe;oCQE;GRU;0BSE;GTkC;0BUE;GV0B;0BWE;aCwC;KDe;GXC;eaE;GbY;gBcE;GdY;0BeE;GfyB;yBgBE;GhByF;6BiBE;GjBO;EkBE;GlByC;CDC"}},"type":"js/module"}]}