{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"./buildUrlForBundle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":173},"end":{"line":7,"column":56,"index":229}}],"key":"1NjLLI7lHLx7L+G4PSbRsIv0MOs=","exportNames":["*"]}},{"name":"./fetchThenEval","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":230},"end":{"line":8,"column":53,"index":283}}],"key":"CkpSmm7Z9XNGaSYMpIQ5HZ169IA=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.loadBundleAsync = loadBundleAsync;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _buildUrlForBundle = require(_dependencyMap[2]);\n  var _fetchThenEval = require(_dependencyMap[3]);\n  /**\n   * Copyright Â© 2022 650 Industries.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  /**\n   * Load a bundle for a URL using fetch + eval on native and script tag injection on web.\n   *\n   * @param bundlePath Given a statement like `import('./Bacon')` `bundlePath` would be `Bacon.bundle?params=from-metro`.\n   */\n  function loadBundleAsync(_x) {\n    return _loadBundleAsync.apply(this, arguments);\n  }\n  function _loadBundleAsync() {\n    _loadBundleAsync = (0, _asyncToGenerator2.default)(function* (bundlePath) {\n      var requestUrl = (0, _buildUrlForBundle.buildUrlForBundle)(bundlePath);\n      {\n        return (0, _fetchThenEval.fetchThenEvalAsync)(requestUrl);\n      }\n    });\n    return _loadBundleAsync.apply(this, arguments);\n  }\n});","lineCount":33,"map":[[8,2,7,0],[8,6,7,0,"_buildUrlForBundle"],[8,24,7,0],[8,27,7,0,"require"],[8,34,7,0],[8,35,7,0,"_dependencyMap"],[8,49,7,0],[9,2,8,0],[9,6,8,0,"_fetchThenEval"],[9,20,8,0],[9,23,8,0,"require"],[9,30,8,0],[9,31,8,0,"_dependencyMap"],[9,45,8,0],[10,2,1,0],[11,0,2,0],[12,0,3,0],[13,0,4,0],[14,0,5,0],[15,0,6,0],[16,2,10,0],[17,0,11,0],[18,0,12,0],[19,0,13,0],[20,0,14,0],[21,2,10,0],[21,11,15,22,"loadBundleAsync"],[21,26,15,37,"loadBundleAsync"],[21,27,15,37,"_x"],[21,29,15,37],[22,4,15,37],[22,11,15,37,"_loadBundleAsync"],[22,27,15,37],[22,28,15,37,"apply"],[22,33,15,37],[22,40,15,37,"arguments"],[22,49,15,37],[23,2,15,37],[24,2,15,37],[24,11,15,37,"_loadBundleAsync"],[24,28,15,37],[25,4,15,37,"_loadBundleAsync"],[25,20,15,37],[25,27,15,37,"_asyncToGenerator2"],[25,45,15,37],[25,46,15,37,"default"],[25,53,15,37],[25,55,15,7],[25,66,15,38,"bundlePath"],[25,76,15,56],[25,78,15,73],[26,6,16,2],[26,10,16,8,"requestUrl"],[26,20,16,18],[26,23,16,21],[26,27,16,21,"buildUrlForBundle"],[26,63,16,38],[26,65,16,39,"bundlePath"],[26,75,16,49],[26,76,16,50],[27,6,18,45],[28,8,19,4],[28,15,19,11],[28,19,19,11,"fetchThenEvalAsync"],[28,52,19,29],[28,54,19,30,"requestUrl"],[28,64,19,40],[28,65,19,41],[29,6,20,2],[30,4,26,0],[30,5,26,1],[31,4,26,1],[31,11,26,1,"_loadBundleAsync"],[31,27,26,1],[31,28,26,1,"apply"],[31,33,26,1],[31,40,26,1,"arguments"],[31,49,26,1],[32,2,26,1],[33,0,26,1],[33,3]],"functionMap":{"names":["<global>","loadBundleAsync","fetchThenEvalAsync.then$argument_0"],"mappings":"AAA;OCc;+CCM;KDG;CDE"}},"type":"js/module"}]}