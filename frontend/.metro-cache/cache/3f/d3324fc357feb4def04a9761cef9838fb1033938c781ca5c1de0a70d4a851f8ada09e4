{"dependencies":[{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":79,"index":79}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"./environment/browser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":81},"end":{"line":8,"column":31,"index":201}}],"key":"4jLi2oL77AuNgQ8OVF8xZurKgiA=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = undefined;\n  var _reactNative = require(_dependencyMap[0]);\n  var _browser = require(_dependencyMap[1]);\n  var nativeSelect = typeof window !== 'undefined' ? _reactNative.Platform.select :\n  // process.env.EXPO_OS is injected by `babel-preset-expo` and available in both client and `react-server` environments.\n  // Opt to use the env var when possible, and fallback to the React Native Platform module when it's not (arbitrary bundlers and transformers).\n  function select(specifics) {\n    if (specifics.hasOwnProperty(\"android\")) {\n      return specifics[\"android\"];\n    } else if (specifics.hasOwnProperty('native')) {\n      return specifics.native;\n    } else if (specifics.hasOwnProperty('default')) {\n      return specifics.default;\n    }\n    // do nothing...\n    return undefined;\n  };\n  var Platform = {\n    /**\n     * Denotes the currently running platform.\n     * Can be one of ios, android, web.\n     */\n    OS: \"android\",\n    /**\n     * Returns the value with the matching platform.\n     * Object keys can be any of ios, android, native, web, default.\n     *\n     * @ios ios, native, default\n     * @android android, native, default\n     * @web web, default\n     */\n    select: nativeSelect,\n    /**\n     * Denotes if the DOM API is available in the current environment.\n     * The DOM is not available in native React runtimes and Node.js.\n     */\n    isDOMAvailable: _browser.isDOMAvailable,\n    /**\n     * Denotes if the current environment can attach event listeners\n     * to the window. This will return false in native React\n     * runtimes and Node.js.\n     */\n    canUseEventListeners: _browser.canUseEventListeners,\n    /**\n     * Denotes if the current environment can inspect properties of the\n     * screen on which the current window is being rendered. This will\n     * return false in native React runtimes and Node.js.\n     */\n    canUseViewport: _browser.canUseViewport,\n    /**\n     * If the JavaScript is being executed in a remote JavaScript environment.\n     * When `true`, synchronous native invocations cannot be executed.\n     */\n    isAsyncDebugging: _browser.isAsyncDebugging\n  };\n  var _default = exports.default = Platform;\n});","lineCount":61,"map":[[6,2,1,0],[6,6,1,0,"_reactNative"],[6,18,1,0],[6,21,1,0,"require"],[6,28,1,0],[6,29,1,0,"_dependencyMap"],[6,43,1,0],[7,2,3,0],[7,6,3,0,"_browser"],[7,14,3,0],[7,17,3,0,"require"],[7,24,3,0],[7,25,3,0,"_dependencyMap"],[7,39,3,0],[8,2,20,0],[8,6,20,6,"nativeSelect"],[8,18,20,18],[8,21,21,2],[8,28,21,9,"window"],[8,34,21,15],[8,39,21,20],[8,50,21,31],[8,53,22,6,"ReactNativePlatform"],[8,74,22,25],[8,75,22,26,"select"],[8,81,22,32],[9,2,23,6],[10,2,24,6],[11,2,25,6],[11,11,25,15,"select"],[11,17,25,21,"select"],[11,18,25,25,"specifics"],[11,27,25,78],[11,29,25,95],[12,4,27,8],[12,8,27,12,"specifics"],[12,17,27,21],[12,18,27,22,"hasOwnProperty"],[12,32,27,36],[12,42,27,56],[12,43,27,57],[12,45,27,59],[13,6,28,10],[13,13,28,17,"specifics"],[13,22,28,26],[13,33,28,71],[14,4,29,8],[14,5,29,9],[14,11,29,15],[14,15,29,52,"specifics"],[14,24,29,61],[14,25,29,62,"hasOwnProperty"],[14,39,29,76],[14,40,29,77],[14,48,29,85],[14,49,29,86],[14,51,29,88],[15,6,30,10],[15,13,30,17,"specifics"],[15,22,30,26],[15,23,30,27,"native"],[15,29,30,33],[16,4,31,8],[16,5,31,9],[16,11,31,15],[16,15,31,19,"specifics"],[16,24,31,28],[16,25,31,29,"hasOwnProperty"],[16,39,31,43],[16,40,31,44],[16,49,31,53],[16,50,31,54],[16,52,31,56],[17,6,32,10],[17,13,32,17,"specifics"],[17,22,32,26],[17,23,32,27,"default"],[17,30,32,34],[18,4,33,8],[19,4,34,8],[20,4,35,8],[20,11,35,15,"undefined"],[20,20,35,24],[21,2,36,6],[21,3,36,7],[22,2,38,0],[22,6,38,6,"Platform"],[22,14,38,14],[22,17,38,17],[23,4,39,2],[24,0,40,0],[25,0,41,0],[26,0,42,0],[27,4,43,2,"OS"],[27,6,43,4],[27,17,43,51],[28,4,44,2],[29,0,45,0],[30,0,46,0],[31,0,47,0],[32,0,48,0],[33,0,49,0],[34,0,50,0],[35,0,51,0],[36,4,52,2,"select"],[36,10,52,8],[36,12,52,10,"nativeSelect"],[36,24,52,40],[37,4,53,2],[38,0,54,0],[39,0,55,0],[40,0,56,0],[41,4,57,2,"isDOMAvailable"],[41,18,57,16],[41,20,57,2,"isDOMAvailable"],[41,43,57,16],[42,4,58,2],[43,0,59,0],[44,0,60,0],[45,0,61,0],[46,0,62,0],[47,4,63,2,"canUseEventListeners"],[47,24,63,22],[47,26,63,2,"canUseEventListeners"],[47,55,63,22],[48,4,64,2],[49,0,65,0],[50,0,66,0],[51,0,67,0],[52,0,68,0],[53,4,69,2,"canUseViewport"],[53,18,69,16],[53,20,69,2,"canUseViewport"],[53,43,69,16],[54,4,70,2],[55,0,71,0],[56,0,72,0],[57,0,73,0],[58,4,74,2,"isAsyncDebugging"],[58,20,74,18],[58,22,74,2,"isAsyncDebugging"],[59,2,75,0],[59,3,75,1],[60,2,75,2],[60,6,75,2,"_default"],[60,14,75,2],[60,17,75,2,"exports"],[60,24,75,2],[60,25,75,2,"default"],[60,32,75,2],[60,35,77,15,"Platform"],[60,43,77,23],[61,0,77,23],[61,3]],"functionMap":{"names":["<global>","select"],"mappings":"AAA;MCwB;ODW"}},"type":"js/module"}]}