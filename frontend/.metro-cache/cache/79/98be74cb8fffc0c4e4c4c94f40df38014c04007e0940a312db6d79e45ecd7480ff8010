{"dependencies":[{"name":"../Easing","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":209},"end":{"line":11,"column":35,"index":244}}],"key":"VCfroBLh70NQAD65/tx9PViUd2s=","exportNames":["*"]}},{"name":"./util","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":245},"end":{"line":16,"column":16,"index":345}}],"key":"1+hZBLc/k6i18AZJ4yHV73uDZHQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.withTiming = undefined;\n  var _Easing = require(_dependencyMap[0]);\n  var _util = require(_dependencyMap[1]);\n  /**\n   * The timing animation configuration.\n   *\n   * @param duration - Length of the animation (in milliseconds). Defaults to 300.\n   * @param easing - An easing function which defines the animation curve.\n   *   Defaults to `Easing.inOut(Easing.quad)`.\n   * @param reduceMotion - Determines how the animation responds to the device's\n   *   reduced motion accessibility setting. Default to `ReduceMotion.System` -\n   *   {@link ReduceMotion}.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/animations/withTiming#config-\n   */\n  // TODO TYPESCRIPT This is temporary type put in here to get rid of our .d.ts file\n  var _worklet_16978090788838_init_data = {\n    code: \"function reactNativeReanimated_timingTs1(toValue,userConfig,callback){const{__DEV__,assertEasingIsWorklet,defineAnimation,Easing,getReduceMotionForAnimation}=this.__closure;if(__DEV__&&userConfig!==null&&userConfig!==void 0&&userConfig.easing){assertEasingIsWorklet(userConfig.easing);}return defineAnimation(toValue,function(){'worklet';const config={duration:300,easing:Easing.inOut(Easing.quad)};if(userConfig){Object.keys(userConfig).forEach(function(key){return config[key]=userConfig[key];});}function timing(animation,now){const{toValue:toValue,startTime:startTime,startValue:startValue}=animation;const runtime=now-startTime;if(runtime>=config.duration){animation.startTime=0;animation.current=toValue;return true;}const progress=animation.easing(runtime/config.duration);animation.current=startValue+(toValue-startValue)*progress;return false;}function onStart(animation,value,now,previousAnimation){if(previousAnimation&&previousAnimation.type==='timing'&&previousAnimation.toValue===toValue&&previousAnimation.startTime){animation.startTime=previousAnimation.startTime;animation.startValue=previousAnimation.startValue;}else{animation.startTime=now;animation.startValue=value;}animation.current=value;if(typeof config.easing==='object'){animation.easing=config.easing.factory();}else{animation.easing=config.easing;}}return{type:'timing',onFrame:timing,onStart:onStart,progress:0,toValue:toValue,startValue:0,startTime:0,easing:function(){return 0;},current:toValue,callback:callback,reduceMotion:getReduceMotionForAnimation(userConfig===null||userConfig===void 0?void 0:userConfig.reduceMotion)};});}\"\n  };\n  var _worklet_10980808786756_init_data = {\n    code: \"function reactNativeReanimated_timingTs2(){const{Easing,userConfig,toValue,callback,getReduceMotionForAnimation}=this.__closure;var _userConfig;const config={duration:300,easing:Easing.inOut(Easing.quad)};if(userConfig){Object.keys(userConfig).forEach(function(key){return config[key]=userConfig[key];});}function timing(animation,now){const{toValue:toValue,startTime:startTime,startValue:startValue}=animation;const runtime=now-startTime;if(runtime>=config.duration){animation.startTime=0;animation.current=toValue;return true;}const progress=animation.easing(runtime/config.duration);animation.current=startValue+(toValue-startValue)*progress;return false;}function onStart(animation,value,now,previousAnimation){if(previousAnimation&&previousAnimation.type==='timing'&&previousAnimation.toValue===toValue&&previousAnimation.startTime){animation.startTime=previousAnimation.startTime;animation.startValue=previousAnimation.startValue;}else{animation.startTime=now;animation.startValue=value;}animation.current=value;if(typeof config.easing==='object'){animation.easing=config.easing.factory();}else{animation.easing=config.easing;}}return{type:'timing',onFrame:timing,onStart:onStart,progress:0,toValue:toValue,startValue:0,startTime:0,easing:function(){return 0;},current:toValue,callback:callback,reduceMotion:getReduceMotionForAnimation((_userConfig=userConfig)===null||_userConfig===void 0?void 0:_userConfig.reduceMotion)};}\"\n  };\n  /**\n   * Lets you create an animation based on duration and easing.\n   *\n   * @param toValue - The value on which the animation will come at rest -\n   *   {@link AnimatableValue}.\n   * @param config - The timing animation configuration - {@link TimingConfig}.\n   * @param callback - A function called on animation complete -\n   *   {@link AnimationCallback}.\n   * @returns An [animation\n   *   object](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animation-object)\n   *   which holds the current state of the animation.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/animations/withTiming\n   */\n  var withTiming = exports.withTiming = function () {\n    var reactNativeReanimated_timingTs1 = function (toValue, userConfig, callback) {\n      return (0, _util.defineAnimation)(toValue, function () {\n        var reactNativeReanimated_timingTs2 = function () {\n          var config = {\n            duration: 300,\n            easing: _Easing.Easing.inOut(_Easing.Easing.quad)\n          };\n          if (userConfig) {\n            Object.keys(userConfig).forEach(key => config[key] = userConfig[key]);\n          }\n          function timing(animation, now) {\n            // eslint-disable-next-line @typescript-eslint/no-shadow\n            var toValue = animation.toValue,\n              startTime = animation.startTime,\n              startValue = animation.startValue;\n            var runtime = now - startTime;\n            if (runtime >= config.duration) {\n              // reset startTime to avoid reusing finished animation config in `start` method\n              animation.startTime = 0;\n              animation.current = toValue;\n              return true;\n            }\n            var progress = animation.easing(runtime / config.duration);\n            animation.current = startValue + (toValue - startValue) * progress;\n            return false;\n          }\n          function onStart(animation, value, now, previousAnimation) {\n            if (previousAnimation && previousAnimation.type === 'timing' && previousAnimation.toValue === toValue && previousAnimation.startTime) {\n              // to maintain continuity of timing animations we check if we are starting\n              // new timing over the old one with the same parameters. If so, we want\n              // to copy animation timeline properties\n              animation.startTime = previousAnimation.startTime;\n              animation.startValue = previousAnimation.startValue;\n            } else {\n              animation.startTime = now;\n              animation.startValue = value;\n            }\n            animation.current = value;\n            if (typeof config.easing === 'object') {\n              animation.easing = config.easing.factory();\n            } else {\n              animation.easing = config.easing;\n            }\n          }\n          return {\n            type: 'timing',\n            onFrame: timing,\n            onStart: onStart,\n            progress: 0,\n            toValue,\n            startValue: 0,\n            startTime: 0,\n            easing: () => 0,\n            current: toValue,\n            callback,\n            reduceMotion: (0, _util.getReduceMotionForAnimation)(userConfig?.reduceMotion)\n          };\n        };\n        reactNativeReanimated_timingTs2.__closure = {\n          Easing: _Easing.Easing,\n          userConfig,\n          toValue,\n          callback,\n          getReduceMotionForAnimation: _util.getReduceMotionForAnimation\n        };\n        reactNativeReanimated_timingTs2.__workletHash = 10980808786756;\n        reactNativeReanimated_timingTs2.__initData = _worklet_10980808786756_init_data;\n        return reactNativeReanimated_timingTs2;\n      }());\n    };\n    reactNativeReanimated_timingTs1.__closure = {\n      __DEV__: false,\n      assertEasingIsWorklet: _util.assertEasingIsWorklet,\n      defineAnimation: _util.defineAnimation,\n      Easing: _Easing.Easing,\n      getReduceMotionForAnimation: _util.getReduceMotionForAnimation\n    };\n    reactNativeReanimated_timingTs1.__workletHash = 16978090788838;\n    reactNativeReanimated_timingTs1.__initData = _worklet_16978090788838_init_data;\n    return reactNativeReanimated_timingTs1;\n  }();\n});","lineCount":123,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"withTiming"],[7,20,1,13],[7,23,1,13,"undefined"],[7,32,1,13],[8,2,11,0],[8,6,11,0,"_Easing"],[8,13,11,0],[8,16,11,0,"require"],[8,23,11,0],[8,24,11,0,"_dependencyMap"],[8,38,11,0],[9,2,12,0],[9,6,12,0,"_util"],[9,11,12,0],[9,14,12,0,"require"],[9,21,12,0],[9,22,12,0,"_dependencyMap"],[9,36,12,0],[10,2,18,0],[11,0,19,0],[12,0,20,0],[13,0,21,0],[14,0,22,0],[15,0,23,0],[16,0,24,0],[17,0,25,0],[18,0,26,0],[19,0,27,0],[20,0,28,0],[21,2,53,0],[22,2,53,0],[22,6,53,0,"_worklet_16978090788838_init_data"],[22,39,53,0],[23,4,53,0,"code"],[23,8,53,0],[24,2,53,0],[25,2,53,0],[25,6,53,0,"_worklet_10980808786756_init_data"],[25,39,53,0],[26,4,53,0,"code"],[26,8,53,0],[27,2,53,0],[28,2,60,0],[29,0,61,0],[30,0,62,0],[31,0,63,0],[32,0,64,0],[33,0,65,0],[34,0,66,0],[35,0,67,0],[36,0,68,0],[37,0,69,0],[38,0,70,0],[39,0,71,0],[40,0,72,0],[41,2,73,7],[41,6,73,13,"withTiming"],[41,16,73,23],[41,19,73,23,"exports"],[41,26,73,23],[41,27,73,23,"withTiming"],[41,37,73,23],[41,40,73,26],[42,4,73,26],[42,8,73,26,"reactNativeReanimated_timingTs1"],[42,39,73,26],[42,51,73,26,"reactNativeReanimated_timingTs1"],[42,52,74,2,"toValue"],[42,59,74,26],[42,61,75,2,"userConfig"],[42,71,75,27],[42,73,76,2,"callback"],[42,81,76,30],[42,83,77,30],[43,6,84,2],[43,13,84,9],[43,17,84,9,"defineAnimation"],[43,38,84,24],[43,40,84,42,"toValue"],[43,47,84,49],[43,49,84,51],[44,8,84,51],[44,12,84,51,"reactNativeReanimated_timingTs2"],[44,43,84,51],[44,55,84,51,"reactNativeReanimated_timingTs2"],[44,56,84,51],[44,58,84,57],[45,10,86,4],[45,14,86,10,"config"],[45,20,86,62],[45,23,86,65],[46,12,87,6,"duration"],[46,20,87,14],[46,22,87,16],[46,25,87,19],[47,12,88,6,"easing"],[47,18,88,12],[47,20,88,14,"Easing"],[47,34,88,20],[47,35,88,21,"inOut"],[47,40,88,26],[47,41,88,27,"Easing"],[47,55,88,33],[47,56,88,34,"quad"],[47,60,88,38],[48,10,89,4],[48,11,89,5],[49,10,90,4],[49,14,90,8,"userConfig"],[49,24,90,18],[49,26,90,20],[50,12,91,6,"Object"],[50,18,91,12],[50,19,91,13,"keys"],[50,23,91,17],[50,24,91,18,"userConfig"],[50,34,91,28],[50,35,91,29],[50,36,91,30,"forEach"],[50,43,91,37],[50,44,92,9,"key"],[50,47,92,12],[50,51,93,12,"config"],[50,57,93,18],[50,58,93,27,"key"],[50,61,93,30],[50,62,93,31],[50,65,93,34,"userConfig"],[50,75,93,44],[50,76,93,45,"key"],[50,79,93,48],[50,80,94,6],[50,81,94,7],[51,10,95,4],[52,10,97,4],[52,19,97,13,"timing"],[52,25,97,19,"timing"],[52,26,97,20,"animation"],[52,35,97,51],[52,37,97,53,"now"],[52,40,97,67],[52,42,97,78],[53,12,98,6],[54,12,99,6],[54,16,99,14,"toValue"],[54,23,99,21],[54,26,99,49,"animation"],[54,35,99,58],[54,36,99,14,"toValue"],[54,43,99,21],[55,14,99,23,"startTime"],[55,23,99,32],[55,26,99,49,"animation"],[55,35,99,58],[55,36,99,23,"startTime"],[55,45,99,32],[56,14,99,34,"startValue"],[56,24,99,44],[56,27,99,49,"animation"],[56,36,99,58],[56,37,99,34,"startValue"],[56,47,99,44],[57,12,100,6],[57,16,100,12,"runtime"],[57,23,100,19],[57,26,100,22,"now"],[57,29,100,25],[57,32,100,28,"startTime"],[57,41,100,37],[58,12,102,6],[58,16,102,10,"runtime"],[58,23,102,17],[58,27,102,21,"config"],[58,33,102,27],[58,34,102,28,"duration"],[58,42,102,36],[58,44,102,38],[59,14,103,8],[60,14,104,8,"animation"],[60,23,104,17],[60,24,104,18,"startTime"],[60,33,104,27],[60,36,104,30],[60,37,104,31],[61,14,105,8,"animation"],[61,23,105,17],[61,24,105,18,"current"],[61,31,105,25],[61,34,105,28,"toValue"],[61,41,105,35],[62,14,106,8],[62,21,106,15],[62,25,106,19],[63,12,107,6],[64,12,108,6],[64,16,108,12,"progress"],[64,24,108,20],[64,27,108,23,"animation"],[64,36,108,32],[64,37,108,33,"easing"],[64,43,108,39],[64,44,108,40,"runtime"],[64,51,108,47],[64,54,108,50,"config"],[64,60,108,56],[64,61,108,57,"duration"],[64,69,108,65],[64,70,108,66],[65,12,109,6,"animation"],[65,21,109,15],[65,22,109,16,"current"],[65,29,109,23],[65,32,110,9,"startValue"],[65,42,110,19],[65,45,110,33],[65,46,110,34,"toValue"],[65,53,110,41],[65,56,110,45,"startValue"],[65,66,110,66],[65,70,110,70,"progress"],[65,78,110,78],[66,12,111,6],[66,19,111,13],[66,24,111,18],[67,10,112,4],[68,10,114,4],[68,19,114,13,"onStart"],[68,26,114,20,"onStart"],[68,27,115,6,"animation"],[68,36,115,32],[68,38,116,6,"value"],[68,43,116,19],[68,45,117,6,"now"],[68,48,117,20],[68,50,118,6,"previousAnimation"],[68,67,118,51],[68,69,119,12],[69,12,120,6],[69,16,121,8,"previousAnimation"],[69,33,121,25],[69,37,122,9,"previousAnimation"],[69,54,122,26],[69,55,122,47,"type"],[69,59,122,51],[69,64,122,56],[69,72,122,64],[69,76,123,9,"previousAnimation"],[69,93,123,26],[69,94,123,47,"toValue"],[69,101,123,54],[69,106,123,59,"toValue"],[69,113,123,66],[69,117,124,9,"previousAnimation"],[69,134,124,26],[69,135,124,47,"startTime"],[69,144,124,56],[69,146,125,8],[70,14,126,8],[71,14,127,8],[72,14,128,8],[73,14,129,8,"animation"],[73,23,129,17],[73,24,129,18,"startTime"],[73,33,129,27],[73,36,129,31,"previousAnimation"],[73,53,129,48],[73,54,129,69,"startTime"],[73,63,129,78],[74,14,130,8,"animation"],[74,23,130,17],[74,24,130,18,"startValue"],[74,34,130,28],[74,37,131,10,"previousAnimation"],[74,54,131,27],[74,55,132,10,"startValue"],[74,65,132,20],[75,12,133,6],[75,13,133,7],[75,19,133,13],[76,14,134,8,"animation"],[76,23,134,17],[76,24,134,18,"startTime"],[76,33,134,27],[76,36,134,30,"now"],[76,39,134,33],[77,14,135,8,"animation"],[77,23,135,17],[77,24,135,18,"startValue"],[77,34,135,28],[77,37,135,31,"value"],[77,42,135,36],[78,12,136,6],[79,12,137,6,"animation"],[79,21,137,15],[79,22,137,16,"current"],[79,29,137,23],[79,32,137,26,"value"],[79,37,137,31],[80,12,138,6],[80,16,138,10],[80,23,138,17,"config"],[80,29,138,23],[80,30,138,24,"easing"],[80,36,138,30],[80,41,138,35],[80,49,138,43],[80,51,138,45],[81,14,139,8,"animation"],[81,23,139,17],[81,24,139,18,"easing"],[81,30,139,24],[81,33,139,27,"config"],[81,39,139,33],[81,40,139,34,"easing"],[81,46,139,40],[81,47,139,41,"factory"],[81,54,139,48],[81,55,139,49],[81,56,139,50],[82,12,140,6],[82,13,140,7],[82,19,140,13],[83,14,141,8,"animation"],[83,23,141,17],[83,24,141,18,"easing"],[83,30,141,24],[83,33,141,27,"config"],[83,39,141,33],[83,40,141,34,"easing"],[83,46,141,40],[84,12,142,6],[85,10,143,4],[86,10,145,4],[86,17,145,11],[87,12,146,6,"type"],[87,16,146,10],[87,18,146,12],[87,26,146,20],[88,12,147,6,"onFrame"],[88,19,147,13],[88,21,147,15,"timing"],[88,27,147,21],[89,12,148,6,"onStart"],[89,19,148,13],[89,21,148,15,"onStart"],[89,28,148,78],[90,12,149,6,"progress"],[90,20,149,14],[90,22,149,16],[90,23,149,17],[91,12,150,6,"toValue"],[91,19,150,13],[92,12,151,6,"startValue"],[92,22,151,16],[92,24,151,18],[92,25,151,19],[93,12,152,6,"startTime"],[93,21,152,15],[93,23,152,17],[93,24,152,18],[94,12,153,6,"easing"],[94,18,153,12],[94,20,153,14,"easing"],[94,21,153,14],[94,26,153,20],[94,27,153,21],[95,12,154,6,"current"],[95,19,154,13],[95,21,154,15,"toValue"],[95,28,154,22],[96,12,155,6,"callback"],[96,20,155,14],[97,12,156,6,"reduceMotion"],[97,24,156,18],[97,26,156,20],[97,30,156,20,"getReduceMotionForAnimation"],[97,63,156,47],[97,65,156,48,"userConfig"],[97,75,156,58],[97,77,156,60,"reduceMotion"],[97,89,156,72],[98,10,157,4],[98,11,157,5],[99,8,158,2],[99,9,158,3],[100,8,158,3,"reactNativeReanimated_timingTs2"],[100,39,158,3],[100,40,158,3,"__closure"],[100,49,158,3],[101,10,158,3,"Easing"],[101,16,158,3],[101,18,88,14,"Easing"],[101,32,88,20],[102,10,88,20,"userConfig"],[102,20,88,20],[103,10,88,20,"toValue"],[103,17,88,20],[104,10,88,20,"callback"],[104,18,88,20],[105,10,88,20,"getReduceMotionForAnimation"],[105,37,88,20],[105,39,156,20,"getReduceMotionForAnimation"],[106,8,156,47],[107,8,156,47,"reactNativeReanimated_timingTs2"],[107,39,156,47],[107,40,156,47,"__workletHash"],[107,53,156,47],[108,8,156,47,"reactNativeReanimated_timingTs2"],[108,39,156,47],[108,40,156,47,"__initData"],[108,50,156,47],[108,53,156,47,"_worklet_10980808786756_init_data"],[108,86,156,47],[109,8,156,47],[109,15,156,47,"reactNativeReanimated_timingTs2"],[109,46,156,47],[110,6,156,47],[110,7,84,51],[110,9,158,3],[110,10,158,4],[111,4,159,0],[111,5,159,1],[112,4,159,1,"reactNativeReanimated_timingTs1"],[112,35,159,1],[112,36,159,1,"__closure"],[112,45,159,1],[113,6,159,1,"__DEV__"],[113,13,159,1],[114,6,159,1,"assertEasingIsWorklet"],[114,27,159,1],[114,29,81,4,"assertEasingIsWorklet"],[114,56,81,25],[115,6,81,25,"defineAnimation"],[115,21,81,25],[115,23,84,9,"defineAnimation"],[115,44,84,24],[116,6,84,24,"Easing"],[116,12,84,24],[116,14,88,14,"Easing"],[116,28,88,20],[117,6,88,20,"getReduceMotionForAnimation"],[117,33,88,20],[117,35,156,20,"getReduceMotionForAnimation"],[118,4,156,47],[119,4,156,47,"reactNativeReanimated_timingTs1"],[119,35,156,47],[119,36,156,47,"__workletHash"],[119,49,156,47],[120,4,156,47,"reactNativeReanimated_timingTs1"],[120,35,156,47],[120,36,156,47,"__initData"],[120,46,156,47],[120,49,156,47,"_worklet_16978090788838_init_data"],[120,82,156,47],[121,4,156,47],[121,11,156,47,"reactNativeReanimated_timingTs1"],[121,42,156,47],[122,2,156,47],[122,3,73,26],[122,5,159,19],[123,0,159,20],[123,3]],"functionMap":{"names":["<global>","<anonymous>","defineAnimation$argument_1","Object.keys.forEach$argument_0","timing","onStart","easing"],"mappings":"AAA;0BCwE;mDCW;QCQ;6EDC;IEI;KFe;IGE;KH6B;cIU,OJ;GDK;CDC"}},"type":"js/module"}]}