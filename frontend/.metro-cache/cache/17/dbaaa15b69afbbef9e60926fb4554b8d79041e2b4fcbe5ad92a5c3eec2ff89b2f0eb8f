{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.valueSetter = undefined;\n  var _worklet_10151266129192_init_data = {\n    code: \"function valueSetter_reactNativeReanimated_valueSetterTs1(mutable,value,forceUpdate=false){const previousAnimation=mutable._animation;if(previousAnimation){previousAnimation.cancelled=true;mutable._animation=null;}if(typeof value==='function'||value!==null&&typeof value==='object'&&value.onFrame!==undefined){const animation=typeof value==='function'?value():value;if(mutable._value===animation.current&&!animation.isHigherOrder&&!forceUpdate){animation.callback&&animation.callback(true);return;}const initializeAnimation=function(timestamp){animation.onStart(animation,mutable.value,timestamp,previousAnimation);};const currentTimestamp=global.__frameTimestamp||global._getAnimationTimestamp();initializeAnimation(currentTimestamp);const step=function(newTimestamp){const timestamp=newTimestamp<(animation.timestamp||0)?animation.timestamp:newTimestamp;if(animation.cancelled){animation.callback&&animation.callback(false);return;}const finished=animation.onFrame(animation,timestamp);animation.finished=true;animation.timestamp=timestamp;mutable._value=animation.current;if(finished){animation.callback&&animation.callback(true);}else{requestAnimationFrame(step);}};mutable._animation=animation;step(currentTimestamp);}else{if(mutable._value===value&&!forceUpdate){return;}mutable._value=value;}}\"\n  };\n  var valueSetter = exports.valueSetter = function () {\n    var valueSetter = function (mutable, value) {\n      var forceUpdate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var previousAnimation = mutable._animation;\n      if (previousAnimation) {\n        previousAnimation.cancelled = true;\n        mutable._animation = null;\n      }\n      if (typeof value === 'function' || value !== null && typeof value === 'object' &&\n      // TODO TYPESCRIPT fix this after fixing AnimationObject type\n      value.onFrame !== undefined) {\n        var animation = typeof value === 'function' ?\n        // TODO TYPESCRIPT fix this after fixing AnimationObject type\n        value() :\n        // TODO TYPESCRIPT fix this after fixing AnimationObject type\n        value;\n        // prevent setting again to the same value\n        // and triggering the mappers that treat this value as an input\n        // this happens when the animation's target value(stored in animation.current until animation.onStart is called) is set to the same value as a current one(this._value)\n        // built in animations that are not higher order(withTiming, withSpring) hold target value in .current\n        if (mutable._value === animation.current && !animation.isHigherOrder && !forceUpdate) {\n          animation.callback && animation.callback(true);\n          return;\n        }\n        // animated set\n        var initializeAnimation = timestamp => {\n          animation.onStart(animation, mutable.value, timestamp, previousAnimation);\n        };\n        var currentTimestamp = global.__frameTimestamp || global._getAnimationTimestamp();\n        initializeAnimation(currentTimestamp);\n        var step = newTimestamp => {\n          // Function `requestAnimationFrame` adds callback to an array, all the callbacks are flushed with function `__flushAnimationFrame`\n          // Usually we flush them inside function `nativeRequestAnimationFrame` and then the given timestamp is the timestamp of end of the current frame.\n          // However function `__flushAnimationFrame` may also be called inside `registerEventHandler` - then we get actual timestamp which is earlier than the end of the frame.\n\n          var timestamp = newTimestamp < (animation.timestamp || 0) ? animation.timestamp : newTimestamp;\n          if (animation.cancelled) {\n            animation.callback && animation.callback(false /* finished */);\n            return;\n          }\n          var finished = animation.onFrame(animation, timestamp);\n          animation.finished = true;\n          animation.timestamp = timestamp;\n          // TODO TYPESCRIPT\n          // For now I'll assume that `animation.current` is always defined\n          // but actually need to dive into animations to understand it\n          mutable._value = animation.current;\n          if (finished) {\n            animation.callback && animation.callback(true /* finished */);\n          } else {\n            requestAnimationFrame(step);\n          }\n        };\n        mutable._animation = animation;\n        step(currentTimestamp);\n      } else {\n        // prevent setting again to the same value\n        // and triggering the mappers that treat this value as an input\n        if (mutable._value === value && !forceUpdate) {\n          return;\n        }\n        mutable._value = value;\n      }\n    };\n    valueSetter.__closure = {};\n    valueSetter.__workletHash = 10151266129192;\n    valueSetter.__initData = _worklet_10151266129192_init_data;\n    return valueSetter;\n  }();\n});","lineCount":80,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"valueSetter"],[7,21,1,13],[7,24,1,13,"undefined"],[7,33,1,13],[8,2,1,13],[8,6,1,13,"_worklet_10151266129192_init_data"],[8,39,1,13],[9,4,1,13,"code"],[9,8,1,13],[10,2,1,13],[11,2,1,13],[11,6,1,13,"valueSetter"],[11,17,1,13],[11,20,1,13,"exports"],[11,27,1,13],[11,28,1,13,"valueSetter"],[11,39,1,13],[11,42,4,7],[12,4,4,7],[12,8,4,7,"valueSetter"],[12,19,4,7],[12,31,4,7,"valueSetter"],[12,32,5,2,"mutable"],[12,39,5,25],[12,41,6,2,"value"],[12,46,6,14],[12,48,8,8],[13,6,8,8],[13,10,7,2,"forceUpdate"],[13,21,7,13],[13,24,7,13,"arguments"],[13,33,7,13],[13,34,7,13,"length"],[13,40,7,13],[13,48,7,13,"arguments"],[13,57,7,13],[13,65,7,13,"undefined"],[13,74,7,13],[13,77,7,13,"arguments"],[13,86,7,13],[13,92,7,16],[13,97,7,21],[14,6,10,2],[14,10,10,8,"previousAnimation"],[14,27,10,25],[14,30,10,28,"mutable"],[14,37,10,35],[14,38,10,36,"_animation"],[14,48,10,46],[15,6,11,2],[15,10,11,6,"previousAnimation"],[15,27,11,23],[15,29,11,25],[16,8,12,4,"previousAnimation"],[16,25,12,21],[16,26,12,22,"cancelled"],[16,35,12,31],[16,38,12,34],[16,42,12,38],[17,8,13,4,"mutable"],[17,15,13,11],[17,16,13,12,"_animation"],[17,26,13,22],[17,29,13,25],[17,33,13,29],[18,6,14,2],[19,6,15,2],[19,10,16,4],[19,17,16,11,"value"],[19,22,16,16],[19,27,16,21],[19,37,16,31],[19,41,17,5,"value"],[19,46,17,10],[19,51,17,15],[19,55,17,19],[19,59,18,6],[19,66,18,13,"value"],[19,71,18,18],[19,76,18,23],[19,84,18,31],[20,6,19,6],[21,6,20,7,"value"],[21,11,20,12],[21,12,20,44,"onFrame"],[21,19,20,51],[21,24,20,56,"undefined"],[21,33,20,66],[21,35,21,4],[22,8,22,4],[22,12,22,10,"animation"],[22,21,22,43],[22,24,23,6],[22,31,23,13,"value"],[22,36,23,18],[22,41,23,23],[22,51,23,33],[23,8,24,10],[24,8,25,11,"value"],[24,13,25,16],[24,14,25,50],[24,15,25,51],[25,8,26,10],[26,8,27,11,"value"],[26,13,27,54],[27,8,28,4],[28,8,29,4],[29,8,30,4],[30,8,31,4],[31,8,32,4],[31,12,33,6,"mutable"],[31,19,33,13],[31,20,33,14,"_value"],[31,26,33,20],[31,31,33,25,"animation"],[31,40,33,34],[31,41,33,35,"current"],[31,48,33,42],[31,52,34,6],[31,53,34,7,"animation"],[31,62,34,16],[31,63,34,17,"isHigherOrder"],[31,76,34,30],[31,80,35,6],[31,81,35,7,"forceUpdate"],[31,92,35,18],[31,94,36,6],[32,10,37,6,"animation"],[32,19,37,15],[32,20,37,16,"callback"],[32,28,37,24],[32,32,37,28,"animation"],[32,41,37,37],[32,42,37,38,"callback"],[32,50,37,46],[32,51,37,47],[32,55,37,51],[32,56,37,52],[33,10,38,6],[34,8,39,4],[35,8,40,4],[36,8,41,4],[36,12,41,10,"initializeAnimation"],[36,31,41,29],[36,34,41,33,"timestamp"],[36,43,41,50],[36,47,41,55],[37,10,42,6,"animation"],[37,19,42,15],[37,20,42,16,"onStart"],[37,27,42,23],[37,28,42,24,"animation"],[37,37,42,33],[37,39,42,35,"mutable"],[37,46,42,42],[37,47,42,43,"value"],[37,52,42,48],[37,54,42,50,"timestamp"],[37,63,42,59],[37,65,42,61,"previousAnimation"],[37,82,42,78],[37,83,42,79],[38,8,43,4],[38,9,43,5],[39,8,44,4],[39,12,44,10,"currentTimestamp"],[39,28,44,26],[39,31,45,6,"global"],[39,37,45,12],[39,38,45,13,"__frameTimestamp"],[39,54,45,29],[39,58,45,33,"global"],[39,64,45,39],[39,65,45,40,"_getAnimationTimestamp"],[39,87,45,62],[39,88,45,63],[39,89,45,64],[40,8,46,4,"initializeAnimation"],[40,27,46,23],[40,28,46,24,"currentTimestamp"],[40,44,46,40],[40,45,46,41],[41,8,48,4],[41,12,48,10,"step"],[41,16,48,14],[41,19,48,18,"newTimestamp"],[41,31,48,38],[41,35,48,43],[42,10,49,6],[43,10,50,6],[44,10,51,6],[46,10,53,6],[46,14,53,12,"timestamp"],[46,23,53,21],[46,26,54,8,"newTimestamp"],[46,38,54,20],[46,42,54,24,"animation"],[46,51,54,33],[46,52,54,34,"timestamp"],[46,61,54,43],[46,65,54,47],[46,66,54,48],[46,67,54,49],[46,70,55,12,"animation"],[46,79,55,21],[46,80,55,22,"timestamp"],[46,89,55,31],[46,92,56,12,"newTimestamp"],[46,104,56,24],[47,10,58,6],[47,14,58,10,"animation"],[47,23,58,19],[47,24,58,20,"cancelled"],[47,33,58,29],[47,35,58,31],[48,12,59,8,"animation"],[48,21,59,17],[48,22,59,18,"callback"],[48,30,59,26],[48,34,59,30,"animation"],[48,43,59,39],[48,44,59,40,"callback"],[48,52,59,48],[48,53,59,49],[48,58,59,54],[48,59,59,55],[48,73,59,69],[48,74,59,70],[49,12,60,8],[50,10,61,6],[51,10,62,6],[51,14,62,12,"finished"],[51,22,62,20],[51,25,62,23,"animation"],[51,34,62,32],[51,35,62,33,"onFrame"],[51,42,62,40],[51,43,62,41,"animation"],[51,52,62,50],[51,54,62,52,"timestamp"],[51,63,62,61],[51,64,62,62],[52,10,63,6,"animation"],[52,19,63,15],[52,20,63,16,"finished"],[52,28,63,24],[52,31,63,27],[52,35,63,31],[53,10,64,6,"animation"],[53,19,64,15],[53,20,64,16,"timestamp"],[53,29,64,25],[53,32,64,28,"timestamp"],[53,41,64,37],[54,10,65,6],[55,10,66,6],[56,10,67,6],[57,10,68,6,"mutable"],[57,17,68,13],[57,18,68,14,"_value"],[57,24,68,20],[57,27,68,23,"animation"],[57,36,68,32],[57,37,68,33,"current"],[57,44,68,41],[58,10,69,6],[58,14,69,10,"finished"],[58,22,69,18],[58,24,69,20],[59,12,70,8,"animation"],[59,21,70,17],[59,22,70,18,"callback"],[59,30,70,26],[59,34,70,30,"animation"],[59,43,70,39],[59,44,70,40,"callback"],[59,52,70,48],[59,53,70,49],[59,57,70,53],[59,58,70,54],[59,72,70,68],[59,73,70,69],[60,10,71,6],[60,11,71,7],[60,17,71,13],[61,12,72,8,"requestAnimationFrame"],[61,33,72,29],[61,34,72,30,"step"],[61,38,72,34],[61,39,72,35],[62,10,73,6],[63,8,74,4],[63,9,74,5],[64,8,76,4,"mutable"],[64,15,76,11],[64,16,76,12,"_animation"],[64,26,76,22],[64,29,76,25,"animation"],[64,38,76,34],[65,8,78,4,"step"],[65,12,78,8],[65,13,78,9,"currentTimestamp"],[65,29,78,25],[65,30,78,26],[66,6,79,2],[66,7,79,3],[66,13,79,9],[67,8,80,4],[68,8,81,4],[69,8,82,4],[69,12,82,8,"mutable"],[69,19,82,15],[69,20,82,16,"_value"],[69,26,82,22],[69,31,82,27,"value"],[69,36,82,32],[69,40,82,36],[69,41,82,37,"forceUpdate"],[69,52,82,48],[69,54,82,50],[70,10,83,6],[71,8,84,4],[72,8,85,4,"mutable"],[72,15,85,11],[72,16,85,12,"_value"],[72,22,85,18],[72,25,85,21,"value"],[72,30,85,26],[73,6,86,2],[74,4,87,0],[74,5,87,1],[75,4,87,1,"valueSetter"],[75,15,87,1],[75,16,87,1,"__closure"],[75,25,87,1],[76,4,87,1,"valueSetter"],[76,15,87,1],[76,16,87,1,"__workletHash"],[76,29,87,1],[77,4,87,1,"valueSetter"],[77,15,87,1],[77,16,87,1,"__initData"],[77,26,87,1],[77,29,87,1,"_worklet_10151266129192_init_data"],[77,62,87,1],[78,4,87,1],[78,11,87,1,"valueSetter"],[78,22,87,1],[79,2,87,1],[79,3,4,7],[80,0,4,7],[80,3]],"functionMap":{"names":["<global>","valueSetter","initializeAnimation","step"],"mappings":"AAA;OCG;gCCqC;KDE;iBEK;KF0B;CDa"}},"type":"js/module"}]}