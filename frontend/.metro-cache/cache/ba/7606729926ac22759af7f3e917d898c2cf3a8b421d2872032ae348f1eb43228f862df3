{"dependencies":[{"name":"../logger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":229},"end":{"line":10,"column":35,"index":264}}],"key":"6mnFiA+8QMwCo5SHGzE3xLi0NTk=","exportNames":["*"]}},{"name":"../PlatformChecker","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":265},"end":{"line":16,"column":28,"index":362}}],"key":"qXble9ybAlViAQKWCIOx+hfaZjE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.measure = undefined;\n  var _logger = require(_dependencyMap[0]);\n  var _PlatformChecker = require(_dependencyMap[1]);\n  /**\n   * Lets you synchronously get the dimensions and position of a view on the\n   * screen.\n   *\n   * @param animatedRef - An [animated\n   *   ref](https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedRef#returns)\n   *   connected to the component you'd want to get the measurements from.\n   * @returns An object containing component measurements or null when the\n   *   measurement couldn't be performed- {@link MeasuredDimensions}.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/measure/\n   */\n  var measure;\n  var _worklet_6681128993819_init_data = {\n    code: \"function measureFabric_reactNativeReanimated_measureTs1(animatedRef){const{logger}=this.__closure;if(!_WORKLET){return null;}const viewTag=animatedRef();if(viewTag===-1){logger.warn(\\\"The view with tag \\\"+viewTag+\\\" is not a valid argument for measure(). This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).\\\");return null;}const measured=global._measureFabric(viewTag);if(measured===null){logger.warn(\\\"The view has some undefined, not-yet-computed or meaningless value of `LayoutMetrics` type. This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).\\\");return null;}else if(measured.x===-1234567){logger.warn(\\\"The view returned an invalid measurement response. Please make sure the view is currently rendered.\\\");return null;}else if(isNaN(measured.x)){logger.warn(\\\"The view gets view-flattened on Android. To disable view-flattening, set `collapsable={false}` on this component.\\\");return null;}else{return measured;}}\"\n  };\n  var measureFabric = function () {\n    var measureFabric = function (animatedRef) {\n      if (!_WORKLET) {\n        return null;\n      }\n      var viewTag = animatedRef();\n      if (viewTag === -1) {\n        _logger.logger.warn(`The view with tag ${viewTag} is not a valid argument for measure(). This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).`);\n        return null;\n      }\n      var measured = global._measureFabric(viewTag);\n      if (measured === null) {\n        _logger.logger.warn(`The view has some undefined, not-yet-computed or meaningless value of \\`LayoutMetrics\\` type. This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).`);\n        return null;\n      } else if (measured.x === -1234567) {\n        _logger.logger.warn(`The view returned an invalid measurement response. Please make sure the view is currently rendered.`);\n        return null;\n      } else if (isNaN(measured.x)) {\n        _logger.logger.warn(`The view gets view-flattened on Android. To disable view-flattening, set \\`collapsable={false}\\` on this component.`);\n        return null;\n      } else {\n        return measured;\n      }\n    };\n    measureFabric.__closure = {\n      logger: _logger.logger\n    };\n    measureFabric.__workletHash = 6681128993819;\n    measureFabric.__initData = _worklet_6681128993819_init_data;\n    return measureFabric;\n  }();\n  var _worklet_10202719539575_init_data = {\n    code: \"function measurePaper_reactNativeReanimated_measureTs2(animatedRef){const{logger}=this.__closure;if(!_WORKLET){return null;}const viewTag=animatedRef();if(viewTag===-1){logger.warn(\\\"The view with tag \\\"+viewTag+\\\" is not a valid argument for measure(). This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).\\\");return null;}const measured=global._measurePaper(viewTag);if(measured===null){logger.warn(\\\"The view with tag \\\"+viewTag+\\\" has some undefined, not-yet-computed or meaningless value of `LayoutMetrics` type. This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).\\\");return null;}else if(measured.x===-1234567){logger.warn(\\\"The view with tag \\\"+viewTag+\\\" returned an invalid measurement response. Please make sure the view is currently rendered.\\\");return null;}else if(isNaN(measured.x)){logger.warn(\\\"The view with tag \\\"+viewTag+\\\" gets view-flattened on Android. To disable view-flattening, set `collapsable={false}` on this component.\\\");return null;}else{return measured;}}\"\n  };\n  var measurePaper = function () {\n    var measurePaper = function (animatedRef) {\n      if (!_WORKLET) {\n        return null;\n      }\n      var viewTag = animatedRef();\n      if (viewTag === -1) {\n        _logger.logger.warn(`The view with tag ${viewTag} is not a valid argument for measure(). This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).`);\n        return null;\n      }\n      var measured = global._measurePaper(viewTag);\n      if (measured === null) {\n        _logger.logger.warn(`The view with tag ${viewTag} has some undefined, not-yet-computed or meaningless value of \\`LayoutMetrics\\` type. This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).`);\n        return null;\n      } else if (measured.x === -1234567) {\n        _logger.logger.warn(`The view with tag ${viewTag} returned an invalid measurement response. Please make sure the view is currently rendered.`);\n        return null;\n      } else if (isNaN(measured.x)) {\n        _logger.logger.warn(`The view with tag ${viewTag} gets view-flattened on Android. To disable view-flattening, set \\`collapsable={false}\\` on this component.`);\n        return null;\n      } else {\n        return measured;\n      }\n    };\n    measurePaper.__closure = {\n      logger: _logger.logger\n    };\n    measurePaper.__workletHash = 10202719539575;\n    measurePaper.__initData = _worklet_10202719539575_init_data;\n    return measurePaper;\n  }();\n  function measureJest() {\n    _logger.logger.warn('measure() cannot be used with Jest.');\n    return null;\n  }\n  function measureChromeDebugger() {\n    _logger.logger.warn('measure() cannot be used with Chrome Debugger.');\n    return null;\n  }\n  function measureDefault() {\n    _logger.logger.warn('measure() is not supported on this configuration.');\n    return null;\n  }\n  if (!(0, _PlatformChecker.shouldBeUseWeb)()) {\n    // Those assertions are actually correct since on Native platforms `AnimatedRef` is\n    // mapped as a different function in `shareableMappingCache` and\n    // TypeScript is not able to infer that.\n    if ((0, _PlatformChecker.isFabric)()) {\n      exports.measure = measure = measureFabric;\n    } else {\n      exports.measure = measure = measurePaper;\n    }\n  } else if ((0, _PlatformChecker.isJest)()) {\n    exports.measure = measure = measureJest;\n  } else if ((0, _PlatformChecker.isChromeDebugger)()) {\n    exports.measure = measure = measureChromeDebugger;\n  } else {\n    exports.measure = measure = measureDefault;\n  }\n});","lineCount":118,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"measure"],[7,17,1,13],[7,20,1,13,"undefined"],[7,29,1,13],[8,2,10,0],[8,6,10,0,"_logger"],[8,13,10,0],[8,16,10,0,"require"],[8,23,10,0],[8,24,10,0,"_dependencyMap"],[8,38,10,0],[9,2,11,0],[9,6,11,0,"_PlatformChecker"],[9,22,11,0],[9,25,11,0,"require"],[9,32,11,0],[9,33,11,0,"_dependencyMap"],[9,47,11,0],[10,2,22,0],[11,0,23,0],[12,0,24,0],[13,0,25,0],[14,0,26,0],[15,0,27,0],[16,0,28,0],[17,0,29,0],[18,0,30,0],[19,0,31,0],[20,0,32,0],[21,2,33,7],[21,6,33,11,"measure"],[21,13,33,27],[22,2,33,28],[22,6,33,28,"_worklet_6681128993819_init_data"],[22,38,33,28],[23,4,33,28,"code"],[23,8,33,28],[24,2,33,28],[25,2,33,28],[25,6,33,28,"measureFabric"],[25,19,33,28],[25,22,35,0],[26,4,35,0],[26,8,35,0,"measureFabric"],[26,21,35,0],[26,33,35,0,"measureFabric"],[26,34,35,23,"animatedRef"],[26,45,35,69],[26,47,35,71],[27,6,37,2],[27,10,37,6],[27,11,37,7,"_WORKLET"],[27,19,37,15],[27,21,37,17],[28,8,38,4],[28,15,38,11],[28,19,38,15],[29,6,39,2],[30,6,41,2],[30,10,41,8,"viewTag"],[30,17,41,15],[30,20,41,18,"animatedRef"],[30,31,41,29],[30,32,41,30],[30,33,41,31],[31,6,42,2],[31,10,42,6,"viewTag"],[31,17,42,13],[31,24,42,20],[31,26,42,22],[32,8,43,4,"logger"],[32,22,43,10],[32,23,43,11,"warn"],[32,27,43,15],[32,28,44,6],[32,49,44,27,"viewTag"],[32,56,44,34],[32,212,45,4],[32,213,45,5],[33,8,46,4],[33,15,46,11],[33,19,46,15],[34,6,47,2],[35,6,49,2],[35,10,49,8,"measured"],[35,18,49,16],[35,21,49,19,"global"],[35,27,49,25],[35,28,49,26,"_measureFabric"],[35,42,49,40],[35,43,49,42,"viewTag"],[35,50,49,70],[35,51,49,71],[36,6,50,2],[36,10,50,6,"measured"],[36,18,50,14],[36,23,50,19],[36,27,50,23],[36,29,50,25],[37,8,51,4,"logger"],[37,22,51,10],[37,23,51,11,"warn"],[37,27,51,15],[37,28,52,6],[37,238,53,4],[37,239,53,5],[38,8,54,4],[38,15,54,11],[38,19,54,15],[39,6,55,2],[39,7,55,3],[39,13,55,9],[39,17,55,13,"measured"],[39,25,55,21],[39,26,55,22,"x"],[39,27,55,23],[39,40,55,36],[39,42,55,38],[40,8,56,4,"logger"],[40,22,56,10],[40,23,56,11,"warn"],[40,27,56,15],[40,28,57,6],[40,129,58,4],[40,130,58,5],[41,8,59,4],[41,15,59,11],[41,19,59,15],[42,6,60,2],[42,7,60,3],[42,13,60,9],[42,17,60,13,"isNaN"],[42,22,60,18],[42,23,60,19,"measured"],[42,31,60,27],[42,32,60,28,"x"],[42,33,60,29],[42,34,60,30],[42,36,60,32],[43,8,61,4,"logger"],[43,22,61,10],[43,23,61,11,"warn"],[43,27,61,15],[43,28,62,6],[43,145,63,4],[43,146,63,5],[44,8,64,4],[44,15,64,11],[44,19,64,15],[45,6,65,2],[45,7,65,3],[45,13,65,9],[46,8,66,4],[46,15,66,11,"measured"],[46,23,66,19],[47,6,67,2],[48,4,68,0],[48,5,68,1],[49,4,68,1,"measureFabric"],[49,17,68,1],[49,18,68,1,"__closure"],[49,27,68,1],[50,6,68,1,"logger"],[50,12,68,1],[50,14,43,4,"logger"],[51,4,43,10],[52,4,43,10,"measureFabric"],[52,17,43,10],[52,18,43,10,"__workletHash"],[52,31,43,10],[53,4,43,10,"measureFabric"],[53,17,43,10],[53,18,43,10,"__initData"],[53,28,43,10],[53,31,43,10,"_worklet_6681128993819_init_data"],[53,63,43,10],[54,4,43,10],[54,11,43,10,"measureFabric"],[54,24,43,10],[55,2,43,10],[55,3,35,0],[56,2,35,0],[56,6,35,0,"_worklet_10202719539575_init_data"],[56,39,35,0],[57,4,35,0,"code"],[57,8,35,0],[58,2,35,0],[59,2,35,0],[59,6,35,0,"measurePaper"],[59,18,35,0],[59,21,70,0],[60,4,70,0],[60,8,70,0,"measurePaper"],[60,20,70,0],[60,32,70,0,"measurePaper"],[60,33,70,22,"animatedRef"],[60,44,70,68],[60,46,70,70],[61,6,72,2],[61,10,72,6],[61,11,72,7,"_WORKLET"],[61,19,72,15],[61,21,72,17],[62,8,73,4],[62,15,73,11],[62,19,73,15],[63,6,74,2],[64,6,76,2],[64,10,76,8,"viewTag"],[64,17,76,15],[64,20,76,18,"animatedRef"],[64,31,76,29],[64,32,76,30],[64,33,76,31],[65,6,77,2],[65,10,77,6,"viewTag"],[65,17,77,13],[65,24,77,20],[65,26,77,22],[66,8,78,4,"logger"],[66,22,78,10],[66,23,78,11,"warn"],[66,27,78,15],[66,28,79,6],[66,49,79,27,"viewTag"],[66,56,79,34],[66,212,80,4],[66,213,80,5],[67,8,81,4],[67,15,81,11],[67,19,81,15],[68,6,82,2],[69,6,84,2],[69,10,84,8,"measured"],[69,18,84,16],[69,21,84,19,"global"],[69,27,84,25],[69,28,84,26,"_measurePaper"],[69,41,84,39],[69,42,84,41,"viewTag"],[69,49,84,58],[69,50,84,59],[70,6,85,2],[70,10,85,6,"measured"],[70,18,85,14],[70,23,85,19],[70,27,85,23],[70,29,85,25],[71,8,86,4,"logger"],[71,22,86,10],[71,23,86,11,"warn"],[71,27,86,15],[71,28,87,6],[71,49,88,8,"viewTag"],[71,56,88,15],[71,258,90,4],[71,259,90,5],[72,8,91,4],[72,15,91,11],[72,19,91,15],[73,6,92,2],[73,7,92,3],[73,13,92,9],[73,17,92,13,"measured"],[73,25,92,21],[73,26,92,22,"x"],[73,27,92,23],[73,40,92,36],[73,42,92,38],[74,8,93,4,"logger"],[74,22,93,10],[74,23,93,11,"warn"],[74,27,93,15],[74,28,94,6],[74,49,95,8,"viewTag"],[74,56,95,15],[74,149,97,4],[74,150,97,5],[75,8,98,4],[75,15,98,11],[75,19,98,15],[76,6,99,2],[76,7,99,3],[76,13,99,9],[76,17,99,13,"isNaN"],[76,22,99,18],[76,23,99,19,"measured"],[76,31,99,27],[76,32,99,28,"x"],[76,33,99,29],[76,34,99,30],[76,36,99,32],[77,8,100,4,"logger"],[77,22,100,10],[77,23,100,11,"warn"],[77,27,100,15],[77,28,101,6],[77,49,102,8,"viewTag"],[77,56,102,15],[77,165,104,4],[77,166,104,5],[78,8,105,4],[78,15,105,11],[78,19,105,15],[79,6,106,2],[79,7,106,3],[79,13,106,9],[80,8,107,4],[80,15,107,11,"measured"],[80,23,107,19],[81,6,108,2],[82,4,109,0],[82,5,109,1],[83,4,109,1,"measurePaper"],[83,16,109,1],[83,17,109,1,"__closure"],[83,26,109,1],[84,6,109,1,"logger"],[84,12,109,1],[84,14,78,4,"logger"],[85,4,78,10],[86,4,78,10,"measurePaper"],[86,16,78,10],[86,17,78,10,"__workletHash"],[86,30,78,10],[87,4,78,10,"measurePaper"],[87,16,78,10],[87,17,78,10,"__initData"],[87,27,78,10],[87,30,78,10,"_worklet_10202719539575_init_data"],[87,63,78,10],[88,4,78,10],[88,11,78,10,"measurePaper"],[88,23,78,10],[89,2,78,10],[89,3,70,0],[90,2,111,0],[90,11,111,9,"measureJest"],[90,22,111,20,"measureJest"],[90,23,111,20],[90,25,111,23],[91,4,112,2,"logger"],[91,18,112,8],[91,19,112,9,"warn"],[91,23,112,13],[91,24,112,14],[91,61,112,51],[91,62,112,52],[92,4,113,2],[92,11,113,9],[92,15,113,13],[93,2,114,0],[94,2,116,0],[94,11,116,9,"measureChromeDebugger"],[94,32,116,30,"measureChromeDebugger"],[94,33,116,30],[94,35,116,33],[95,4,117,2,"logger"],[95,18,117,8],[95,19,117,9,"warn"],[95,23,117,13],[95,24,117,14],[95,72,117,62],[95,73,117,63],[96,4,118,2],[96,11,118,9],[96,15,118,13],[97,2,119,0],[98,2,121,0],[98,11,121,9,"measureDefault"],[98,25,121,23,"measureDefault"],[98,26,121,23],[98,28,121,26],[99,4,122,2,"logger"],[99,18,122,8],[99,19,122,9,"warn"],[99,23,122,13],[99,24,122,14],[99,75,122,65],[99,76,122,66],[100,4,123,2],[100,11,123,9],[100,15,123,13],[101,2,124,0],[102,2,126,0],[102,6,126,4],[102,7,126,5],[102,11,126,5,"shouldBeUseWeb"],[102,42,126,19],[102,44,126,20],[102,45,126,21],[102,47,126,23],[103,4,127,2],[104,4,128,2],[105,4,129,2],[106,4,130,2],[106,8,130,6],[106,12,130,6,"isFabric"],[106,37,130,14],[106,39,130,15],[106,40,130,16],[106,42,130,18],[107,6,131,4,"exports"],[107,13,131,4],[107,14,131,4,"measure"],[107,21,131,4],[107,24,131,4,"measure"],[107,31,131,11],[107,34,131,14,"measureFabric"],[107,47,131,49],[108,4,132,2],[108,5,132,3],[108,11,132,9],[109,6,133,4,"exports"],[109,13,133,4],[109,14,133,4,"measure"],[109,21,133,4],[109,24,133,4,"measure"],[109,31,133,11],[109,34,133,14,"measurePaper"],[109,46,133,48],[110,4,134,2],[111,2,135,0],[111,3,135,1],[111,9,135,7],[111,13,135,11],[111,17,135,11,"isJest"],[111,40,135,17],[111,42,135,18],[111,43,135,19],[111,45,135,21],[112,4,136,2,"exports"],[112,11,136,2],[112,12,136,2,"measure"],[112,19,136,2],[112,22,136,2,"measure"],[112,29,136,9],[112,32,136,12,"measureJest"],[112,43,136,23],[113,2,137,0],[113,3,137,1],[113,9,137,7],[113,13,137,11],[113,17,137,11,"isChromeDebugger"],[113,50,137,27],[113,52,137,28],[113,53,137,29],[113,55,137,31],[114,4,138,2,"exports"],[114,11,138,2],[114,12,138,2,"measure"],[114,19,138,2],[114,22,138,2,"measure"],[114,29,138,9],[114,32,138,12,"measureChromeDebugger"],[114,53,138,33],[115,2,139,0],[115,3,139,1],[115,9,139,7],[116,4,140,2,"exports"],[116,11,140,2],[116,12,140,2,"measure"],[116,19,140,2],[116,22,140,2,"measure"],[116,29,140,9],[116,32,140,12,"measureDefault"],[116,46,140,26],[117,2,141,0],[118,0,141,1],[118,3]],"functionMap":{"names":["<global>","measureFabric","measurePaper","measureJest","measureChromeDebugger","measureDefault"],"mappings":"AAA;ACkC;CDiC;AEE;CFuC;AGE;CHG;AIE;CJG;AKE;CLG"}},"type":"js/module"}]}