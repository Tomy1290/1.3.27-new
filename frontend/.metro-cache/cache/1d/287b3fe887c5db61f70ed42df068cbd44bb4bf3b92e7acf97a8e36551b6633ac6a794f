{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.parseHHMM = parseHHMM;\n  exports.toHHMM = toHHMM;\n  function parseHHMM(input) {\n    if (!input || typeof input !== 'string') return null;\n    const trimmed = input.trim();\n    // Accept formats like \"H:MM\", \"HH:MM\", \"HMM\", \"HHMM\"\n    const onlyDigits = trimmed.replace(/[^0-9]/g, '');\n    let hour = 0,\n      minute = 0;\n    if (onlyDigits.length === 4) {\n      hour = parseInt(onlyDigits.slice(0, 2), 10);\n      minute = parseInt(onlyDigits.slice(2), 10);\n    } else if (onlyDigits.length === 3) {\n      hour = parseInt(onlyDigits.slice(0, 1), 10);\n      minute = parseInt(onlyDigits.slice(1), 10);\n    } else if (/^\\d{1,2}:\\d{2}$/.test(trimmed)) {\n      const [h, m] = trimmed.split(':');\n      hour = parseInt(h, 10);\n      minute = parseInt(m, 10);\n    } else {\n      return null;\n    }\n    if (isNaN(hour) || isNaN(minute) || hour < 0 || hour > 23 || minute < 0 || minute > 59) return null;\n    return {\n      hour,\n      minute\n    };\n  }\n  function toHHMM(value) {\n    if (value == null) return null;\n    if (typeof value === 'string') {\n      const hm = parseHHMM(value);\n      if (!hm) return null;\n      return `${hm.hour.toString().padStart(2, '0')}:${hm.minute.toString().padStart(2, '0')}`;\n    }\n    if (typeof value === 'number') {\n      // assume milliseconds or minutes; if < 24*60 consider minutes\n      if (value < 24 * 60) {\n        const hour = Math.floor(value / 60);\n        const minute = value % 60;\n        return `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n      }\n      const d = new Date(value);\n      if (isNaN(d.getTime())) return null;\n      return `${d.getHours().toString().padStart(2, '0')}:${d.getMinutes().toString().padStart(2, '0')}`;\n    }\n    if (value instanceof Date) {\n      return `${value.getHours().toString().padStart(2, '0')}:${value.getMinutes().toString().padStart(2, '0')}`;\n    }\n    return null;\n  }\n});","lineCount":56,"map":[[7,2,3,7],[7,11,3,16,"parseHHMM"],[7,20,3,25,"parseHHMM"],[7,21,3,26,"input"],[7,26,3,58],[7,28,3,71],[8,4,4,2],[8,8,4,6],[8,9,4,7,"input"],[8,14,4,12],[8,18,4,16],[8,25,4,23,"input"],[8,30,4,28],[8,35,4,33],[8,43,4,41],[8,45,4,43],[8,52,4,50],[8,56,4,54],[9,4,5,2],[9,10,5,8,"trimmed"],[9,17,5,15],[9,20,5,18,"input"],[9,25,5,23],[9,26,5,24,"trim"],[9,30,5,28],[9,31,5,29],[9,32,5,30],[10,4,6,2],[11,4,7,2],[11,10,7,8,"onlyDigits"],[11,20,7,18],[11,23,7,21,"trimmed"],[11,30,7,28],[11,31,7,29,"replace"],[11,38,7,36],[11,39,7,37],[11,48,7,46],[11,50,7,48],[11,52,7,50],[11,53,7,51],[12,4,8,2],[12,8,8,6,"hour"],[12,12,8,10],[12,15,8,13],[12,16,8,14],[13,6,8,16,"minute"],[13,12,8,22],[13,15,8,25],[13,16,8,26],[14,4,9,2],[14,8,9,6,"onlyDigits"],[14,18,9,16],[14,19,9,17,"length"],[14,25,9,23],[14,30,9,28],[14,31,9,29],[14,33,9,31],[15,6,10,4,"hour"],[15,10,10,8],[15,13,10,11,"parseInt"],[15,21,10,19],[15,22,10,20,"onlyDigits"],[15,32,10,30],[15,33,10,31,"slice"],[15,38,10,36],[15,39,10,37],[15,40,10,38],[15,42,10,40],[15,43,10,41],[15,44,10,42],[15,46,10,44],[15,48,10,46],[15,49,10,47],[16,6,11,4,"minute"],[16,12,11,10],[16,15,11,13,"parseInt"],[16,23,11,21],[16,24,11,22,"onlyDigits"],[16,34,11,32],[16,35,11,33,"slice"],[16,40,11,38],[16,41,11,39],[16,42,11,40],[16,43,11,41],[16,45,11,43],[16,47,11,45],[16,48,11,46],[17,4,12,2],[17,5,12,3],[17,11,12,9],[17,15,12,13,"onlyDigits"],[17,25,12,23],[17,26,12,24,"length"],[17,32,12,30],[17,37,12,35],[17,38,12,36],[17,40,12,38],[18,6,13,4,"hour"],[18,10,13,8],[18,13,13,11,"parseInt"],[18,21,13,19],[18,22,13,20,"onlyDigits"],[18,32,13,30],[18,33,13,31,"slice"],[18,38,13,36],[18,39,13,37],[18,40,13,38],[18,42,13,40],[18,43,13,41],[18,44,13,42],[18,46,13,44],[18,48,13,46],[18,49,13,47],[19,6,14,4,"minute"],[19,12,14,10],[19,15,14,13,"parseInt"],[19,23,14,21],[19,24,14,22,"onlyDigits"],[19,34,14,32],[19,35,14,33,"slice"],[19,40,14,38],[19,41,14,39],[19,42,14,40],[19,43,14,41],[19,45,14,43],[19,47,14,45],[19,48,14,46],[20,4,15,2],[20,5,15,3],[20,11,15,9],[20,15,15,13],[20,32,15,30],[20,33,15,31,"test"],[20,37,15,35],[20,38,15,36,"trimmed"],[20,45,15,43],[20,46,15,44],[20,48,15,46],[21,6,16,4],[21,12,16,10],[21,13,16,11,"h"],[21,14,16,12],[21,16,16,14,"m"],[21,17,16,15],[21,18,16,16],[21,21,16,19,"trimmed"],[21,28,16,26],[21,29,16,27,"split"],[21,34,16,32],[21,35,16,33],[21,38,16,36],[21,39,16,37],[22,6,17,4,"hour"],[22,10,17,8],[22,13,17,11,"parseInt"],[22,21,17,19],[22,22,17,20,"h"],[22,23,17,21],[22,25,17,23],[22,27,17,25],[22,28,17,26],[23,6,18,4,"minute"],[23,12,18,10],[23,15,18,13,"parseInt"],[23,23,18,21],[23,24,18,22,"m"],[23,25,18,23],[23,27,18,25],[23,29,18,27],[23,30,18,28],[24,4,19,2],[24,5,19,3],[24,11,19,9],[25,6,20,4],[25,13,20,11],[25,17,20,15],[26,4,21,2],[27,4,22,2],[27,8,22,6,"isNaN"],[27,13,22,11],[27,14,22,12,"hour"],[27,18,22,16],[27,19,22,17],[27,23,22,21,"isNaN"],[27,28,22,26],[27,29,22,27,"minute"],[27,35,22,33],[27,36,22,34],[27,40,22,38,"hour"],[27,44,22,42],[27,47,22,45],[27,48,22,46],[27,52,22,50,"hour"],[27,56,22,54],[27,59,22,57],[27,61,22,59],[27,65,22,63,"minute"],[27,71,22,69],[27,74,22,72],[27,75,22,73],[27,79,22,77,"minute"],[27,85,22,83],[27,88,22,86],[27,90,22,88],[27,92,22,90],[27,99,22,97],[27,103,22,101],[28,4,23,2],[28,11,23,9],[29,6,23,11,"hour"],[29,10,23,15],[30,6,23,17,"minute"],[31,4,23,24],[31,5,23,25],[32,2,24,0],[33,2,26,7],[33,11,26,16,"toHHMM"],[33,17,26,22,"toHHMM"],[33,18,26,23,"value"],[33,23,26,71],[33,25,26,88],[34,4,27,2],[34,8,27,6,"value"],[34,13,27,11],[34,17,27,15],[34,21,27,19],[34,23,27,21],[34,30,27,28],[34,34,27,32],[35,4,28,2],[35,8,28,6],[35,15,28,13,"value"],[35,20,28,18],[35,25,28,23],[35,33,28,31],[35,35,28,33],[36,6,29,4],[36,12,29,10,"hm"],[36,14,29,12],[36,17,29,15,"parseHHMM"],[36,26,29,24],[36,27,29,25,"value"],[36,32,29,30],[36,33,29,31],[37,6,30,4],[37,10,30,8],[37,11,30,9,"hm"],[37,13,30,11],[37,15,30,13],[37,22,30,20],[37,26,30,24],[38,6,31,4],[38,13,31,11],[38,16,31,14,"hm"],[38,18,31,16],[38,19,31,17,"hour"],[38,23,31,21],[38,24,31,22,"toString"],[38,32,31,30],[38,33,31,31],[38,34,31,32],[38,35,31,33,"padStart"],[38,43,31,41],[38,44,31,42],[38,45,31,43],[38,47,31,45],[38,50,31,48],[38,51,31,49],[38,55,31,53,"hm"],[38,57,31,55],[38,58,31,56,"minute"],[38,64,31,62],[38,65,31,63,"toString"],[38,73,31,71],[38,74,31,72],[38,75,31,73],[38,76,31,74,"padStart"],[38,84,31,82],[38,85,31,83],[38,86,31,84],[38,88,31,86],[38,91,31,89],[38,92,31,90],[38,94,31,92],[39,4,32,2],[40,4,33,2],[40,8,33,6],[40,15,33,13,"value"],[40,20,33,18],[40,25,33,23],[40,33,33,31],[40,35,33,33],[41,6,34,4],[42,6,35,4],[42,10,35,8,"value"],[42,15,35,13],[42,18,35,16],[42,20,35,18],[42,23,35,21],[42,25,35,23],[42,27,35,25],[43,8,36,6],[43,14,36,12,"hour"],[43,18,36,16],[43,21,36,19,"Math"],[43,25,36,23],[43,26,36,24,"floor"],[43,31,36,29],[43,32,36,30,"value"],[43,37,36,35],[43,40,36,38],[43,42,36,40],[43,43,36,41],[44,8,37,6],[44,14,37,12,"minute"],[44,20,37,18],[44,23,37,21,"value"],[44,28,37,26],[44,31,37,29],[44,33,37,31],[45,8,38,6],[45,15,38,13],[45,18,38,16,"hour"],[45,22,38,20],[45,23,38,21,"toString"],[45,31,38,29],[45,32,38,30],[45,33,38,31],[45,34,38,32,"padStart"],[45,42,38,40],[45,43,38,41],[45,44,38,42],[45,46,38,44],[45,49,38,47],[45,50,38,48],[45,54,38,52,"minute"],[45,60,38,58],[45,61,38,59,"toString"],[45,69,38,67],[45,70,38,68],[45,71,38,69],[45,72,38,70,"padStart"],[45,80,38,78],[45,81,38,79],[45,82,38,80],[45,84,38,82],[45,87,38,85],[45,88,38,86],[45,90,38,88],[46,6,39,4],[47,6,40,4],[47,12,40,10,"d"],[47,13,40,11],[47,16,40,14],[47,20,40,18,"Date"],[47,24,40,22],[47,25,40,23,"value"],[47,30,40,28],[47,31,40,29],[48,6,41,4],[48,10,41,8,"isNaN"],[48,15,41,13],[48,16,41,14,"d"],[48,17,41,15],[48,18,41,16,"getTime"],[48,25,41,23],[48,26,41,24],[48,27,41,25],[48,28,41,26],[48,30,41,28],[48,37,41,35],[48,41,41,39],[49,6,42,4],[49,13,42,11],[49,16,42,14,"d"],[49,17,42,15],[49,18,42,16,"getHours"],[49,26,42,24],[49,27,42,25],[49,28,42,26],[49,29,42,27,"toString"],[49,37,42,35],[49,38,42,36],[49,39,42,37],[49,40,42,38,"padStart"],[49,48,42,46],[49,49,42,47],[49,50,42,48],[49,52,42,50],[49,55,42,53],[49,56,42,54],[49,60,42,58,"d"],[49,61,42,59],[49,62,42,60,"getMinutes"],[49,72,42,70],[49,73,42,71],[49,74,42,72],[49,75,42,73,"toString"],[49,83,42,81],[49,84,42,82],[49,85,42,83],[49,86,42,84,"padStart"],[49,94,42,92],[49,95,42,93],[49,96,42,94],[49,98,42,96],[49,101,42,99],[49,102,42,100],[49,104,42,102],[50,4,43,2],[51,4,44,2],[51,8,44,6,"value"],[51,13,44,11],[51,25,44,23,"Date"],[51,29,44,27],[51,31,44,29],[52,6,45,4],[52,13,45,11],[52,16,45,14,"value"],[52,21,45,19],[52,22,45,20,"getHours"],[52,30,45,28],[52,31,45,29],[52,32,45,30],[52,33,45,31,"toString"],[52,41,45,39],[52,42,45,40],[52,43,45,41],[52,44,45,42,"padStart"],[52,52,45,50],[52,53,45,51],[52,54,45,52],[52,56,45,54],[52,59,45,57],[52,60,45,58],[52,64,45,62,"value"],[52,69,45,67],[52,70,45,68,"getMinutes"],[52,80,45,78],[52,81,45,79],[52,82,45,80],[52,83,45,81,"toString"],[52,91,45,89],[52,92,45,90],[52,93,45,91],[52,94,45,92,"padStart"],[52,102,45,100],[52,103,45,101],[52,104,45,102],[52,106,45,104],[52,109,45,107],[52,110,45,108],[52,112,45,110],[53,4,46,2],[54,4,47,2],[54,11,47,9],[54,15,47,13],[55,2,48,0],[56,0,48,1],[56,3]],"functionMap":{"names":["<global>","parseHHMM","toHHMM"],"mappings":"AAA;OCE;CDqB;OEE"}},"type":"js/module"}]}