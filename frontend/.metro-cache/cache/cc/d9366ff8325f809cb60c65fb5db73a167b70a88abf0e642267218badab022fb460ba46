{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":26,"index":26}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":27},"end":{"line":8,"column":22,"index":165}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"3suYSPX9nHbHZ1xNTsKXtKj0atE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.StatusBar = StatusBar;\n  exports.setStatusBarBackgroundColor = setStatusBarBackgroundColor;\n  exports.setStatusBarHidden = setStatusBarHidden;\n  exports.setStatusBarNetworkActivityIndicatorVisible = setStatusBarNetworkActivityIndicatorVisible;\n  exports.setStatusBarStyle = setStatusBarStyle;\n  exports.setStatusBarTranslucent = setStatusBarTranslucent;\n  var _objectWithoutProperties2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _react = _interopRequireDefault(require(_dependencyMap[2]));\n  var _reactNative = require(_dependencyMap[3]);\n  var _jsxRuntime = require(_dependencyMap[4]);\n  var _excluded = [\"style\", \"hideTransitionAnimation\", \"translucent\", \"backgroundColor\"];\n  /**\n   * A component that allows you to configure your status bar without directly calling imperative\n   * methods like `setBarStyle`.\n   *\n   * You will likely have multiple `StatusBar` components mounted in the same app at the same time.\n   * For example, if you have multiple screens in your app, you may end up using one per screen.\n   * The props of each `StatusBar` component will be merged in the order that they were mounted.\n   * This component is built on top of the [StatusBar](https://reactnative.dev/docs/statusbar)\n   * component exported from React Native, and it provides defaults that work better for Expo users.\n   */\n  function StatusBar(_ref) {\n    var style = _ref.style,\n      hideTransitionAnimation = _ref.hideTransitionAnimation,\n      _ref$translucent = _ref.translucent,\n      translucent = _ref$translucent === undefined ? true : _ref$translucent,\n      backgroundColorProp = _ref.backgroundColor,\n      props = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n    // Pick appropriate default value depending on current theme, so if we are\n    // locked to light mode we don't end up with a light status bar\n    var colorScheme = (0, _reactNative.useColorScheme)();\n    var barStyle = _react.default.useMemo(() => styleToBarStyle(style, colorScheme), [style, colorScheme]);\n\n    // If translucent and no backgroundColor is provided, then use transparent\n    // background\n    var backgroundColor = backgroundColorProp;\n    if (translucent && !backgroundColor) {\n      backgroundColor = 'transparent';\n    }\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.StatusBar, {\n      ...props,\n      translucent: translucent,\n      barStyle: barStyle,\n      backgroundColor: backgroundColor,\n      showHideTransition: hideTransitionAnimation === 'none' ? undefined : hideTransitionAnimation\n    });\n  }\n\n  // @needsAudit\n  /**\n   * Set the bar style of the status bar.\n   * @param style The color of the status bar text.\n   * @param animated If the transition should be animated.\n   */\n  function setStatusBarStyle(style, animated) {\n    _reactNative.StatusBar.setBarStyle(styleToBarStyle(style), animated);\n  }\n\n  // @needsAudit\n  /**\n   * Toggle visibility of the status bar.\n   * @param hidden If the status bar should be hidden.\n   * @param animation Animation to use when toggling hidden, defaults to `'none'`.\n   */\n  function setStatusBarHidden(hidden, animation) {\n    _reactNative.StatusBar.setHidden(hidden, animation);\n  }\n\n  // @needsAudit\n  /**\n   * Set the background color of the status bar.\n   * @param backgroundColor The background color of the status bar.\n   * @param animated `true` to animate the background color change, `false` to change immediately.\n   * @platform android\n   */\n  function setStatusBarBackgroundColor(backgroundColor, animated) {\n    _reactNative.StatusBar.setBackgroundColor(backgroundColor, animated);\n  }\n\n  // @needsAudit\n  /**\n   * Toggle visibility of the network activity indicator.\n   * @param visible If the network activity indicator should be visible.\n   * @platform ios\n   */\n  function setStatusBarNetworkActivityIndicatorVisible(visible) {\n    _reactNative.StatusBar.setNetworkActivityIndicatorVisible(visible);\n  }\n\n  // @needsAudit\n  /**\n   * Set the translucency of the status bar.\n   * @param translucent Whether the app can draw under the status bar. When `true`, content will be\n   * rendered under the status bar. This is always `true` on iOS and cannot be changed.\n   * @platform android\n   */\n  function setStatusBarTranslucent(translucent) {\n    _reactNative.StatusBar.setTranslucent(translucent);\n  }\n  function styleToBarStyle() {\n    var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'auto';\n    var colorScheme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _reactNative.Appearance?.getColorScheme() ?? 'light';\n    if (!colorScheme) {\n      colorScheme = 'light';\n    }\n    var resolvedStyle = style;\n    if (style === 'auto') {\n      resolvedStyle = colorScheme === 'light' ? 'dark' : 'light';\n    } else if (style === 'inverted') {\n      resolvedStyle = colorScheme === 'light' ? 'light' : 'dark';\n    }\n    return resolvedStyle === 'light' ? 'light-content' : 'dark-content';\n  }\n});","lineCount":119,"map":[[13,2,1,0],[13,6,1,0,"_react"],[13,12,1,0],[13,15,1,0,"_interopRequireDefault"],[13,37,1,0],[13,38,1,0,"require"],[13,45,1,0],[13,46,1,0,"_dependencyMap"],[13,60,1,0],[14,2,2,0],[14,6,2,0,"_reactNative"],[14,18,2,0],[14,21,2,0,"require"],[14,28,2,0],[14,29,2,0,"_dependencyMap"],[14,43,2,0],[15,2,8,22],[15,6,8,22,"_jsxRuntime"],[15,17,8,22],[15,20,8,22,"require"],[15,27,8,22],[15,28,8,22,"_dependencyMap"],[15,42,8,22],[16,2,8,22],[16,6,8,22,"_excluded"],[16,15,8,22],[17,2,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,2,22,7],[27,11,22,16,"StatusBar"],[27,20,22,25,"StatusBar"],[27,21,22,25,"_ref"],[27,25,22,25],[27,27,28,19],[28,4,28,19],[28,8,23,2,"style"],[28,13,23,7],[28,16,23,7,"_ref"],[28,20,23,7],[28,21,23,2,"style"],[28,26,23,7],[29,6,24,2,"hideTransitionAnimation"],[29,29,24,25],[29,32,24,25,"_ref"],[29,36,24,25],[29,37,24,2,"hideTransitionAnimation"],[29,60,24,25],[30,6,24,25,"_ref$translucent"],[30,22,24,25],[30,25,24,25,"_ref"],[30,29,24,25],[30,30,25,2,"translucent"],[30,41,25,13],[31,6,25,2,"translucent"],[31,17,25,13],[31,20,25,13,"_ref$translucent"],[31,36,25,13],[31,41,25,13,"undefined"],[31,50,25,13],[31,53,25,16],[31,57,25,20],[31,60,25,20,"_ref$translucent"],[31,76,25,20],[32,6,26,19,"backgroundColorProp"],[32,25,26,38],[32,28,26,38,"_ref"],[32,32,26,38],[32,33,26,2,"backgroundColor"],[32,48,26,17],[33,6,27,5,"props"],[33,11,27,10],[33,18,27,10,"_objectWithoutProperties2"],[33,43,27,10],[33,44,27,10,"default"],[33,51,27,10],[33,53,27,10,"_ref"],[33,57,27,10],[33,59,27,10,"_excluded"],[33,68,27,10],[34,4,29,2],[35,4,30,2],[36,4,31,2],[36,8,31,8,"colorScheme"],[36,19,31,19],[36,22,31,22],[36,26,31,22,"useColorScheme"],[36,53,31,36],[36,55,31,37],[36,56,31,38],[37,4,32,2],[37,8,32,8,"barStyle"],[37,16,32,16],[37,19,32,19,"React"],[37,33,32,24],[37,34,32,25,"useMemo"],[37,41,32,32],[37,42,32,33],[37,48,32,39,"styleToBarStyle"],[37,63,32,54],[37,64,32,55,"style"],[37,69,32,60],[37,71,32,62,"colorScheme"],[37,82,32,73],[37,83,32,74],[37,85,32,76],[37,86,32,77,"style"],[37,91,32,82],[37,93,32,84,"colorScheme"],[37,104,32,95],[37,105,32,96],[37,106,32,97],[39,4,34,2],[40,4,35,2],[41,4,36,2],[41,8,36,6,"backgroundColor"],[41,23,36,21],[41,26,36,24,"backgroundColorProp"],[41,45,36,43],[42,4,37,2],[42,8,37,6,"translucent"],[42,19,37,17],[42,23,37,21],[42,24,37,22,"backgroundColor"],[42,39,37,37],[42,41,37,39],[43,6,38,4,"backgroundColor"],[43,21,38,19],[43,24,38,22],[43,37,38,35],[44,4,39,2],[45,4,41,2],[45,24,42,4],[45,28,42,4,"_jsxRuntime"],[45,39,42,4],[45,40,42,4,"jsx"],[45,43,42,4],[45,45,42,5,"_reactNative"],[45,57,42,5],[45,58,42,5,"StatusBar"],[45,67,42,20],[46,6,42,20],[46,9,43,10,"props"],[46,14,43,15],[47,6,44,6,"translucent"],[47,17,44,17],[47,19,44,19,"translucent"],[47,30,44,31],[48,6,45,6,"barStyle"],[48,14,45,14],[48,16,45,16,"barStyle"],[48,24,45,25],[49,6,46,6,"backgroundColor"],[49,21,46,21],[49,23,46,23,"backgroundColor"],[49,38,46,39],[50,6,47,6,"showHideTransition"],[50,24,47,24],[50,26,47,26,"hideTransitionAnimation"],[50,49,47,49],[50,54,47,54],[50,60,47,60],[50,63,47,63,"undefined"],[50,72,47,72],[50,75,47,75,"hideTransitionAnimation"],[51,4,47,99],[51,5,48,5],[51,6,48,6],[52,2,50,0],[54,2,52,0],[55,2,53,0],[56,0,54,0],[57,0,55,0],[58,0,56,0],[59,0,57,0],[60,2,58,7],[60,11,58,16,"setStatusBarStyle"],[60,28,58,33,"setStatusBarStyle"],[60,29,58,34,"style"],[60,34,58,55],[60,36,58,57,"animated"],[60,44,58,75],[60,46,58,77],[61,4,59,2,"NativeStatusBar"],[61,26,59,17],[61,27,59,18,"setBarStyle"],[61,38,59,29],[61,39,59,30,"styleToBarStyle"],[61,54,59,45],[61,55,59,46,"style"],[61,60,59,51],[61,61,59,52],[61,63,59,54,"animated"],[61,71,59,62],[61,72,59,63],[62,2,60,0],[64,2,62,0],[65,2,63,0],[66,0,64,0],[67,0,65,0],[68,0,66,0],[69,0,67,0],[70,2,68,7],[70,11,68,16,"setStatusBarHidden"],[70,29,68,34,"setStatusBarHidden"],[70,30,68,35,"hidden"],[70,36,68,50],[70,38,68,52,"animation"],[70,47,68,82],[70,49,68,84],[71,4,69,2,"NativeStatusBar"],[71,26,69,17],[71,27,69,18,"setHidden"],[71,36,69,27],[71,37,69,28,"hidden"],[71,43,69,34],[71,45,69,36,"animation"],[71,54,69,45],[71,55,69,46],[72,2,70,0],[74,2,72,0],[75,2,73,0],[76,0,74,0],[77,0,75,0],[78,0,76,0],[79,0,77,0],[80,0,78,0],[81,2,79,7],[81,11,79,16,"setStatusBarBackgroundColor"],[81,38,79,43,"setStatusBarBackgroundColor"],[81,39,79,44,"backgroundColor"],[81,54,79,71],[81,56,79,73,"animated"],[81,64,79,91],[81,66,79,93],[82,4,80,2,"NativeStatusBar"],[82,26,80,17],[82,27,80,18,"setBackgroundColor"],[82,45,80,36],[82,46,80,37,"backgroundColor"],[82,61,80,52],[82,63,80,54,"animated"],[82,71,80,62],[82,72,80,63],[83,2,81,0],[85,2,83,0],[86,2,84,0],[87,0,85,0],[88,0,86,0],[89,0,87,0],[90,0,88,0],[91,2,89,7],[91,11,89,16,"setStatusBarNetworkActivityIndicatorVisible"],[91,54,89,59,"setStatusBarNetworkActivityIndicatorVisible"],[91,55,89,60,"visible"],[91,62,89,76],[91,64,89,78],[92,4,90,2,"NativeStatusBar"],[92,26,90,17],[92,27,90,18,"setNetworkActivityIndicatorVisible"],[92,61,90,52],[92,62,90,53,"visible"],[92,69,90,60],[92,70,90,61],[93,2,91,0],[95,2,93,0],[96,2,94,0],[97,0,95,0],[98,0,96,0],[99,0,97,0],[100,0,98,0],[101,0,99,0],[102,2,100,7],[102,11,100,16,"setStatusBarTranslucent"],[102,34,100,39,"setStatusBarTranslucent"],[102,35,100,40,"translucent"],[102,46,100,60],[102,48,100,62],[103,4,101,2,"NativeStatusBar"],[103,26,101,17],[103,27,101,18,"setTranslucent"],[103,41,101,32],[103,42,101,33,"translucent"],[103,53,101,44],[103,54,101,45],[104,2,102,0],[105,2,104,0],[105,11,104,9,"styleToBarStyle"],[105,26,104,24,"styleToBarStyle"],[105,27,104,24],[105,29,107,36],[106,4,107,36],[106,8,105,2,"style"],[106,13,105,23],[106,16,105,23,"arguments"],[106,25,105,23],[106,26,105,23,"length"],[106,32,105,23],[106,40,105,23,"arguments"],[106,49,105,23],[106,57,105,23,"undefined"],[106,66,105,23],[106,69,105,23,"arguments"],[106,78,105,23],[106,84,105,26],[106,90,105,32],[107,4,105,32],[107,8,106,2,"colorScheme"],[107,19,106,30],[107,22,106,30,"arguments"],[107,31,106,30],[107,32,106,30,"length"],[107,38,106,30],[107,46,106,30,"arguments"],[107,55,106,30],[107,63,106,30,"undefined"],[107,72,106,30],[107,75,106,30,"arguments"],[107,84,106,30],[107,90,106,33,"Appearance"],[107,113,106,43],[107,115,106,45,"getColorScheme"],[107,129,106,59],[107,130,106,60],[107,131,106,61],[107,135,106,65],[107,142,106,72],[108,4,108,2],[108,8,108,6],[108,9,108,7,"colorScheme"],[108,20,108,18],[108,22,108,20],[109,6,109,4,"colorScheme"],[109,17,109,15],[109,20,109,18],[109,27,109,25],[110,4,110,2],[111,4,112,2],[111,8,112,6,"resolvedStyle"],[111,21,112,19],[111,24,112,22,"style"],[111,29,112,27],[112,4,113,2],[112,8,113,6,"style"],[112,13,113,11],[112,18,113,16],[112,24,113,22],[112,26,113,24],[113,6,114,4,"resolvedStyle"],[113,19,114,17],[113,22,114,20,"colorScheme"],[113,33,114,31],[113,38,114,36],[113,45,114,43],[113,48,114,46],[113,54,114,52],[113,57,114,55],[113,64,114,62],[114,4,115,2],[114,5,115,3],[114,11,115,9],[114,15,115,13,"style"],[114,20,115,18],[114,25,115,23],[114,35,115,33],[114,37,115,35],[115,6,116,4,"resolvedStyle"],[115,19,116,17],[115,22,116,20,"colorScheme"],[115,33,116,31],[115,38,116,36],[115,45,116,43],[115,48,116,46],[115,55,116,53],[115,58,116,56],[115,64,116,62],[116,4,117,2],[117,4,119,2],[117,11,119,9,"resolvedStyle"],[117,24,119,22],[117,29,119,27],[117,36,119,34],[117,39,119,37],[117,54,119,52],[117,57,119,55],[117,71,119,69],[118,2,120,0],[119,0,120,1],[119,3]],"functionMap":{"names":["<global>","StatusBar","React.useMemo$argument_0","setStatusBarStyle","setStatusBarHidden","setStatusBarBackgroundColor","setStatusBarNetworkActivityIndicatorVisible","setStatusBarTranslucent","styleToBarStyle"],"mappings":"AAA;OCqB;iCCU,yCD;CDkB;OGQ;CHE;OIQ;CJE;OKS;CLE;OMQ;CNE;OOS;CPE;AQE;CRgB"}},"type":"js/module"}]}