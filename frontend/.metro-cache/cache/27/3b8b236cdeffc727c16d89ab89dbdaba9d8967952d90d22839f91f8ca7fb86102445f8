{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"aU3Lrys8xTVpYSDJal2nhppojC8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/get","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"7RhWyTq5i/X0UNOgMT1VkjxHPX0=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"]}},{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":68,"index":68}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.PanGesture = undefined;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2]));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(_dependencyMap[3]));\n  var _getPrototypeOf2 = _interopRequireDefault(require(_dependencyMap[4]));\n  var _get2 = _interopRequireDefault(require(_dependencyMap[5]));\n  var _inherits2 = _interopRequireDefault(require(_dependencyMap[6]));\n  var _gesture = require(_dependencyMap[7]);\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\n  var _worklet_3643287777059_init_data = {\n    code: \"function changeEventCalculator_reactNativeGestureHandler_panGestureTs1(current,previous){let changePayload;if(previous===undefined){changePayload={changeX:current.translationX,changeY:current.translationY};}else{changePayload={changeX:current.translationX-previous.translationX,changeY:current.translationY-previous.translationY};}return{...current,...changePayload};}\"\n  };\n  var changeEventCalculator = function () {\n    var changeEventCalculator = function (current, previous) {\n      var changePayload;\n      if (previous === undefined) {\n        changePayload = {\n          changeX: current.translationX,\n          changeY: current.translationY\n        };\n      } else {\n        changePayload = {\n          changeX: current.translationX - previous.translationX,\n          changeY: current.translationY - previous.translationY\n        };\n      }\n      return {\n        ...current,\n        ...changePayload\n      };\n    };\n    changeEventCalculator.__closure = {};\n    changeEventCalculator.__workletHash = 3643287777059;\n    changeEventCalculator.__initData = _worklet_3643287777059_init_data;\n    return changeEventCalculator;\n  }();\n  var PanGesture = exports.PanGesture = /*#__PURE__*/function (_ContinousBaseGesture) {\n    function PanGesture() {\n      var _this;\n      (0, _classCallCheck2.default)(this, PanGesture);\n      _this = _callSuper(this, PanGesture);\n      _this.config = {};\n      _this.handlerName = 'PanGestureHandler';\n      return _this;\n    }\n\n    /**\n     * Range along Y axis (in points) where fingers travels without activation of gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetyvalue-number--number\n     */\n    (0, _inherits2.default)(PanGesture, _ContinousBaseGesture);\n    return (0, _createClass2.default)(PanGesture, [{\n      key: \"activeOffsetY\",\n      value: function activeOffsetY(offset) {\n        if (Array.isArray(offset)) {\n          this.config.activeOffsetYStart = offset[0];\n          this.config.activeOffsetYEnd = offset[1];\n        } else if (offset < 0) {\n          this.config.activeOffsetYStart = offset;\n        } else {\n          this.config.activeOffsetYEnd = offset;\n        }\n        return this;\n      }\n\n      /**\n       * Range along X axis (in points) where fingers travels without activation of gesture.\n       * @param offset\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetxvalue-number--number\n       */\n    }, {\n      key: \"activeOffsetX\",\n      value: function activeOffsetX(offset) {\n        if (Array.isArray(offset)) {\n          this.config.activeOffsetXStart = offset[0];\n          this.config.activeOffsetXEnd = offset[1];\n        } else if (offset < 0) {\n          this.config.activeOffsetXStart = offset;\n        } else {\n          this.config.activeOffsetXEnd = offset;\n        }\n        return this;\n      }\n\n      /**\n       * When the finger moves outside this range (in points) along Y axis and gesture hasn't yet activated it will fail recognizing the gesture.\n       * @param offset\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetyvalue-number--number\n       */\n    }, {\n      key: \"failOffsetY\",\n      value: function failOffsetY(offset) {\n        if (Array.isArray(offset)) {\n          this.config.failOffsetYStart = offset[0];\n          this.config.failOffsetYEnd = offset[1];\n        } else if (offset < 0) {\n          this.config.failOffsetYStart = offset;\n        } else {\n          this.config.failOffsetYEnd = offset;\n        }\n        return this;\n      }\n\n      /**\n       * When the finger moves outside this range (in points) along X axis and gesture hasn't yet activated it will fail recognizing the gesture.\n       * @param offset\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetxvalue-number--number\n       */\n    }, {\n      key: \"failOffsetX\",\n      value: function failOffsetX(offset) {\n        if (Array.isArray(offset)) {\n          this.config.failOffsetXStart = offset[0];\n          this.config.failOffsetXEnd = offset[1];\n        } else if (offset < 0) {\n          this.config.failOffsetXStart = offset;\n        } else {\n          this.config.failOffsetXEnd = offset;\n        }\n        return this;\n      }\n\n      /**\n       * A number of fingers that is required to be placed before gesture can activate. Should be a higher or equal to 0 integer.\n       * @param minPointers\n       */\n    }, {\n      key: \"minPointers\",\n      value: function minPointers(_minPointers) {\n        this.config.minPointers = _minPointers;\n        return this;\n      }\n\n      /**\n       * When the given number of fingers is placed on the screen and gesture hasn't yet activated it will fail recognizing the gesture.\n       * Should be a higher or equal to 0 integer.\n       * @param maxPointers\n       */\n    }, {\n      key: \"maxPointers\",\n      value: function maxPointers(_maxPointers) {\n        this.config.maxPointers = _maxPointers;\n        return this;\n      }\n\n      /**\n       * Minimum distance the finger (or multiple finger) need to travel before the gesture activates.\n       * Expressed in points.\n       * @param distance\n       */\n    }, {\n      key: \"minDistance\",\n      value: function minDistance(distance) {\n        this.config.minDist = distance;\n        return this;\n      }\n\n      /**\n       * Minimum velocity the finger has to reach in order to activate handler.\n       * @param velocity\n       */\n    }, {\n      key: \"minVelocity\",\n      value: function minVelocity(velocity) {\n        this.config.minVelocity = velocity;\n        return this;\n      }\n\n      /**\n       * Minimum velocity along X axis the finger has to reach in order to activate handler.\n       * @param velocity\n       */\n    }, {\n      key: \"minVelocityX\",\n      value: function minVelocityX(velocity) {\n        this.config.minVelocityX = velocity;\n        return this;\n      }\n\n      /**\n       * Minimum velocity along Y axis the finger has to reach in order to activate handler.\n       * @param velocity\n       */\n    }, {\n      key: \"minVelocityY\",\n      value: function minVelocityY(velocity) {\n        this.config.minVelocityY = velocity;\n        return this;\n      }\n\n      /**\n       * #### Android only\n       * Android, by default, will calculate translation values based on the position of the leading pointer (the first one that was placed on the screen).\n       * This modifier allows that behavior to be changed to the one that is default on iOS - the averaged position of all active pointers will be used to calculate the translation values.\n       * @param value\n       */\n    }, {\n      key: \"averageTouches\",\n      value: function averageTouches(value) {\n        this.config.avgTouches = value;\n        return this;\n      }\n\n      /**\n       * #### iOS only\n       * Enables two-finger gestures on supported devices, for example iPads with trackpads.\n       * @param value\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#enabletrackpadtwofingergesturevalue-boolean-ios-only\n       */\n    }, {\n      key: \"enableTrackpadTwoFingerGesture\",\n      value: function enableTrackpadTwoFingerGesture(value) {\n        this.config.enableTrackpadTwoFingerGesture = value;\n        return this;\n      }\n\n      /**\n       * Duration in milliseconds of the LongPress gesture before Pan is allowed to activate.\n       * @param duration\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#activateafterlongpressduration-number\n       */\n    }, {\n      key: \"activateAfterLongPress\",\n      value: function activateAfterLongPress(duration) {\n        this.config.activateAfterLongPress = duration;\n        return this;\n      }\n    }, {\n      key: \"onChange\",\n      value: function onChange(callback) {\n        // @ts-ignore TS being overprotective, PanGestureHandlerEventPayload is Record\n        this.handlers.changeEventCalculator = changeEventCalculator;\n        return _superPropGet(PanGesture, \"onChange\", this, 3)([callback]);\n      }\n    }]);\n  }(_gesture.ContinousBaseGesture);\n});","lineCount":245,"map":[[13,2,1,0],[13,6,1,0,"_gesture"],[13,14,1,0],[13,17,1,0,"require"],[13,24,1,0],[13,25,1,0,"_dependencyMap"],[13,39,1,0],[14,2,1,68],[14,11,1,68,"_callSuper"],[14,22,1,68,"t"],[14,23,1,68],[14,25,1,68,"o"],[14,26,1,68],[14,28,1,68,"e"],[14,29,1,68],[14,40,1,68,"o"],[14,41,1,68],[14,48,1,68,"_getPrototypeOf2"],[14,64,1,68],[14,65,1,68,"default"],[14,72,1,68],[14,74,1,68,"o"],[14,75,1,68],[14,82,1,68,"_possibleConstructorReturn2"],[14,109,1,68],[14,110,1,68,"default"],[14,117,1,68],[14,119,1,68,"t"],[14,120,1,68],[14,122,1,68,"_isNativeReflectConstruct"],[14,147,1,68],[14,152,1,68,"Reflect"],[14,159,1,68],[14,160,1,68,"construct"],[14,169,1,68],[14,170,1,68,"o"],[14,171,1,68],[14,173,1,68,"e"],[14,174,1,68],[14,186,1,68,"_getPrototypeOf2"],[14,202,1,68],[14,203,1,68,"default"],[14,210,1,68],[14,212,1,68,"t"],[14,213,1,68],[14,215,1,68,"constructor"],[14,226,1,68],[14,230,1,68,"o"],[14,231,1,68],[14,232,1,68,"apply"],[14,237,1,68],[14,238,1,68,"t"],[14,239,1,68],[14,241,1,68,"e"],[14,242,1,68],[15,2,1,68],[15,11,1,68,"_isNativeReflectConstruct"],[15,37,1,68],[15,51,1,68,"t"],[15,52,1,68],[15,56,1,68,"Boolean"],[15,63,1,68],[15,64,1,68,"prototype"],[15,73,1,68],[15,74,1,68,"valueOf"],[15,81,1,68],[15,82,1,68,"call"],[15,86,1,68],[15,87,1,68,"Reflect"],[15,94,1,68],[15,95,1,68,"construct"],[15,104,1,68],[15,105,1,68,"Boolean"],[15,112,1,68],[15,145,1,68,"t"],[15,146,1,68],[15,159,1,68,"_isNativeReflectConstruct"],[15,184,1,68],[15,196,1,68,"_isNativeReflectConstruct"],[15,197,1,68],[15,210,1,68,"t"],[15,211,1,68],[16,2,1,68],[16,11,1,68,"_superPropGet"],[16,25,1,68,"t"],[16,26,1,68],[16,28,1,68,"o"],[16,29,1,68],[16,31,1,68,"e"],[16,32,1,68],[16,34,1,68,"r"],[16,35,1,68],[16,43,1,68,"p"],[16,44,1,68],[16,51,1,68,"_get2"],[16,56,1,68],[16,57,1,68,"default"],[16,64,1,68],[16,70,1,68,"_getPrototypeOf2"],[16,86,1,68],[16,87,1,68,"default"],[16,94,1,68],[16,100,1,68,"r"],[16,101,1,68],[16,104,1,68,"t"],[16,105,1,68],[16,106,1,68,"prototype"],[16,115,1,68],[16,118,1,68,"t"],[16,119,1,68],[16,122,1,68,"o"],[16,123,1,68],[16,125,1,68,"e"],[16,126,1,68],[16,140,1,68,"r"],[16,141,1,68],[16,166,1,68,"p"],[16,167,1,68],[16,180,1,68,"t"],[16,181,1,68],[16,192,1,68,"p"],[16,193,1,68],[16,194,1,68,"apply"],[16,199,1,68],[16,200,1,68,"e"],[16,201,1,68],[16,203,1,68,"t"],[16,204,1,68],[16,211,1,68,"p"],[16,212,1,68],[17,2,1,68],[17,6,1,68,"_worklet_3643287777059_init_data"],[17,38,1,68],[18,4,1,68,"code"],[18,8,1,68],[19,2,1,68],[20,2,1,68],[20,6,1,68,"changeEventCalculator"],[20,27,1,68],[20,30,11,0],[21,4,11,0],[21,8,11,0,"changeEventCalculator"],[21,29,11,0],[21,41,11,0,"changeEventCalculator"],[21,42,12,2,"current"],[21,49,12,60],[21,51,13,2,"previous"],[21,59,13,62],[21,61,14,2],[22,6,16,2],[22,10,16,6,"changePayload"],[22,23,16,49],[23,6,17,2],[23,10,17,6,"previous"],[23,18,17,14],[23,23,17,19,"undefined"],[23,32,17,28],[23,34,17,30],[24,8,18,4,"changePayload"],[24,21,18,17],[24,24,18,20],[25,10,19,6,"changeX"],[25,17,19,13],[25,19,19,15,"current"],[25,26,19,22],[25,27,19,23,"translationX"],[25,39,19,35],[26,10,20,6,"changeY"],[26,17,20,13],[26,19,20,15,"current"],[26,26,20,22],[26,27,20,23,"translationY"],[27,8,21,4],[27,9,21,5],[28,6,22,2],[28,7,22,3],[28,13,22,9],[29,8,23,4,"changePayload"],[29,21,23,17],[29,24,23,20],[30,10,24,6,"changeX"],[30,17,24,13],[30,19,24,15,"current"],[30,26,24,22],[30,27,24,23,"translationX"],[30,39,24,35],[30,42,24,38,"previous"],[30,50,24,46],[30,51,24,47,"translationX"],[30,63,24,59],[31,10,25,6,"changeY"],[31,17,25,13],[31,19,25,15,"current"],[31,26,25,22],[31,27,25,23,"translationY"],[31,39,25,35],[31,42,25,38,"previous"],[31,50,25,46],[31,51,25,47,"translationY"],[32,8,26,4],[32,9,26,5],[33,6,27,2],[34,6,29,2],[34,13,29,9],[35,8,29,11],[35,11,29,14,"current"],[35,18,29,21],[36,8,29,23],[36,11,29,26,"changePayload"],[37,6,29,40],[37,7,29,41],[38,4,30,0],[38,5,30,1],[39,4,30,1,"changeEventCalculator"],[39,25,30,1],[39,26,30,1,"__closure"],[39,35,30,1],[40,4,30,1,"changeEventCalculator"],[40,25,30,1],[40,26,30,1,"__workletHash"],[40,39,30,1],[41,4,30,1,"changeEventCalculator"],[41,25,30,1],[41,26,30,1,"__initData"],[41,36,30,1],[41,39,30,1,"_worklet_3643287777059_init_data"],[41,71,30,1],[42,4,30,1],[42,11,30,1,"changeEventCalculator"],[42,32,30,1],[43,2,30,1],[43,3,11,0],[44,2,11,0],[44,6,32,13,"PanGesture"],[44,16,32,23],[44,19,32,23,"exports"],[44,26,32,23],[44,27,32,23,"PanGesture"],[44,37,32,23],[44,63,32,23,"_ContinousBaseGesture"],[44,84,32,23],[45,4,38,2],[45,13,38,2,"PanGesture"],[45,24,38,2],[45,26,38,16],[46,6,38,16],[46,10,38,16,"_this"],[46,15,38,16],[47,6,38,16],[47,10,38,16,"_classCallCheck2"],[47,26,38,16],[47,27,38,16,"default"],[47,34,38,16],[47,42,38,16,"PanGesture"],[47,52,38,16],[48,6,39,4,"_this"],[48,11,39,4],[48,14,39,4,"_callSuper"],[48,24,39,4],[48,31,39,4,"PanGesture"],[48,41,39,4],[49,6,39,12,"_this"],[49,11,39,12],[49,12,36,9,"config"],[49,18,36,15],[49,21,36,56],[49,22,36,57],[49,23,36,58],[50,6,41,4,"_this"],[50,11,41,4],[50,12,41,9,"handlerName"],[50,23,41,20],[50,26,41,23],[50,45,41,42],[51,6,41,43],[51,13,41,43,"_this"],[51,18,41,43],[52,4,42,2],[54,4,44,2],[55,0,45,0],[56,0,46,0],[57,0,47,0],[58,0,48,0],[59,4,44,2],[59,8,44,2,"_inherits2"],[59,18,44,2],[59,19,44,2,"default"],[59,26,44,2],[59,28,44,2,"PanGesture"],[59,38,44,2],[59,40,44,2,"_ContinousBaseGesture"],[59,61,44,2],[60,4,44,2],[60,15,44,2,"_createClass2"],[60,28,44,2],[60,29,44,2,"default"],[60,36,44,2],[60,38,44,2,"PanGesture"],[60,48,44,2],[61,6,44,2,"key"],[61,9,44,2],[62,6,44,2,"value"],[62,11,44,2],[62,13,49,2],[62,22,49,2,"activeOffsetY"],[62,35,49,15,"activeOffsetY"],[62,36,50,4,"offset"],[62,42,50,75],[62,44,51,4],[63,8,52,4],[63,12,52,8,"Array"],[63,17,52,13],[63,18,52,14,"isArray"],[63,25,52,21],[63,26,52,22,"offset"],[63,32,52,28],[63,33,52,29],[63,35,52,31],[64,10,53,6],[64,14,53,10],[64,15,53,11,"config"],[64,21,53,17],[64,22,53,18,"activeOffsetYStart"],[64,40,53,36],[64,43,53,39,"offset"],[64,49,53,45],[64,50,53,46],[64,51,53,47],[64,52,53,48],[65,10,54,6],[65,14,54,10],[65,15,54,11,"config"],[65,21,54,17],[65,22,54,18,"activeOffsetYEnd"],[65,38,54,34],[65,41,54,37,"offset"],[65,47,54,43],[65,48,54,44],[65,49,54,45],[65,50,54,46],[66,8,55,4],[66,9,55,5],[66,15,55,11],[66,19,55,15,"offset"],[66,25,55,21],[66,28,55,24],[66,29,55,25],[66,31,55,27],[67,10,56,6],[67,14,56,10],[67,15,56,11,"config"],[67,21,56,17],[67,22,56,18,"activeOffsetYStart"],[67,40,56,36],[67,43,56,39,"offset"],[67,49,56,45],[68,8,57,4],[68,9,57,5],[68,15,57,11],[69,10,58,6],[69,14,58,10],[69,15,58,11,"config"],[69,21,58,17],[69,22,58,18,"activeOffsetYEnd"],[69,38,58,34],[69,41,58,37,"offset"],[69,47,58,43],[70,8,59,4],[71,8,60,4],[71,15,60,11],[71,19,60,15],[72,6,61,2],[74,6,63,2],[75,0,64,0],[76,0,65,0],[77,0,66,0],[78,0,67,0],[79,4,63,2],[80,6,63,2,"key"],[80,9,63,2],[81,6,63,2,"value"],[81,11,63,2],[81,13,68,2],[81,22,68,2,"activeOffsetX"],[81,35,68,15,"activeOffsetX"],[81,36,69,4,"offset"],[81,42,69,75],[81,44,70,4],[82,8,71,4],[82,12,71,8,"Array"],[82,17,71,13],[82,18,71,14,"isArray"],[82,25,71,21],[82,26,71,22,"offset"],[82,32,71,28],[82,33,71,29],[82,35,71,31],[83,10,72,6],[83,14,72,10],[83,15,72,11,"config"],[83,21,72,17],[83,22,72,18,"activeOffsetXStart"],[83,40,72,36],[83,43,72,39,"offset"],[83,49,72,45],[83,50,72,46],[83,51,72,47],[83,52,72,48],[84,10,73,6],[84,14,73,10],[84,15,73,11,"config"],[84,21,73,17],[84,22,73,18,"activeOffsetXEnd"],[84,38,73,34],[84,41,73,37,"offset"],[84,47,73,43],[84,48,73,44],[84,49,73,45],[84,50,73,46],[85,8,74,4],[85,9,74,5],[85,15,74,11],[85,19,74,15,"offset"],[85,25,74,21],[85,28,74,24],[85,29,74,25],[85,31,74,27],[86,10,75,6],[86,14,75,10],[86,15,75,11,"config"],[86,21,75,17],[86,22,75,18,"activeOffsetXStart"],[86,40,75,36],[86,43,75,39,"offset"],[86,49,75,45],[87,8,76,4],[87,9,76,5],[87,15,76,11],[88,10,77,6],[88,14,77,10],[88,15,77,11,"config"],[88,21,77,17],[88,22,77,18,"activeOffsetXEnd"],[88,38,77,34],[88,41,77,37,"offset"],[88,47,77,43],[89,8,78,4],[90,8,79,4],[90,15,79,11],[90,19,79,15],[91,6,80,2],[93,6,82,2],[94,0,83,0],[95,0,84,0],[96,0,85,0],[97,0,86,0],[98,4,82,2],[99,6,82,2,"key"],[99,9,82,2],[100,6,82,2,"value"],[100,11,82,2],[100,13,87,2],[100,22,87,2,"failOffsetY"],[100,33,87,13,"failOffsetY"],[100,34,88,4,"offset"],[100,40,88,71],[100,42,89,4],[101,8,90,4],[101,12,90,8,"Array"],[101,17,90,13],[101,18,90,14,"isArray"],[101,25,90,21],[101,26,90,22,"offset"],[101,32,90,28],[101,33,90,29],[101,35,90,31],[102,10,91,6],[102,14,91,10],[102,15,91,11,"config"],[102,21,91,17],[102,22,91,18,"failOffsetYStart"],[102,38,91,34],[102,41,91,37,"offset"],[102,47,91,43],[102,48,91,44],[102,49,91,45],[102,50,91,46],[103,10,92,6],[103,14,92,10],[103,15,92,11,"config"],[103,21,92,17],[103,22,92,18,"failOffsetYEnd"],[103,36,92,32],[103,39,92,35,"offset"],[103,45,92,41],[103,46,92,42],[103,47,92,43],[103,48,92,44],[104,8,93,4],[104,9,93,5],[104,15,93,11],[104,19,93,15,"offset"],[104,25,93,21],[104,28,93,24],[104,29,93,25],[104,31,93,27],[105,10,94,6],[105,14,94,10],[105,15,94,11,"config"],[105,21,94,17],[105,22,94,18,"failOffsetYStart"],[105,38,94,34],[105,41,94,37,"offset"],[105,47,94,43],[106,8,95,4],[106,9,95,5],[106,15,95,11],[107,10,96,6],[107,14,96,10],[107,15,96,11,"config"],[107,21,96,17],[107,22,96,18,"failOffsetYEnd"],[107,36,96,32],[107,39,96,35,"offset"],[107,45,96,41],[108,8,97,4],[109,8,98,4],[109,15,98,11],[109,19,98,15],[110,6,99,2],[112,6,101,2],[113,0,102,0],[114,0,103,0],[115,0,104,0],[116,0,105,0],[117,4,101,2],[118,6,101,2,"key"],[118,9,101,2],[119,6,101,2,"value"],[119,11,101,2],[119,13,106,2],[119,22,106,2,"failOffsetX"],[119,33,106,13,"failOffsetX"],[119,34,107,4,"offset"],[119,40,107,71],[119,42,108,4],[120,8,109,4],[120,12,109,8,"Array"],[120,17,109,13],[120,18,109,14,"isArray"],[120,25,109,21],[120,26,109,22,"offset"],[120,32,109,28],[120,33,109,29],[120,35,109,31],[121,10,110,6],[121,14,110,10],[121,15,110,11,"config"],[121,21,110,17],[121,22,110,18,"failOffsetXStart"],[121,38,110,34],[121,41,110,37,"offset"],[121,47,110,43],[121,48,110,44],[121,49,110,45],[121,50,110,46],[122,10,111,6],[122,14,111,10],[122,15,111,11,"config"],[122,21,111,17],[122,22,111,18,"failOffsetXEnd"],[122,36,111,32],[122,39,111,35,"offset"],[122,45,111,41],[122,46,111,42],[122,47,111,43],[122,48,111,44],[123,8,112,4],[123,9,112,5],[123,15,112,11],[123,19,112,15,"offset"],[123,25,112,21],[123,28,112,24],[123,29,112,25],[123,31,112,27],[124,10,113,6],[124,14,113,10],[124,15,113,11,"config"],[124,21,113,17],[124,22,113,18,"failOffsetXStart"],[124,38,113,34],[124,41,113,37,"offset"],[124,47,113,43],[125,8,114,4],[125,9,114,5],[125,15,114,11],[126,10,115,6],[126,14,115,10],[126,15,115,11,"config"],[126,21,115,17],[126,22,115,18,"failOffsetXEnd"],[126,36,115,32],[126,39,115,35,"offset"],[126,45,115,41],[127,8,116,4],[128,8,117,4],[128,15,117,11],[128,19,117,15],[129,6,118,2],[131,6,120,2],[132,0,121,0],[133,0,122,0],[134,0,123,0],[135,4,120,2],[136,6,120,2,"key"],[136,9,120,2],[137,6,120,2,"value"],[137,11,120,2],[137,13,124,2],[137,22,124,2,"minPointers"],[137,33,124,13,"minPointers"],[137,34,124,14,"minPointers"],[137,46,124,33],[137,48,124,35],[138,8,125,4],[138,12,125,8],[138,13,125,9,"config"],[138,19,125,15],[138,20,125,16,"minPointers"],[138,31,125,27],[138,34,125,30,"minPointers"],[138,46,125,41],[139,8,126,4],[139,15,126,11],[139,19,126,15],[140,6,127,2],[142,6,129,2],[143,0,130,0],[144,0,131,0],[145,0,132,0],[146,0,133,0],[147,4,129,2],[148,6,129,2,"key"],[148,9,129,2],[149,6,129,2,"value"],[149,11,129,2],[149,13,134,2],[149,22,134,2,"maxPointers"],[149,33,134,13,"maxPointers"],[149,34,134,14,"maxPointers"],[149,46,134,33],[149,48,134,35],[150,8,135,4],[150,12,135,8],[150,13,135,9,"config"],[150,19,135,15],[150,20,135,16,"maxPointers"],[150,31,135,27],[150,34,135,30,"maxPointers"],[150,46,135,41],[151,8,136,4],[151,15,136,11],[151,19,136,15],[152,6,137,2],[154,6,139,2],[155,0,140,0],[156,0,141,0],[157,0,142,0],[158,0,143,0],[159,4,139,2],[160,6,139,2,"key"],[160,9,139,2],[161,6,139,2,"value"],[161,11,139,2],[161,13,144,2],[161,22,144,2,"minDistance"],[161,33,144,13,"minDistance"],[161,34,144,14,"distance"],[161,42,144,30],[161,44,144,32],[162,8,145,4],[162,12,145,8],[162,13,145,9,"config"],[162,19,145,15],[162,20,145,16,"minDist"],[162,27,145,23],[162,30,145,26,"distance"],[162,38,145,34],[163,8,146,4],[163,15,146,11],[163,19,146,15],[164,6,147,2],[166,6,149,2],[167,0,150,0],[168,0,151,0],[169,0,152,0],[170,4,149,2],[171,6,149,2,"key"],[171,9,149,2],[172,6,149,2,"value"],[172,11,149,2],[172,13,153,2],[172,22,153,2,"minVelocity"],[172,33,153,13,"minVelocity"],[172,34,153,14,"velocity"],[172,42,153,30],[172,44,153,32],[173,8,154,4],[173,12,154,8],[173,13,154,9,"config"],[173,19,154,15],[173,20,154,16,"minVelocity"],[173,31,154,27],[173,34,154,30,"velocity"],[173,42,154,38],[174,8,155,4],[174,15,155,11],[174,19,155,15],[175,6,156,2],[177,6,158,2],[178,0,159,0],[179,0,160,0],[180,0,161,0],[181,4,158,2],[182,6,158,2,"key"],[182,9,158,2],[183,6,158,2,"value"],[183,11,158,2],[183,13,162,2],[183,22,162,2,"minVelocityX"],[183,34,162,14,"minVelocityX"],[183,35,162,15,"velocity"],[183,43,162,31],[183,45,162,33],[184,8,163,4],[184,12,163,8],[184,13,163,9,"config"],[184,19,163,15],[184,20,163,16,"minVelocityX"],[184,32,163,28],[184,35,163,31,"velocity"],[184,43,163,39],[185,8,164,4],[185,15,164,11],[185,19,164,15],[186,6,165,2],[188,6,167,2],[189,0,168,0],[190,0,169,0],[191,0,170,0],[192,4,167,2],[193,6,167,2,"key"],[193,9,167,2],[194,6,167,2,"value"],[194,11,167,2],[194,13,171,2],[194,22,171,2,"minVelocityY"],[194,34,171,14,"minVelocityY"],[194,35,171,15,"velocity"],[194,43,171,31],[194,45,171,33],[195,8,172,4],[195,12,172,8],[195,13,172,9,"config"],[195,19,172,15],[195,20,172,16,"minVelocityY"],[195,32,172,28],[195,35,172,31,"velocity"],[195,43,172,39],[196,8,173,4],[196,15,173,11],[196,19,173,15],[197,6,174,2],[199,6,176,2],[200,0,177,0],[201,0,178,0],[202,0,179,0],[203,0,180,0],[204,0,181,0],[205,4,176,2],[206,6,176,2,"key"],[206,9,176,2],[207,6,176,2,"value"],[207,11,176,2],[207,13,182,2],[207,22,182,2,"averageTouches"],[207,36,182,16,"averageTouches"],[207,37,182,17,"value"],[207,42,182,31],[207,44,182,33],[208,8,183,4],[208,12,183,8],[208,13,183,9,"config"],[208,19,183,15],[208,20,183,16,"avgTouches"],[208,30,183,26],[208,33,183,29,"value"],[208,38,183,34],[209,8,184,4],[209,15,184,11],[209,19,184,15],[210,6,185,2],[212,6,187,2],[213,0,188,0],[214,0,189,0],[215,0,190,0],[216,0,191,0],[217,0,192,0],[218,4,187,2],[219,6,187,2,"key"],[219,9,187,2],[220,6,187,2,"value"],[220,11,187,2],[220,13,193,2],[220,22,193,2,"enableTrackpadTwoFingerGesture"],[220,52,193,32,"enableTrackpadTwoFingerGesture"],[220,53,193,33,"value"],[220,58,193,47],[220,60,193,49],[221,8,194,4],[221,12,194,8],[221,13,194,9,"config"],[221,19,194,15],[221,20,194,16,"enableTrackpadTwoFingerGesture"],[221,50,194,46],[221,53,194,49,"value"],[221,58,194,54],[222,8,195,4],[222,15,195,11],[222,19,195,15],[223,6,196,2],[225,6,198,2],[226,0,199,0],[227,0,200,0],[228,0,201,0],[229,0,202,0],[230,4,198,2],[231,6,198,2,"key"],[231,9,198,2],[232,6,198,2,"value"],[232,11,198,2],[232,13,203,2],[232,22,203,2,"activateAfterLongPress"],[232,44,203,24,"activateAfterLongPress"],[232,45,203,25,"duration"],[232,53,203,41],[232,55,203,43],[233,8,204,4],[233,12,204,8],[233,13,204,9,"config"],[233,19,204,15],[233,20,204,16,"activateAfterLongPress"],[233,42,204,38],[233,45,204,41,"duration"],[233,53,204,49],[234,8,205,4],[234,15,205,11],[234,19,205,15],[235,6,206,2],[236,4,206,3],[237,6,206,3,"key"],[237,9,206,3],[238,6,206,3,"value"],[238,11,206,3],[238,13,208,2],[238,22,208,2,"onChange"],[238,30,208,10,"onChange"],[238,31,209,4,"callback"],[238,39,213,13],[238,41,214,4],[239,8,215,4],[240,8,216,4],[240,12,216,8],[240,13,216,9,"handlers"],[240,21,216,17],[240,22,216,18,"changeEventCalculator"],[240,43,216,39],[240,46,216,42,"changeEventCalculator"],[240,67,216,63],[241,8,217,4],[241,15,217,4,"_superPropGet"],[241,28,217,4],[241,29,217,4,"PanGesture"],[241,39,217,4],[241,63,217,26,"callback"],[241,71,217,34],[242,6,218,2],[243,4,218,3],[244,2,218,3],[244,4,32,32,"ContinousBaseGesture"],[244,33,32,52],[245,0,32,52],[245,3]],"functionMap":{"names":["<global>","changeEventCalculator","PanGesture","PanGesture#constructor","PanGesture#activeOffsetY","PanGesture#activeOffsetX","PanGesture#failOffsetY","PanGesture#failOffsetX","PanGesture#minPointers","PanGesture#maxPointers","PanGesture#minDistance","PanGesture#minVelocity","PanGesture#minVelocityX","PanGesture#minVelocityY","PanGesture#averageTouches","PanGesture#enableTrackpadTwoFingerGesture","PanGesture#activateAfterLongPress","PanGesture#onChange"],"mappings":"AAA;ACU;CDmB;OEE;ECM;GDI;EEO;GFY;EGO;GHY;EIO;GJY;EKO;GLY;EMM;GNG;EOO;GPG;EQO;GRG;ESM;GTG;EUM;GVG;EWM;GXG;EYQ;GZG;EaQ;GbG;EcO;GdG;EeE;GfU;CFC"}},"type":"js/module"}]}