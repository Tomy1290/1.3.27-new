{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":39,"index":39}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"]}},{"name":"./localChat","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":40},"end":{"line":2,"column":56,"index":96}}],"key":"aXvKl/lmPsjnZryl5znHfKnmrlU=","exportNames":["*"]}},{"name":"./summary","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":97},"end":{"line":3,"column":45,"index":142}}],"key":"3AleHoplC8CAd676xho2Y/OsXUw=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.callCloudLLM = callCloudLLM;\n  exports.getAIStatus = getAIStatus;\n  exports.hybridGreeting = hybridGreeting;\n  exports.hybridReply = hybridReply;\n  exports.testCloudConnection = testCloudConnection;\n  var _expoConstants = _interopRequireDefault(require(_dependencyMap[1], \"expo-constants\"));\n  var _localChat = require(_dependencyMap[2], \"./localChat\");\n  var _summary = require(_dependencyMap[3], \"./summary\");\n  // Direct OpenAI API integration using Emergent LLM Key\n  const getEmergentLLMKey = () => {\n    // Try multiple ways to get the key\n    return _expoConstants.default.expoConfig?.extra?.EXPO_PUBLIC_EMERGENT_LLM_KEY || _expoConstants.default.manifest?.extra?.EXPO_PUBLIC_EMERGENT_LLM_KEY || (typeof process !== 'undefined' ? process.env.EXPO_PUBLIC_EMERGENT_LLM_KEY : null) || 'sk-emergent-e34Af18EdBf12063f7'; // Fallback\n  };\n\n  /**\n   * Test if Direct LLM is reachable by doing a simple health check\n   */\n  async function testCloudConnection() {\n    const EMERGENT_LLM_KEY = getEmergentLLMKey();\n    if (!EMERGENT_LLM_KEY) {\n      console.warn('No Emergent LLM Key available');\n      return false;\n    }\n    try {\n      // Simple test request to OpenAI API\n      const response = await fetch('https://api.openai.com/v1/models', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${EMERGENT_LLM_KEY}`,\n          'Content-Type': 'application/json'\n        },\n        signal: AbortSignal.timeout(3000) // 3 second timeout\n      });\n      return response.ok;\n    } catch (error) {\n      console.warn('Direct LLM connection test failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Call OpenAI API directly using Emergent LLM Key\n   */\n  async function callCloudLLM(request) {\n    const EMERGENT_LLM_KEY = getEmergentLLMKey();\n    if (!EMERGENT_LLM_KEY) {\n      throw new Error('No Emergent LLM Key available');\n    }\n    try {\n      const systemPrompt = request.language === 'de' ? 'Du bist Gugi, ein freundlicher Gesundheitscoach. Antworte kurz und hilfsreich auf Deutsch.' : request.language === 'pl' ? 'JesteÅ› Gugi, przyjaznym trenerem zdrowia. Odpowiadaj krÃ³tko i pomocnie po polsku.' : 'You are Gugi, a friendly health coach. Respond briefly and helpfully in English.';\n      const messages = [{\n        role: 'system',\n        content: systemPrompt\n      }];\n      if (request.mode === 'greeting') {\n        // Create greeting based on summary\n        const summaryText = request.summary ? `User data: ${JSON.stringify(request.summary, null, 2)}` : 'No user data available';\n        messages.push({\n          role: 'user',\n          content: request.language === 'de' ? `BegrÃ¼ÃŸe mich freundlich als Gesundheitscoach. Hier sind meine Daten: ${summaryText}` : request.language === 'pl' ? `Przywitaj mnie przyjaÅºnie jako trener zdrowia. Oto moje dane: ${summaryText}` : `Greet me friendly as a health coach. Here's my data: ${summaryText}`\n        });\n      } else {\n        // Add chat history and current message\n        if (request.messages) {\n          messages.push(...request.messages);\n        }\n      }\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${EMERGENT_LLM_KEY}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          model: request.model || 'gpt-4o-mini',\n          messages,\n          max_tokens: 280,\n          temperature: 0.4\n        }),\n        signal: AbortSignal.timeout(8000) // 8 second timeout\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`OpenAI API responded with status ${response.status}: ${errorText}`);\n      }\n      const data = await response.json();\n      const content = data.choices?.[0]?.message?.content || '';\n      if (!content.trim()) {\n        throw new Error('Empty response from OpenAI API');\n      }\n      return content.trim();\n    } catch (error) {\n      console.warn('Direct LLM call failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Hybrid greeting - tries Cloud LLM first, falls back to local\n   */\n  async function hybridGreeting(state) {\n    try {\n      // Test connection first\n      const isConnected = await testCloudConnection();\n      if (!isConnected) {\n        throw new Error('Cloud LLM not reachable');\n      }\n\n      // Prepare summary for Cloud LLM\n      const summary = (0, _summary.computeAISummary)(state);\n      const request = {\n        mode: 'greeting',\n        language: state.language || 'de',\n        model: 'gpt-4o-mini',\n        summary\n      };\n      const result = await callCloudLLM(request);\n      if (result && result.trim()) {\n        console.log('âœ… Cloud LLM greeting successful');\n        return result.trim();\n      }\n      throw new Error('Empty response from Cloud LLM');\n    } catch (error) {\n      console.log('ðŸ”„ Cloud LLM failed, falling back to local greeting:', error);\n      return await (0, _localChat.localGreeting)(state);\n    }\n  }\n\n  /**\n   * Hybrid reply - tries Cloud LLM first, falls back to local\n   */\n  async function hybridReply(state, userMessage) {\n    try {\n      // Test connection first\n      const isConnected = await testCloudConnection();\n      if (!isConnected) {\n        throw new Error('Cloud LLM not reachable');\n      }\n\n      // Prepare summary for Cloud LLM\n      const summary = (0, _summary.computeAISummary)(state);\n\n      // Get recent chat history for context\n      const recentChat = (state.chat || []).slice(-6).map(msg => ({\n        role: msg.sender === 'user' ? 'user' : 'assistant',\n        content: msg.text\n      }));\n\n      // Add current user message\n      recentChat.push({\n        role: 'user',\n        content: userMessage\n      });\n      const request = {\n        mode: 'chat',\n        language: state.language || 'de',\n        model: 'gpt-4o-mini',\n        summary,\n        messages: recentChat\n      };\n      const result = await callCloudLLM(request);\n      if (result && result.trim()) {\n        console.log('âœ… Cloud LLM reply successful');\n        return result.trim();\n      }\n      throw new Error('Empty response from Cloud LLM');\n    } catch (error) {\n      console.log('ðŸ”„ Cloud LLM failed, falling back to local reply:', error);\n      return await (0, _localChat.localReply)(state, userMessage);\n    }\n  }\n\n  /**\n   * Get current AI status for UI indication\n   */\n  async function getAIStatus() {\n    try {\n      const isConnected = await testCloudConnection();\n      return isConnected ? 'cloud' : 'local';\n    } catch (error) {\n      return 'local';\n    }\n  }\n});","lineCount":189,"map":[[11,2,1,0],[11,6,1,0,"_expoConstants"],[11,20,1,0],[11,23,1,0,"_interopRequireDefault"],[11,45,1,0],[11,46,1,0,"require"],[11,53,1,0],[11,54,1,0,"_dependencyMap"],[11,68,1,0],[12,2,2,0],[12,6,2,0,"_localChat"],[12,16,2,0],[12,19,2,0,"require"],[12,26,2,0],[12,27,2,0,"_dependencyMap"],[12,41,2,0],[13,2,3,0],[13,6,3,0,"_summary"],[13,14,3,0],[13,17,3,0,"require"],[13,24,3,0],[13,25,3,0,"_dependencyMap"],[13,39,3,0],[14,2,17,0],[15,2,18,0],[15,8,18,6,"getEmergentLLMKey"],[15,25,18,23],[15,28,18,26,"getEmergentLLMKey"],[15,29,18,26],[15,34,18,32],[16,4,19,2],[17,4,20,2],[17,11,20,9,"Constants"],[17,33,20,18],[17,34,20,19,"expoConfig"],[17,44,20,29],[17,46,20,31,"extra"],[17,51,20,36],[17,53,20,38,"EXPO_PUBLIC_EMERGENT_LLM_KEY"],[17,81,20,66],[17,85,21,9,"Constants"],[17,107,21,18],[17,108,21,19,"manifest"],[17,116,21,27],[17,118,21,29,"extra"],[17,123,21,34],[17,125,21,36,"EXPO_PUBLIC_EMERGENT_LLM_KEY"],[17,153,21,64],[17,158,22,10],[17,165,22,17,"process"],[17,172,22,24],[17,177,22,29],[17,188,22,40],[17,191,22,43,"process"],[17,198,22,50],[17,199,22,51,"env"],[17,202,22,54],[17,203,22,55,"EXPO_PUBLIC_EMERGENT_LLM_KEY"],[17,231,22,83],[17,234,22,86],[17,238,22,90],[17,239,22,91],[17,243,23,9],[17,275,23,41],[17,276,23,42],[17,277,23,43],[18,2,24,0],[18,3,24,1],[20,2,26,0],[21,0,27,0],[22,0,28,0],[23,2,29,7],[23,17,29,22,"testCloudConnection"],[23,36,29,41,"testCloudConnection"],[23,37,29,41],[23,39,29,62],[24,4,30,2],[24,10,30,8,"EMERGENT_LLM_KEY"],[24,26,30,24],[24,29,30,27,"getEmergentLLMKey"],[24,46,30,44],[24,47,30,45],[24,48,30,46],[25,4,31,2],[25,8,31,6],[25,9,31,7,"EMERGENT_LLM_KEY"],[25,25,31,23],[25,27,31,25],[26,6,32,4,"console"],[26,13,32,11],[26,14,32,12,"warn"],[26,18,32,16],[26,19,32,17],[26,50,32,48],[26,51,32,49],[27,6,33,4],[27,13,33,11],[27,18,33,16],[28,4,34,2],[29,4,36,2],[29,8,36,6],[30,6,37,4],[31,6,38,4],[31,12,38,10,"response"],[31,20,38,18],[31,23,38,21],[31,29,38,27,"fetch"],[31,34,38,32],[31,35,38,33],[31,69,38,67],[31,71,38,69],[32,8,39,6,"method"],[32,14,39,12],[32,16,39,14],[32,21,39,19],[33,8,40,6,"headers"],[33,15,40,13],[33,17,40,15],[34,10,41,8],[34,25,41,23],[34,27,41,25],[34,37,41,35,"EMERGENT_LLM_KEY"],[34,53,41,51],[34,55,41,53],[35,10,42,8],[35,24,42,22],[35,26,42,24],[36,8,43,6],[36,9,43,7],[37,8,44,6,"signal"],[37,14,44,12],[37,16,44,14,"AbortSignal"],[37,27,44,25],[37,28,44,26,"timeout"],[37,35,44,33],[37,36,44,34],[37,40,44,38],[37,41,44,39],[37,42,44,40],[38,6,45,4],[38,7,45,5],[38,8,45,6],[39,6,46,4],[39,13,46,11,"response"],[39,21,46,19],[39,22,46,20,"ok"],[39,24,46,22],[40,4,47,2],[40,5,47,3],[40,6,47,4],[40,13,47,11,"error"],[40,18,47,16],[40,20,47,18],[41,6,48,4,"console"],[41,13,48,11],[41,14,48,12,"warn"],[41,18,48,16],[41,19,48,17],[41,55,48,53],[41,57,48,55,"error"],[41,62,48,60],[41,63,48,61],[42,6,49,4],[42,13,49,11],[42,18,49,16],[43,4,50,2],[44,2,51,0],[46,2,53,0],[47,0,54,0],[48,0,55,0],[49,2,56,7],[49,17,56,22,"callCloudLLM"],[49,29,56,34,"callCloudLLM"],[49,30,56,35,"request"],[49,37,56,60],[49,39,56,79],[50,4,57,2],[50,10,57,8,"EMERGENT_LLM_KEY"],[50,26,57,24],[50,29,57,27,"getEmergentLLMKey"],[50,46,57,44],[50,47,57,45],[50,48,57,46],[51,4,58,2],[51,8,58,6],[51,9,58,7,"EMERGENT_LLM_KEY"],[51,25,58,23],[51,27,58,25],[52,6,59,4],[52,12,59,10],[52,16,59,14,"Error"],[52,21,59,19],[52,22,59,20],[52,53,59,51],[52,54,59,52],[53,4,60,2],[54,4,62,2],[54,8,62,6],[55,6,63,4],[55,12,63,10,"systemPrompt"],[55,24,63,22],[55,27,63,25,"request"],[55,34,63,32],[55,35,63,33,"language"],[55,43,63,41],[55,48,63,46],[55,52,63,50],[55,55,64,8],[55,147,64,100],[55,150,65,8,"request"],[55,157,65,15],[55,158,65,16,"language"],[55,166,65,24],[55,171,65,29],[55,175,65,33],[55,178,66,8],[55,261,66,91],[55,264,67,8],[55,346,67,90],[56,6,69,4],[56,12,69,10,"messages"],[56,20,69,18],[56,23,69,21],[56,24,70,6],[57,8,70,8,"role"],[57,12,70,12],[57,14,70,14],[57,22,70,22],[58,8,70,24,"content"],[58,15,70,31],[58,17,70,33,"systemPrompt"],[59,6,70,46],[59,7,70,47],[59,8,71,5],[60,6,73,4],[60,10,73,8,"request"],[60,17,73,15],[60,18,73,16,"mode"],[60,22,73,20],[60,27,73,25],[60,37,73,35],[60,39,73,37],[61,8,74,6],[62,8,75,6],[62,14,75,12,"summaryText"],[62,25,75,23],[62,28,75,26,"request"],[62,35,75,33],[62,36,75,34,"summary"],[62,43,75,41],[62,46,76,8],[62,60,76,22,"JSON"],[62,64,76,26],[62,65,76,27,"stringify"],[62,74,76,36],[62,75,76,37,"request"],[62,82,76,44],[62,83,76,45,"summary"],[62,90,76,52],[62,92,76,54],[62,96,76,58],[62,98,76,60],[62,99,76,61],[62,100,76,62],[62,102,76,64],[62,105,77,8],[62,129,77,32],[63,8,79,6,"messages"],[63,16,79,14],[63,17,79,15,"push"],[63,21,79,19],[63,22,79,20],[64,10,80,8,"role"],[64,14,80,12],[64,16,80,14],[64,22,80,20],[65,10,81,8,"content"],[65,17,81,15],[65,19,81,17,"request"],[65,26,81,24],[65,27,81,25,"language"],[65,35,81,33],[65,40,81,38],[65,44,81,42],[65,47,82,12],[65,119,82,84,"summaryText"],[65,130,82,95],[65,132,82,97],[65,135,83,12,"request"],[65,142,83,19],[65,143,83,20,"language"],[65,151,83,28],[65,156,83,33],[65,160,83,37],[65,163,84,12],[65,228,84,77,"summaryText"],[65,239,84,88],[65,241,84,90],[65,244,85,12],[65,300,85,68,"summaryText"],[65,311,85,79],[66,8,86,6],[66,9,86,7],[66,10,86,8],[67,6,87,4],[67,7,87,5],[67,13,87,11],[68,8,88,6],[69,8,89,6],[69,12,89,10,"request"],[69,19,89,17],[69,20,89,18,"messages"],[69,28,89,26],[69,30,89,28],[70,10,90,8,"messages"],[70,18,90,16],[70,19,90,17,"push"],[70,23,90,21],[70,24,90,22],[70,27,90,25,"request"],[70,34,90,32],[70,35,90,33,"messages"],[70,43,90,41],[70,44,90,42],[71,8,91,6],[72,6,92,4],[73,6,94,4],[73,12,94,10,"response"],[73,20,94,18],[73,23,94,21],[73,29,94,27,"fetch"],[73,34,94,32],[73,35,94,33],[73,79,94,77],[73,81,94,79],[74,8,95,6,"method"],[74,14,95,12],[74,16,95,14],[74,22,95,20],[75,8,96,6,"headers"],[75,15,96,13],[75,17,96,15],[76,10,97,8],[76,25,97,23],[76,27,97,25],[76,37,97,35,"EMERGENT_LLM_KEY"],[76,53,97,51],[76,55,97,53],[77,10,98,8],[77,24,98,22],[77,26,98,24],[78,8,99,6],[78,9,99,7],[79,8,100,6,"body"],[79,12,100,10],[79,14,100,12,"JSON"],[79,18,100,16],[79,19,100,17,"stringify"],[79,28,100,26],[79,29,100,27],[80,10,101,8,"model"],[80,15,101,13],[80,17,101,15,"request"],[80,24,101,22],[80,25,101,23,"model"],[80,30,101,28],[80,34,101,32],[80,47,101,45],[81,10,102,8,"messages"],[81,18,102,16],[82,10,103,8,"max_tokens"],[82,20,103,18],[82,22,103,20],[82,25,103,23],[83,10,104,8,"temperature"],[83,21,104,19],[83,23,104,21],[84,8,105,6],[84,9,105,7],[84,10,105,8],[85,8,106,6,"signal"],[85,14,106,12],[85,16,106,14,"AbortSignal"],[85,27,106,25],[85,28,106,26,"timeout"],[85,35,106,33],[85,36,106,34],[85,40,106,38],[85,41,106,39],[85,42,106,40],[86,6,107,4],[86,7,107,5],[86,8,107,6],[87,6,109,4],[87,10,109,8],[87,11,109,9,"response"],[87,19,109,17],[87,20,109,18,"ok"],[87,22,109,20],[87,24,109,22],[88,8,110,6],[88,14,110,12,"errorText"],[88,23,110,21],[88,26,110,24],[88,32,110,30,"response"],[88,40,110,38],[88,41,110,39,"text"],[88,45,110,43],[88,46,110,44],[88,47,110,45],[89,8,111,6],[89,14,111,12],[89,18,111,16,"Error"],[89,23,111,21],[89,24,111,22],[89,60,111,58,"response"],[89,68,111,66],[89,69,111,67,"status"],[89,75,111,73],[89,80,111,78,"errorText"],[89,89,111,87],[89,91,111,89],[89,92,111,90],[90,6,112,4],[91,6,114,4],[91,12,114,10,"data"],[91,16,114,14],[91,19,114,17],[91,25,114,23,"response"],[91,33,114,31],[91,34,114,32,"json"],[91,38,114,36],[91,39,114,37],[91,40,114,38],[92,6,115,4],[92,12,115,10,"content"],[92,19,115,17],[92,22,115,20,"data"],[92,26,115,24],[92,27,115,25,"choices"],[92,34,115,32],[92,37,115,35],[92,38,115,36],[92,39,115,37],[92,41,115,39,"message"],[92,48,115,46],[92,50,115,48,"content"],[92,57,115,55],[92,61,115,59],[92,63,115,61],[93,6,117,4],[93,10,117,8],[93,11,117,9,"content"],[93,18,117,16],[93,19,117,17,"trim"],[93,23,117,21],[93,24,117,22],[93,25,117,23],[93,27,117,25],[94,8,118,6],[94,14,118,12],[94,18,118,16,"Error"],[94,23,118,21],[94,24,118,22],[94,56,118,54],[94,57,118,55],[95,6,119,4],[96,6,121,4],[96,13,121,11,"content"],[96,20,121,18],[96,21,121,19,"trim"],[96,25,121,23],[96,26,121,24],[96,27,121,25],[97,4,122,2],[97,5,122,3],[97,6,122,4],[97,13,122,11,"error"],[97,18,122,16],[97,20,122,18],[98,6,123,4,"console"],[98,13,123,11],[98,14,123,12,"warn"],[98,18,123,16],[98,19,123,17],[98,44,123,42],[98,46,123,44,"error"],[98,51,123,49],[98,52,123,50],[99,6,124,4],[99,12,124,10,"error"],[99,17,124,15],[100,4,125,2],[101,2,126,0],[103,2,128,0],[104,0,129,0],[105,0,130,0],[106,2,131,7],[106,17,131,22,"hybridGreeting"],[106,31,131,36,"hybridGreeting"],[106,32,131,37,"state"],[106,37,131,47],[106,39,131,66],[107,4,132,2],[107,8,132,6],[108,6,133,4],[109,6,134,4],[109,12,134,10,"isConnected"],[109,23,134,21],[109,26,134,24],[109,32,134,30,"testCloudConnection"],[109,51,134,49],[109,52,134,50],[109,53,134,51],[110,6,135,4],[110,10,135,8],[110,11,135,9,"isConnected"],[110,22,135,20],[110,24,135,22],[111,8,136,6],[111,14,136,12],[111,18,136,16,"Error"],[111,23,136,21],[111,24,136,22],[111,49,136,47],[111,50,136,48],[112,6,137,4],[114,6,139,4],[115,6,140,4],[115,12,140,10,"summary"],[115,19,140,17],[115,22,140,20],[115,26,140,20,"computeAISummary"],[115,51,140,36],[115,53,140,37,"state"],[115,58,140,42],[115,59,140,43],[116,6,142,4],[116,12,142,10,"request"],[116,19,142,35],[116,22,142,38],[117,8,143,6,"mode"],[117,12,143,10],[117,14,143,12],[117,24,143,22],[118,8,144,6,"language"],[118,16,144,14],[118,18,144,16,"state"],[118,23,144,21],[118,24,144,22,"language"],[118,32,144,30],[118,36,144,34],[118,40,144,38],[119,8,145,6,"model"],[119,13,145,11],[119,15,145,13],[119,28,145,26],[120,8,146,6,"summary"],[121,6,147,4],[121,7,147,5],[122,6,149,4],[122,12,149,10,"result"],[122,18,149,16],[122,21,149,19],[122,27,149,25,"callCloudLLM"],[122,39,149,37],[122,40,149,38,"request"],[122,47,149,45],[122,48,149,46],[123,6,150,4],[123,10,150,8,"result"],[123,16,150,14],[123,20,150,18,"result"],[123,26,150,24],[123,27,150,25,"trim"],[123,31,150,29],[123,32,150,30],[123,33,150,31],[123,35,150,33],[124,8,151,6,"console"],[124,15,151,13],[124,16,151,14,"log"],[124,19,151,17],[124,20,151,18],[124,53,151,51],[124,54,151,52],[125,8,152,6],[125,15,152,13,"result"],[125,21,152,19],[125,22,152,20,"trim"],[125,26,152,24],[125,27,152,25],[125,28,152,26],[126,6,153,4],[127,6,155,4],[127,12,155,10],[127,16,155,14,"Error"],[127,21,155,19],[127,22,155,20],[127,53,155,51],[127,54,155,52],[128,4,156,2],[128,5,156,3],[128,6,156,4],[128,13,156,11,"error"],[128,18,156,16],[128,20,156,18],[129,6,157,4,"console"],[129,13,157,11],[129,14,157,12,"log"],[129,17,157,15],[129,18,157,16],[129,72,157,70],[129,74,157,72,"error"],[129,79,157,77],[129,80,157,78],[130,6,158,4],[130,13,158,11],[130,19,158,17],[130,23,158,17,"localGreeting"],[130,47,158,30],[130,49,158,31,"state"],[130,54,158,36],[130,55,158,37],[131,4,159,2],[132,2,160,0],[134,2,162,0],[135,0,163,0],[136,0,164,0],[137,2,165,7],[137,17,165,22,"hybridReply"],[137,28,165,33,"hybridReply"],[137,29,165,34,"state"],[137,34,165,44],[137,36,165,46,"userMessage"],[137,47,165,65],[137,49,165,84],[138,4,166,2],[138,8,166,6],[139,6,167,4],[140,6,168,4],[140,12,168,10,"isConnected"],[140,23,168,21],[140,26,168,24],[140,32,168,30,"testCloudConnection"],[140,51,168,49],[140,52,168,50],[140,53,168,51],[141,6,169,4],[141,10,169,8],[141,11,169,9,"isConnected"],[141,22,169,20],[141,24,169,22],[142,8,170,6],[142,14,170,12],[142,18,170,16,"Error"],[142,23,170,21],[142,24,170,22],[142,49,170,47],[142,50,170,48],[143,6,171,4],[145,6,173,4],[146,6,174,4],[146,12,174,10,"summary"],[146,19,174,17],[146,22,174,20],[146,26,174,20,"computeAISummary"],[146,51,174,36],[146,53,174,37,"state"],[146,58,174,42],[146,59,174,43],[148,6,176,4],[149,6,177,4],[149,12,177,10,"recentChat"],[149,22,177,20],[149,25,177,23],[149,26,177,24,"state"],[149,31,177,29],[149,32,177,30,"chat"],[149,36,177,34],[149,40,177,38],[149,42,177,40],[149,44,177,42,"slice"],[149,49,177,47],[149,50,177,48],[149,51,177,49],[149,52,177,50],[149,53,177,51],[149,54,177,52,"map"],[149,57,177,55],[149,58,177,57,"msg"],[149,61,177,65],[149,66,177,71],[150,8,178,6,"role"],[150,12,178,10],[150,14,178,12,"msg"],[150,17,178,15],[150,18,178,16,"sender"],[150,24,178,22],[150,29,178,27],[150,35,178,33],[150,38,178,36],[150,44,178,42],[150,47,178,54],[150,58,178,74],[151,8,179,6,"content"],[151,15,179,13],[151,17,179,15,"msg"],[151,20,179,18],[151,21,179,19,"text"],[152,6,180,4],[152,7,180,5],[152,8,180,6],[152,9,180,7],[154,6,182,4],[155,6,183,4,"recentChat"],[155,16,183,14],[155,17,183,15,"push"],[155,21,183,19],[155,22,183,20],[156,8,183,22,"role"],[156,12,183,26],[156,14,183,28],[156,20,183,34],[157,8,183,36,"content"],[157,15,183,43],[157,17,183,45,"userMessage"],[158,6,183,57],[158,7,183,58],[158,8,183,59],[159,6,185,4],[159,12,185,10,"request"],[159,19,185,35],[159,22,185,38],[160,8,186,6,"mode"],[160,12,186,10],[160,14,186,12],[160,20,186,18],[161,8,187,6,"language"],[161,16,187,14],[161,18,187,16,"state"],[161,23,187,21],[161,24,187,22,"language"],[161,32,187,30],[161,36,187,34],[161,40,187,38],[162,8,188,6,"model"],[162,13,188,11],[162,15,188,13],[162,28,188,26],[163,8,189,6,"summary"],[163,15,189,13],[164,8,190,6,"messages"],[164,16,190,14],[164,18,190,16,"recentChat"],[165,6,191,4],[165,7,191,5],[166,6,193,4],[166,12,193,10,"result"],[166,18,193,16],[166,21,193,19],[166,27,193,25,"callCloudLLM"],[166,39,193,37],[166,40,193,38,"request"],[166,47,193,45],[166,48,193,46],[167,6,194,4],[167,10,194,8,"result"],[167,16,194,14],[167,20,194,18,"result"],[167,26,194,24],[167,27,194,25,"trim"],[167,31,194,29],[167,32,194,30],[167,33,194,31],[167,35,194,33],[168,8,195,6,"console"],[168,15,195,13],[168,16,195,14,"log"],[168,19,195,17],[168,20,195,18],[168,50,195,48],[168,51,195,49],[169,8,196,6],[169,15,196,13,"result"],[169,21,196,19],[169,22,196,20,"trim"],[169,26,196,24],[169,27,196,25],[169,28,196,26],[170,6,197,4],[171,6,199,4],[171,12,199,10],[171,16,199,14,"Error"],[171,21,199,19],[171,22,199,20],[171,53,199,51],[171,54,199,52],[172,4,200,2],[172,5,200,3],[172,6,200,4],[172,13,200,11,"error"],[172,18,200,16],[172,20,200,18],[173,6,201,4,"console"],[173,13,201,11],[173,14,201,12,"log"],[173,17,201,15],[173,18,201,16],[173,69,201,67],[173,71,201,69,"error"],[173,76,201,74],[173,77,201,75],[174,6,202,4],[174,13,202,11],[174,19,202,17],[174,23,202,17,"localReply"],[174,44,202,27],[174,46,202,28,"state"],[174,51,202,33],[174,53,202,35,"userMessage"],[174,64,202,46],[174,65,202,47],[175,4,203,2],[176,2,204,0],[178,2,206,0],[179,0,207,0],[180,0,208,0],[181,2,209,7],[181,17,209,22,"getAIStatus"],[181,28,209,33,"getAIStatus"],[181,29,209,33],[181,31,209,76],[182,4,210,2],[182,8,210,6],[183,6,211,4],[183,12,211,10,"isConnected"],[183,23,211,21],[183,26,211,24],[183,32,211,30,"testCloudConnection"],[183,51,211,49],[183,52,211,50],[183,53,211,51],[184,6,212,4],[184,13,212,11,"isConnected"],[184,24,212,22],[184,27,212,25],[184,34,212,32],[184,37,212,35],[184,44,212,42],[185,4,213,2],[185,5,213,3],[185,6,213,4],[185,13,213,11,"error"],[185,18,213,16],[185,20,213,18],[186,6,214,4],[186,13,214,11],[186,20,214,18],[187,4,215,2],[188,2,216,0],[189,0,216,1],[189,3]],"functionMap":{"names":["<global>","getEmergentLLMKey","testCloudConnection","callCloudLLM","hybridGreeting","hybridReply","slice.map$argument_0","getAIStatus"],"mappings":"AAA;0BCiB;CDM;OEK;CFsB;OGK;CHsE;OIK;CJ6B;OKK;wDCY;MDG;CLwB;OOK"}},"type":"js/module"}]}