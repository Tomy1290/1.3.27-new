{"dependencies":[{"name":"date-fns","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":50,"index":50}}],"key":"ebLIABIqb+DSfRpTozlXmEt3BvY=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.displayDate = void 0;\n  exports.parseGermanOrShort = parseGermanOrShort;\n  exports.toKey = void 0;\n  var _dateFns = require(_dependencyMap[0], \"date-fns\");\n  const toKey = d => (0, _dateFns.format)(d, \"yyyy-MM-dd\");\n  exports.toKey = toKey;\n  const displayDate = d => (0, _dateFns.format)(d, \"dd.MM.yyyy\");\n  exports.displayDate = displayDate;\n  function parseGermanOrShort(input) {\n    // Accept TT.MM.JJJJ or TT.MM.JJ\n    const patterns = [\"dd.MM.yyyy\", \"dd.MM.yy\"];\n    for (const p of patterns) {\n      const dt = (0, _dateFns.parse)(input, p, new Date());\n      if ((0, _dateFns.isValid)(dt)) return dt;\n    }\n    return null;\n  }\n});","lineCount":22,"map":[[8,2,1,0],[8,6,1,0,"_dateFns"],[8,14,1,0],[8,17,1,0,"require"],[8,24,1,0],[8,25,1,0,"_dependencyMap"],[8,39,1,0],[9,2,3,7],[9,8,3,13,"toKey"],[9,13,3,18],[9,16,3,22,"d"],[9,17,3,29],[9,21,3,34],[9,25,3,34,"format"],[9,40,3,40],[9,42,3,41,"d"],[9,43,3,42],[9,45,3,44],[9,57,3,56],[9,58,3,57],[10,2,3,58,"exports"],[10,9,3,58],[10,10,3,58,"toKey"],[10,15,3,58],[10,18,3,58,"toKey"],[10,23,3,58],[11,2,4,7],[11,8,4,13,"displayDate"],[11,19,4,24],[11,22,4,28,"d"],[11,23,4,35],[11,27,4,40],[11,31,4,40,"format"],[11,46,4,46],[11,48,4,47,"d"],[11,49,4,48],[11,51,4,50],[11,63,4,62],[11,64,4,63],[12,2,4,64,"exports"],[12,9,4,64],[12,10,4,64,"displayDate"],[12,21,4,64],[12,24,4,64,"displayDate"],[12,35,4,64],[13,2,6,7],[13,11,6,16,"parseGermanOrShort"],[13,29,6,34,"parseGermanOrShort"],[13,30,6,35,"input"],[13,35,6,48],[13,37,6,63],[14,4,7,2],[15,4,8,2],[15,10,8,8,"patterns"],[15,18,8,16],[15,21,8,19],[15,22,8,20],[15,34,8,32],[15,36,8,34],[15,46,8,44],[15,47,8,54],[16,4,9,2],[16,9,9,7],[16,15,9,13,"p"],[16,16,9,14],[16,20,9,18,"patterns"],[16,28,9,26],[16,30,9,28],[17,6,10,4],[17,12,10,10,"dt"],[17,14,10,12],[17,17,10,15],[17,21,10,15,"parse"],[17,35,10,20],[17,37,10,21,"input"],[17,42,10,26],[17,44,10,28,"p"],[17,45,10,29],[17,47,10,31],[17,51,10,35,"Date"],[17,55,10,39],[17,56,10,40],[17,57,10,41],[17,58,10,42],[18,6,11,4],[18,10,11,8],[18,14,11,8,"isValid"],[18,30,11,15],[18,32,11,16,"dt"],[18,34,11,18],[18,35,11,19],[18,37,11,21],[18,44,11,28,"dt"],[18,46,11,30],[19,4,12,2],[20,4,13,2],[20,11,13,9],[20,15,13,13],[21,2,14,0],[22,0,14,1],[22,3]],"functionMap":{"names":["<global>","toKey","displayDate","parseGermanOrShort"],"mappings":"AAA;qBCE,oCD;2BEC,oCF;OGE"}},"type":"js/module"}]}