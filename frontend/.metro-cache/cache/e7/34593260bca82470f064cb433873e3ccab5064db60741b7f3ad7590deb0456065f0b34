{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":14},"end":{"line":2,"column":51,"index":65}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"../commonTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":168},"end":{"line":14,"column":24,"index":260}}],"key":"dQSfS57Pf/C96+Vvd1rktbJJov4=","exportNames":["*"]}},{"name":"../core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":261},"end":{"line":15,"column":77,"index":338}}],"key":"OSA8xsmyvVLjxZOJ/QFvle2ua2I=","exportNames":["*"]}},{"name":"../threads","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":339},"end":{"line":16,"column":44,"index":383}}],"key":"K1yKq+VUoHdgwBY7Fz9TrE1h5uU=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useAnimatedSensor = useAnimatedSensor;\n  var _react = require(_dependencyMap[0]);\n  var _commonTypes = require(_dependencyMap[1]);\n  var _core = require(_dependencyMap[2]);\n  var _threads = require(_dependencyMap[3]);\n  // euler angles are in order ZXY, z = yaw, x = pitch, y = roll\n  // https://github.com/mrdoob/three.js/blob/dev/src/math/Quaternion.js#L237\n  var _worklet_763515177202_init_data = {\n    code: \"function eulerToQuaternion_reactNativeReanimated_useAnimatedSensorTs1(pitch,roll,yaw){const c1=Math.cos(pitch/2);const s1=Math.sin(pitch/2);const c2=Math.cos(roll/2);const s2=Math.sin(roll/2);const c3=Math.cos(yaw/2);const s3=Math.sin(yaw/2);return[s1*c2*c3-c1*s2*s3,c1*s2*c3+s1*c2*s3,c1*c2*s3+s1*s2*c3,c1*c2*c3-s1*s2*s3];}\"\n  };\n  var eulerToQuaternion = function () {\n    var eulerToQuaternion = function (pitch, roll, yaw) {\n      var c1 = Math.cos(pitch / 2);\n      var s1 = Math.sin(pitch / 2);\n      var c2 = Math.cos(roll / 2);\n      var s2 = Math.sin(roll / 2);\n      var c3 = Math.cos(yaw / 2);\n      var s3 = Math.sin(yaw / 2);\n      return [s1 * c2 * c3 - c1 * s2 * s3, c1 * s2 * c3 + s1 * c2 * s3, c1 * c2 * s3 + s1 * s2 * c3, c1 * c2 * c3 - s1 * s2 * s3];\n    };\n    eulerToQuaternion.__closure = {};\n    eulerToQuaternion.__workletHash = 763515177202;\n    eulerToQuaternion.__initData = _worklet_763515177202_init_data;\n    return eulerToQuaternion;\n  }();\n  var _worklet_17236990978851_init_data = {\n    code: \"function adjustRotationToInterfaceOrientation_reactNativeReanimated_useAnimatedSensorTs2(data){const{InterfaceOrientation,eulerToQuaternion}=this.__closure;const{interfaceOrientation:interfaceOrientation,pitch:pitch,roll:roll,yaw:yaw}=data;if(interfaceOrientation===InterfaceOrientation.ROTATION_90){data.pitch=roll;data.roll=-pitch;data.yaw=yaw-Math.PI/2;}else if(interfaceOrientation===InterfaceOrientation.ROTATION_270){data.pitch=-roll;data.roll=pitch;data.yaw=yaw+Math.PI/2;}else if(interfaceOrientation===InterfaceOrientation.ROTATION_180){data.pitch*=-1;data.roll*=-1;data.yaw*=-1;}const q=eulerToQuaternion(data.pitch,data.roll,data.yaw);data.qx=q[0];data.qy=q[1];data.qz=q[2];data.qw=q[3];return data;}\"\n  };\n  var adjustRotationToInterfaceOrientation = function () {\n    var adjustRotationToInterfaceOrientation = function (data) {\n      var interfaceOrientation = data.interfaceOrientation,\n        pitch = data.pitch,\n        roll = data.roll,\n        yaw = data.yaw;\n      if (interfaceOrientation === _commonTypes.InterfaceOrientation.ROTATION_90) {\n        data.pitch = roll;\n        data.roll = -pitch;\n        data.yaw = yaw - Math.PI / 2;\n      } else if (interfaceOrientation === _commonTypes.InterfaceOrientation.ROTATION_270) {\n        data.pitch = -roll;\n        data.roll = pitch;\n        data.yaw = yaw + Math.PI / 2;\n      } else if (interfaceOrientation === _commonTypes.InterfaceOrientation.ROTATION_180) {\n        data.pitch *= -1;\n        data.roll *= -1;\n        data.yaw *= -1;\n      }\n      var q = eulerToQuaternion(data.pitch, data.roll, data.yaw);\n      data.qx = q[0];\n      data.qy = q[1];\n      data.qz = q[2];\n      data.qw = q[3];\n      return data;\n    };\n    adjustRotationToInterfaceOrientation.__closure = {\n      InterfaceOrientation: _commonTypes.InterfaceOrientation,\n      eulerToQuaternion\n    };\n    adjustRotationToInterfaceOrientation.__workletHash = 17236990978851;\n    adjustRotationToInterfaceOrientation.__initData = _worklet_17236990978851_init_data;\n    return adjustRotationToInterfaceOrientation;\n  }();\n  var _worklet_16590673686333_init_data = {\n    code: \"function adjustVectorToInterfaceOrientation_reactNativeReanimated_useAnimatedSensorTs3(data){const{InterfaceOrientation}=this.__closure;const{interfaceOrientation:interfaceOrientation,x:x,y:y}=data;if(interfaceOrientation===InterfaceOrientation.ROTATION_90){data.x=-y;data.y=x;}else if(interfaceOrientation===InterfaceOrientation.ROTATION_270){data.x=y;data.y=-x;}else if(interfaceOrientation===InterfaceOrientation.ROTATION_180){data.x*=-1;data.y*=-1;}return data;}\"\n  };\n  var adjustVectorToInterfaceOrientation = function () {\n    var adjustVectorToInterfaceOrientation = function (data) {\n      var interfaceOrientation = data.interfaceOrientation,\n        x = data.x,\n        y = data.y;\n      if (interfaceOrientation === _commonTypes.InterfaceOrientation.ROTATION_90) {\n        data.x = -y;\n        data.y = x;\n      } else if (interfaceOrientation === _commonTypes.InterfaceOrientation.ROTATION_270) {\n        data.x = y;\n        data.y = -x;\n      } else if (interfaceOrientation === _commonTypes.InterfaceOrientation.ROTATION_180) {\n        data.x *= -1;\n        data.y *= -1;\n      }\n      return data;\n    };\n    adjustVectorToInterfaceOrientation.__closure = {\n      InterfaceOrientation: _commonTypes.InterfaceOrientation\n    };\n    adjustVectorToInterfaceOrientation.__workletHash = 16590673686333;\n    adjustVectorToInterfaceOrientation.__initData = _worklet_16590673686333_init_data;\n    return adjustVectorToInterfaceOrientation;\n  }();\n  /**\n   * Lets you create animations based on data from the device's sensors.\n   *\n   * @param sensorType - Type of the sensor to use. Configured with\n   *   {@link SensorType} enum.\n   * @param config - The sensor configuration - {@link SensorConfig}.\n   * @returns An object containing the sensor measurements [shared\n   *   value](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#shared-value)\n   *   and a function to unregister the sensor\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/device/useAnimatedSensor\n   */\n  var _worklet_2154297770743_init_data = {\n    code: \"function reactNativeReanimated_useAnimatedSensorTs4(data){const{adjustToInterfaceOrientation,sensorType,SensorType,adjustRotationToInterfaceOrientation,adjustVectorToInterfaceOrientation,sensorData,callMicrotasks}=this.__closure;if(adjustToInterfaceOrientation){if(sensorType===SensorType.ROTATION){data=adjustRotationToInterfaceOrientation(data);}else{data=adjustVectorToInterfaceOrientation(data);}}sensorData.value=data;callMicrotasks();}\"\n  };\n  function useAnimatedSensor(sensorType, userConfig) {\n    var userConfigRef = (0, _react.useRef)(userConfig);\n    var hasConfigChanged = userConfigRef.current?.adjustToInterfaceOrientation !== userConfig?.adjustToInterfaceOrientation || userConfigRef.current?.interval !== userConfig?.interval || userConfigRef.current?.iosReferenceFrame !== userConfig?.iosReferenceFrame;\n    if (hasConfigChanged) {\n      userConfigRef.current = {\n        ...userConfig\n      };\n    }\n    var config = (0, _react.useMemo)(() => ({\n      interval: 'auto',\n      adjustToInterfaceOrientation: true,\n      iosReferenceFrame: _commonTypes.IOSReferenceFrame.Auto,\n      ...userConfigRef.current\n    }), [userConfigRef.current]);\n    var ref = (0, _react.useRef)({\n      sensor: (0, _core.initializeSensor)(sensorType, config),\n      unregister: () => {\n        // NOOP\n      },\n      isAvailable: false,\n      config\n    });\n    (0, _react.useEffect)(() => {\n      ref.current = {\n        sensor: (0, _core.initializeSensor)(sensorType, config),\n        unregister: () => {\n          // NOOP\n        },\n        isAvailable: false,\n        config\n      };\n      var sensorData = ref.current.sensor;\n      var adjustToInterfaceOrientation = ref.current.config.adjustToInterfaceOrientation;\n      var id = (0, _core.registerSensor)(sensorType, config, function () {\n        var reactNativeReanimated_useAnimatedSensorTs4 = function (data) {\n          if (adjustToInterfaceOrientation) {\n            if (sensorType === _commonTypes.SensorType.ROTATION) {\n              data = adjustRotationToInterfaceOrientation(data);\n            } else {\n              data = adjustVectorToInterfaceOrientation(data);\n            }\n          }\n          sensorData.value = data;\n          (0, _threads.callMicrotasks)();\n        };\n        reactNativeReanimated_useAnimatedSensorTs4.__closure = {\n          adjustToInterfaceOrientation,\n          sensorType,\n          SensorType: _commonTypes.SensorType,\n          adjustRotationToInterfaceOrientation,\n          adjustVectorToInterfaceOrientation,\n          sensorData,\n          callMicrotasks: _threads.callMicrotasks\n        };\n        reactNativeReanimated_useAnimatedSensorTs4.__workletHash = 2154297770743;\n        reactNativeReanimated_useAnimatedSensorTs4.__initData = _worklet_2154297770743_init_data;\n        return reactNativeReanimated_useAnimatedSensorTs4;\n      }());\n      if (id !== -1) {\n        // if sensor is available\n        ref.current.unregister = () => (0, _core.unregisterSensor)(id);\n        ref.current.isAvailable = true;\n      } else {\n        // if sensor is unavailable\n        ref.current.unregister = () => {\n          // NOOP\n        };\n        ref.current.isAvailable = false;\n      }\n      return () => {\n        ref.current.unregister();\n      };\n    }, [sensorType, config]);\n    return ref.current;\n  }\n});","lineCount":185,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"useAnimatedSensor"],[7,27,1,13],[7,30,1,13,"useAnimatedSensor"],[7,47,1,13],[8,2,2,0],[8,6,2,0,"_react"],[8,12,2,0],[8,15,2,0,"require"],[8,22,2,0],[8,23,2,0,"_dependencyMap"],[8,37,2,0],[9,2,10,0],[9,6,10,0,"_commonTypes"],[9,18,10,0],[9,21,10,0,"require"],[9,28,10,0],[9,29,10,0,"_dependencyMap"],[9,43,10,0],[10,2,15,0],[10,6,15,0,"_core"],[10,11,15,0],[10,14,15,0,"require"],[10,21,15,0],[10,22,15,0,"_dependencyMap"],[10,36,15,0],[11,2,16,0],[11,6,16,0,"_threads"],[11,14,16,0],[11,17,16,0,"require"],[11,24,16,0],[11,25,16,0,"_dependencyMap"],[11,39,16,0],[12,2,18,0],[13,2,19,0],[14,2,19,0],[14,6,19,0,"_worklet_763515177202_init_data"],[14,37,19,0],[15,4,19,0,"code"],[15,8,19,0],[16,2,19,0],[17,2,19,0],[17,6,19,0,"eulerToQuaternion"],[17,23,19,0],[17,26,20,0],[18,4,20,0],[18,8,20,0,"eulerToQuaternion"],[18,25,20,0],[18,37,20,0,"eulerToQuaternion"],[18,38,20,27,"pitch"],[18,43,20,40],[18,45,20,42,"roll"],[18,49,20,54],[18,51,20,56,"yaw"],[18,54,20,67],[18,56,20,69],[19,6,22,2],[19,10,22,8,"c1"],[19,12,22,10],[19,15,22,13,"Math"],[19,19,22,17],[19,20,22,18,"cos"],[19,23,22,21],[19,24,22,22,"pitch"],[19,29,22,27],[19,32,22,30],[19,33,22,31],[19,34,22,32],[20,6,23,2],[20,10,23,8,"s1"],[20,12,23,10],[20,15,23,13,"Math"],[20,19,23,17],[20,20,23,18,"sin"],[20,23,23,21],[20,24,23,22,"pitch"],[20,29,23,27],[20,32,23,30],[20,33,23,31],[20,34,23,32],[21,6,24,2],[21,10,24,8,"c2"],[21,12,24,10],[21,15,24,13,"Math"],[21,19,24,17],[21,20,24,18,"cos"],[21,23,24,21],[21,24,24,22,"roll"],[21,28,24,26],[21,31,24,29],[21,32,24,30],[21,33,24,31],[22,6,25,2],[22,10,25,8,"s2"],[22,12,25,10],[22,15,25,13,"Math"],[22,19,25,17],[22,20,25,18,"sin"],[22,23,25,21],[22,24,25,22,"roll"],[22,28,25,26],[22,31,25,29],[22,32,25,30],[22,33,25,31],[23,6,26,2],[23,10,26,8,"c3"],[23,12,26,10],[23,15,26,13,"Math"],[23,19,26,17],[23,20,26,18,"cos"],[23,23,26,21],[23,24,26,22,"yaw"],[23,27,26,25],[23,30,26,28],[23,31,26,29],[23,32,26,30],[24,6,27,2],[24,10,27,8,"s3"],[24,12,27,10],[24,15,27,13,"Math"],[24,19,27,17],[24,20,27,18,"sin"],[24,23,27,21],[24,24,27,22,"yaw"],[24,27,27,25],[24,30,27,28],[24,31,27,29],[24,32,27,30],[25,6,29,2],[25,13,29,9],[25,14,30,4,"s1"],[25,16,30,6],[25,19,30,9,"c2"],[25,21,30,11],[25,24,30,14,"c3"],[25,26,30,16],[25,29,30,19,"c1"],[25,31,30,21],[25,34,30,24,"s2"],[25,36,30,26],[25,39,30,29,"s3"],[25,41,30,31],[25,43,31,4,"c1"],[25,45,31,6],[25,48,31,9,"s2"],[25,50,31,11],[25,53,31,14,"c3"],[25,55,31,16],[25,58,31,19,"s1"],[25,60,31,21],[25,63,31,24,"c2"],[25,65,31,26],[25,68,31,29,"s3"],[25,70,31,31],[25,72,32,4,"c1"],[25,74,32,6],[25,77,32,9,"c2"],[25,79,32,11],[25,82,32,14,"s3"],[25,84,32,16],[25,87,32,19,"s1"],[25,89,32,21],[25,92,32,24,"s2"],[25,94,32,26],[25,97,32,29,"c3"],[25,99,32,31],[25,101,33,4,"c1"],[25,103,33,6],[25,106,33,9,"c2"],[25,108,33,11],[25,111,33,14,"c3"],[25,113,33,16],[25,116,33,19,"s1"],[25,118,33,21],[25,121,33,24,"s2"],[25,123,33,26],[25,126,33,29,"s3"],[25,128,33,31],[25,129,34,3],[26,4,35,0],[26,5,35,1],[27,4,35,1,"eulerToQuaternion"],[27,21,35,1],[27,22,35,1,"__closure"],[27,31,35,1],[28,4,35,1,"eulerToQuaternion"],[28,21,35,1],[28,22,35,1,"__workletHash"],[28,35,35,1],[29,4,35,1,"eulerToQuaternion"],[29,21,35,1],[29,22,35,1,"__initData"],[29,32,35,1],[29,35,35,1,"_worklet_763515177202_init_data"],[29,66,35,1],[30,4,35,1],[30,11,35,1,"eulerToQuaternion"],[30,28,35,1],[31,2,35,1],[31,3,20,0],[32,2,20,0],[32,6,20,0,"_worklet_17236990978851_init_data"],[32,39,20,0],[33,4,20,0,"code"],[33,8,20,0],[34,2,20,0],[35,2,20,0],[35,6,20,0,"adjustRotationToInterfaceOrientation"],[35,42,20,0],[35,45,37,0],[36,4,37,0],[36,8,37,0,"adjustRotationToInterfaceOrientation"],[36,44,37,0],[36,56,37,0,"adjustRotationToInterfaceOrientation"],[36,57,37,46,"data"],[36,61,37,65],[36,63,37,67],[37,6,39,2],[37,10,39,10,"interfaceOrientation"],[37,30,39,30],[37,33,39,53,"data"],[37,37,39,57],[37,38,39,10,"interfaceOrientation"],[37,58,39,30],[38,8,39,32,"pitch"],[38,13,39,37],[38,16,39,53,"data"],[38,20,39,57],[38,21,39,32,"pitch"],[38,26,39,37],[39,8,39,39,"roll"],[39,12,39,43],[39,15,39,53,"data"],[39,19,39,57],[39,20,39,39,"roll"],[39,24,39,43],[40,8,39,45,"yaw"],[40,11,39,48],[40,14,39,53,"data"],[40,18,39,57],[40,19,39,45,"yaw"],[40,22,39,48],[41,6,40,2],[41,10,40,6,"interfaceOrientation"],[41,30,40,26],[41,35,40,31,"InterfaceOrientation"],[41,68,40,51],[41,69,40,52,"ROTATION_90"],[41,80,40,63],[41,82,40,65],[42,8,41,4,"data"],[42,12,41,8],[42,13,41,9,"pitch"],[42,18,41,14],[42,21,41,17,"roll"],[42,25,41,21],[43,8,42,4,"data"],[43,12,42,8],[43,13,42,9,"roll"],[43,17,42,13],[43,20,42,16],[43,21,42,17,"pitch"],[43,26,42,22],[44,8,43,4,"data"],[44,12,43,8],[44,13,43,9,"yaw"],[44,16,43,12],[44,19,43,15,"yaw"],[44,22,43,18],[44,25,43,21,"Math"],[44,29,43,25],[44,30,43,26,"PI"],[44,32,43,28],[44,35,43,31],[44,36,43,32],[45,6,44,2],[45,7,44,3],[45,13,44,9],[45,17,44,13,"interfaceOrientation"],[45,37,44,33],[45,42,44,38,"InterfaceOrientation"],[45,75,44,58],[45,76,44,59,"ROTATION_270"],[45,88,44,71],[45,90,44,73],[46,8,45,4,"data"],[46,12,45,8],[46,13,45,9,"pitch"],[46,18,45,14],[46,21,45,17],[46,22,45,18,"roll"],[46,26,45,22],[47,8,46,4,"data"],[47,12,46,8],[47,13,46,9,"roll"],[47,17,46,13],[47,20,46,16,"pitch"],[47,25,46,21],[48,8,47,4,"data"],[48,12,47,8],[48,13,47,9,"yaw"],[48,16,47,12],[48,19,47,15,"yaw"],[48,22,47,18],[48,25,47,21,"Math"],[48,29,47,25],[48,30,47,26,"PI"],[48,32,47,28],[48,35,47,31],[48,36,47,32],[49,6,48,2],[49,7,48,3],[49,13,48,9],[49,17,48,13,"interfaceOrientation"],[49,37,48,33],[49,42,48,38,"InterfaceOrientation"],[49,75,48,58],[49,76,48,59,"ROTATION_180"],[49,88,48,71],[49,90,48,73],[50,8,49,4,"data"],[50,12,49,8],[50,13,49,9,"pitch"],[50,18,49,14],[50,24,49,20],[51,8,50,4,"data"],[51,12,50,8],[51,13,50,9,"roll"],[51,17,50,13],[51,23,50,19],[52,8,51,4,"data"],[52,12,51,8],[52,13,51,9,"yaw"],[52,16,51,12],[52,22,51,18],[53,6,52,2],[54,6,54,2],[54,10,54,8,"q"],[54,11,54,9],[54,14,54,12,"eulerToQuaternion"],[54,31,54,29],[54,32,54,30,"data"],[54,36,54,34],[54,37,54,35,"pitch"],[54,42,54,40],[54,44,54,42,"data"],[54,48,54,46],[54,49,54,47,"roll"],[54,53,54,51],[54,55,54,53,"data"],[54,59,54,57],[54,60,54,58,"yaw"],[54,63,54,61],[54,64,54,62],[55,6,55,2,"data"],[55,10,55,6],[55,11,55,7,"qx"],[55,13,55,9],[55,16,55,12,"q"],[55,17,55,13],[55,18,55,14],[55,19,55,15],[55,20,55,16],[56,6,56,2,"data"],[56,10,56,6],[56,11,56,7,"qy"],[56,13,56,9],[56,16,56,12,"q"],[56,17,56,13],[56,18,56,14],[56,19,56,15],[56,20,56,16],[57,6,57,2,"data"],[57,10,57,6],[57,11,57,7,"qz"],[57,13,57,9],[57,16,57,12,"q"],[57,17,57,13],[57,18,57,14],[57,19,57,15],[57,20,57,16],[58,6,58,2,"data"],[58,10,58,6],[58,11,58,7,"qw"],[58,13,58,9],[58,16,58,12,"q"],[58,17,58,13],[58,18,58,14],[58,19,58,15],[58,20,58,16],[59,6,59,2],[59,13,59,9,"data"],[59,17,59,13],[60,4,60,0],[60,5,60,1],[61,4,60,1,"adjustRotationToInterfaceOrientation"],[61,40,60,1],[61,41,60,1,"__closure"],[61,50,60,1],[62,6,60,1,"InterfaceOrientation"],[62,26,60,1],[62,28,40,31,"InterfaceOrientation"],[62,61,40,51],[63,6,40,51,"eulerToQuaternion"],[64,4,40,51],[65,4,40,51,"adjustRotationToInterfaceOrientation"],[65,40,40,51],[65,41,40,51,"__workletHash"],[65,54,40,51],[66,4,40,51,"adjustRotationToInterfaceOrientation"],[66,40,40,51],[66,41,40,51,"__initData"],[66,51,40,51],[66,54,40,51,"_worklet_17236990978851_init_data"],[66,87,40,51],[67,4,40,51],[67,11,40,51,"adjustRotationToInterfaceOrientation"],[67,47,40,51],[68,2,40,51],[68,3,37,0],[69,2,37,0],[69,6,37,0,"_worklet_16590673686333_init_data"],[69,39,37,0],[70,4,37,0,"code"],[70,8,37,0],[71,2,37,0],[72,2,37,0],[72,6,37,0,"adjustVectorToInterfaceOrientation"],[72,40,37,0],[72,43,62,0],[73,4,62,0],[73,8,62,0,"adjustVectorToInterfaceOrientation"],[73,42,62,0],[73,54,62,0,"adjustVectorToInterfaceOrientation"],[73,55,62,44,"data"],[73,59,62,57],[73,61,62,59],[74,6,64,2],[74,10,64,10,"interfaceOrientation"],[74,30,64,30],[74,33,64,41,"data"],[74,37,64,45],[74,38,64,10,"interfaceOrientation"],[74,58,64,30],[75,8,64,32,"x"],[75,9,64,33],[75,12,64,41,"data"],[75,16,64,45],[75,17,64,32,"x"],[75,18,64,33],[76,8,64,35,"y"],[76,9,64,36],[76,12,64,41,"data"],[76,16,64,45],[76,17,64,35,"y"],[76,18,64,36],[77,6,65,2],[77,10,65,6,"interfaceOrientation"],[77,30,65,26],[77,35,65,31,"InterfaceOrientation"],[77,68,65,51],[77,69,65,52,"ROTATION_90"],[77,80,65,63],[77,82,65,65],[78,8,66,4,"data"],[78,12,66,8],[78,13,66,9,"x"],[78,14,66,10],[78,17,66,13],[78,18,66,14,"y"],[78,19,66,15],[79,8,67,4,"data"],[79,12,67,8],[79,13,67,9,"y"],[79,14,67,10],[79,17,67,13,"x"],[79,18,67,14],[80,6,68,2],[80,7,68,3],[80,13,68,9],[80,17,68,13,"interfaceOrientation"],[80,37,68,33],[80,42,68,38,"InterfaceOrientation"],[80,75,68,58],[80,76,68,59,"ROTATION_270"],[80,88,68,71],[80,90,68,73],[81,8,69,4,"data"],[81,12,69,8],[81,13,69,9,"x"],[81,14,69,10],[81,17,69,13,"y"],[81,18,69,14],[82,8,70,4,"data"],[82,12,70,8],[82,13,70,9,"y"],[82,14,70,10],[82,17,70,13],[82,18,70,14,"x"],[82,19,70,15],[83,6,71,2],[83,7,71,3],[83,13,71,9],[83,17,71,13,"interfaceOrientation"],[83,37,71,33],[83,42,71,38,"InterfaceOrientation"],[83,75,71,58],[83,76,71,59,"ROTATION_180"],[83,88,71,71],[83,90,71,73],[84,8,72,4,"data"],[84,12,72,8],[84,13,72,9,"x"],[84,14,72,10],[84,20,72,16],[85,8,73,4,"data"],[85,12,73,8],[85,13,73,9,"y"],[85,14,73,10],[85,20,73,16],[86,6,74,2],[87,6,75,2],[87,13,75,9,"data"],[87,17,75,13],[88,4,76,0],[88,5,76,1],[89,4,76,1,"adjustVectorToInterfaceOrientation"],[89,38,76,1],[89,39,76,1,"__closure"],[89,48,76,1],[90,6,76,1,"InterfaceOrientation"],[90,26,76,1],[90,28,65,31,"InterfaceOrientation"],[91,4,65,51],[92,4,65,51,"adjustVectorToInterfaceOrientation"],[92,38,65,51],[92,39,65,51,"__workletHash"],[92,52,65,51],[93,4,65,51,"adjustVectorToInterfaceOrientation"],[93,38,65,51],[93,39,65,51,"__initData"],[93,49,65,51],[93,52,65,51,"_worklet_16590673686333_init_data"],[93,85,65,51],[94,4,65,51],[94,11,65,51,"adjustVectorToInterfaceOrientation"],[94,45,65,51],[95,2,65,51],[95,3,62,0],[96,2,78,0],[97,0,79,0],[98,0,80,0],[99,0,81,0],[100,0,82,0],[101,0,83,0],[102,0,84,0],[103,0,85,0],[104,0,86,0],[105,0,87,0],[106,0,88,0],[107,2,78,0],[107,6,78,0,"_worklet_2154297770743_init_data"],[107,38,78,0],[108,4,78,0,"code"],[108,8,78,0],[109,2,78,0],[110,2,97,7],[110,11,97,16,"useAnimatedSensor"],[110,28,97,33,"useAnimatedSensor"],[110,29,98,2,"sensorType"],[110,39,98,24],[110,41,99,2,"userConfig"],[110,51,99,36],[110,53,100,59],[111,4,101,2],[111,8,101,8,"userConfigRef"],[111,21,101,21],[111,24,101,24],[111,28,101,24,"useRef"],[111,41,101,30],[111,43,101,31,"userConfig"],[111,53,101,41],[111,54,101,42],[112,4,103,2],[112,8,103,8,"hasConfigChanged"],[112,24,103,24],[112,27,104,4,"userConfigRef"],[112,40,104,17],[112,41,104,18,"current"],[112,48,104,25],[112,50,104,27,"adjustToInterfaceOrientation"],[112,78,104,55],[112,83,105,6,"userConfig"],[112,93,105,16],[112,95,105,18,"adjustToInterfaceOrientation"],[112,123,105,46],[112,127,106,4,"userConfigRef"],[112,140,106,17],[112,141,106,18,"current"],[112,148,106,25],[112,150,106,27,"interval"],[112,158,106,35],[112,163,106,40,"userConfig"],[112,173,106,50],[112,175,106,52,"interval"],[112,183,106,60],[112,187,107,4,"userConfigRef"],[112,200,107,17],[112,201,107,18,"current"],[112,208,107,25],[112,210,107,27,"iosReferenceFrame"],[112,227,107,44],[112,232,107,49,"userConfig"],[112,242,107,59],[112,244,107,61,"iosReferenceFrame"],[112,261,107,78],[113,4,109,2],[113,8,109,6,"hasConfigChanged"],[113,24,109,22],[113,26,109,24],[114,6,110,4,"userConfigRef"],[114,19,110,17],[114,20,110,18,"current"],[114,27,110,25],[114,30,110,28],[115,8,110,30],[115,11,110,33,"userConfig"],[116,6,110,44],[116,7,110,45],[117,4,111,2],[118,4,113,2],[118,8,113,8,"config"],[118,14,113,28],[118,17,113,31],[118,21,113,31,"useMemo"],[118,35,113,38],[118,37,114,4],[118,44,114,11],[119,6,115,6,"interval"],[119,14,115,14],[119,16,115,16],[119,22,115,22],[120,6,116,6,"adjustToInterfaceOrientation"],[120,34,116,34],[120,36,116,36],[120,40,116,40],[121,6,117,6,"iosReferenceFrame"],[121,23,117,23],[121,25,117,25,"IOSReferenceFrame"],[121,55,117,42],[121,56,117,43,"Auto"],[121,60,117,47],[122,6,118,6],[122,9,118,9,"userConfigRef"],[122,22,118,22],[122,23,118,23,"current"],[123,4,119,4],[123,5,119,5],[123,6,119,6],[123,8,120,4],[123,9,120,5,"userConfigRef"],[123,22,120,18],[123,23,120,19,"current"],[123,30,120,26],[123,31,121,2],[123,32,121,3],[124,4,123,2],[124,8,123,8,"ref"],[124,11,123,11],[124,14,123,14],[124,18,123,14,"useRef"],[124,31,123,20],[124,33,123,62],[125,6,124,4,"sensor"],[125,12,124,10],[125,14,124,12],[125,18,124,12,"initializeSensor"],[125,40,124,28],[125,42,124,29,"sensorType"],[125,52,124,39],[125,54,124,41,"config"],[125,60,124,47],[125,61,124,48],[126,6,125,4,"unregister"],[126,16,125,14],[126,18,125,16,"unregister"],[126,19,125,16],[126,24,125,22],[127,8,126,6],[128,6,126,6],[128,7,127,5],[129,6,128,4,"isAvailable"],[129,17,128,15],[129,19,128,17],[129,24,128,22],[130,6,129,4,"config"],[131,4,130,2],[131,5,130,3],[131,6,130,4],[132,4,132,2],[132,8,132,2,"useEffect"],[132,24,132,11],[132,26,132,12],[132,32,132,18],[133,6,133,4,"ref"],[133,9,133,7],[133,10,133,8,"current"],[133,17,133,15],[133,20,133,18],[134,8,134,6,"sensor"],[134,14,134,12],[134,16,134,14],[134,20,134,14,"initializeSensor"],[134,42,134,30],[134,44,134,31,"sensorType"],[134,54,134,41],[134,56,134,43,"config"],[134,62,134,49],[134,63,134,50],[135,8,135,6,"unregister"],[135,18,135,16],[135,20,135,18,"unregister"],[135,21,135,18],[135,26,135,24],[136,10,136,8],[137,8,136,8],[137,9,137,7],[138,8,138,6,"isAvailable"],[138,19,138,17],[138,21,138,19],[138,26,138,24],[139,8,139,6,"config"],[140,6,140,4],[140,7,140,5],[141,6,142,4],[141,10,142,10,"sensorData"],[141,20,142,20],[141,23,142,23,"ref"],[141,26,142,26],[141,27,142,27,"current"],[141,34,142,34],[141,35,142,35,"sensor"],[141,41,142,41],[142,6,143,4],[142,10,143,10,"adjustToInterfaceOrientation"],[142,38,143,38],[142,41,144,6,"ref"],[142,44,144,9],[142,45,144,10,"current"],[142,52,144,17],[142,53,144,18,"config"],[142,59,144,24],[142,60,144,25,"adjustToInterfaceOrientation"],[142,88,144,53],[143,6,146,4],[143,10,146,10,"id"],[143,12,146,12],[143,15,146,15],[143,19,146,15,"registerSensor"],[143,39,146,29],[143,41,146,30,"sensorType"],[143,51,146,40],[143,53,146,42,"config"],[143,59,146,48],[143,61,146,50],[144,8,146,50],[144,12,146,50,"reactNativeReanimated_useAnimatedSensorTs4"],[144,54,146,50],[144,66,146,50,"reactNativeReanimated_useAnimatedSensorTs4"],[144,67,146,51,"data"],[144,71,146,55],[144,73,146,60],[145,10,148,6],[145,14,148,10,"adjustToInterfaceOrientation"],[145,42,148,38],[145,44,148,40],[146,12,149,8],[146,16,149,12,"sensorType"],[146,26,149,22],[146,31,149,27,"SensorType"],[146,54,149,37],[146,55,149,38,"ROTATION"],[146,63,149,46],[146,65,149,48],[147,14,150,10,"data"],[147,18,150,14],[147,21,150,17,"adjustRotationToInterfaceOrientation"],[147,57,150,53],[147,58,150,54,"data"],[147,62,150,75],[147,63,150,76],[148,12,151,8],[148,13,151,9],[148,19,151,15],[149,14,152,10,"data"],[149,18,152,14],[149,21,152,17,"adjustVectorToInterfaceOrientation"],[149,55,152,51],[149,56,152,52,"data"],[149,60,152,67],[149,61,152,68],[150,12,153,8],[151,10,154,6],[152,10,155,6,"sensorData"],[152,20,155,16],[152,21,155,17,"value"],[152,26,155,22],[152,29,155,25,"data"],[152,33,155,29],[153,10,156,6],[153,14,156,6,"callMicrotasks"],[153,37,156,20],[153,39,156,21],[153,40,156,22],[154,8,157,4],[154,9,157,5],[155,8,157,5,"reactNativeReanimated_useAnimatedSensorTs4"],[155,50,157,5],[155,51,157,5,"__closure"],[155,60,157,5],[156,10,157,5,"adjustToInterfaceOrientation"],[156,38,157,5],[157,10,157,5,"sensorType"],[157,20,157,5],[158,10,157,5,"SensorType"],[158,20,157,5],[158,22,149,27,"SensorType"],[158,45,149,37],[159,10,149,37,"adjustRotationToInterfaceOrientation"],[159,46,149,37],[160,10,149,37,"adjustVectorToInterfaceOrientation"],[160,44,149,37],[161,10,149,37,"sensorData"],[161,20,149,37],[162,10,149,37,"callMicrotasks"],[162,24,149,37],[162,26,156,6,"callMicrotasks"],[163,8,156,20],[164,8,156,20,"reactNativeReanimated_useAnimatedSensorTs4"],[164,50,156,20],[164,51,156,20,"__workletHash"],[164,64,156,20],[165,8,156,20,"reactNativeReanimated_useAnimatedSensorTs4"],[165,50,156,20],[165,51,156,20,"__initData"],[165,61,156,20],[165,64,156,20,"_worklet_2154297770743_init_data"],[165,96,156,20],[166,8,156,20],[166,15,156,20,"reactNativeReanimated_useAnimatedSensorTs4"],[166,57,156,20],[167,6,156,20],[167,7,146,50],[167,9,157,5],[167,10,157,6],[168,6,159,4],[168,10,159,8,"id"],[168,12,159,10],[168,19,159,17],[168,21,159,19],[169,8,160,6],[170,8,161,6,"ref"],[170,11,161,9],[170,12,161,10,"current"],[170,19,161,17],[170,20,161,18,"unregister"],[170,30,161,28],[170,33,161,31],[170,39,161,37],[170,43,161,37,"unregisterSensor"],[170,65,161,53],[170,67,161,54,"id"],[170,69,161,56],[170,70,161,57],[171,8,162,6,"ref"],[171,11,162,9],[171,12,162,10,"current"],[171,19,162,17],[171,20,162,18,"isAvailable"],[171,31,162,29],[171,34,162,32],[171,38,162,36],[172,6,163,4],[172,7,163,5],[172,13,163,11],[173,8,164,6],[174,8,165,6,"ref"],[174,11,165,9],[174,12,165,10,"current"],[174,19,165,17],[174,20,165,18,"unregister"],[174,30,165,28],[174,33,165,31],[174,39,165,37],[175,10,166,8],[176,8,166,8],[176,9,167,7],[177,8,168,6,"ref"],[177,11,168,9],[177,12,168,10,"current"],[177,19,168,17],[177,20,168,18,"isAvailable"],[177,31,168,29],[177,34,168,32],[177,39,168,37],[178,6,169,4],[179,6,171,4],[179,13,171,11],[179,19,171,17],[180,8,172,6,"ref"],[180,11,172,9],[180,12,172,10,"current"],[180,19,172,17],[180,20,172,18,"unregister"],[180,30,172,28],[180,31,172,29],[180,32,172,30],[181,6,173,4],[181,7,173,5],[182,4,174,2],[182,5,174,3],[182,7,174,5],[182,8,174,6,"sensorType"],[182,18,174,16],[182,20,174,18,"config"],[182,26,174,24],[182,27,174,25],[182,28,174,26],[183,4,176,2],[183,11,176,9,"ref"],[183,14,176,12],[183,15,176,13,"current"],[183,22,176,20],[184,2,177,0],[185,0,177,1],[185,3]],"functionMap":{"names":["<global>","eulerToQuaternion","adjustRotationToInterfaceOrientation","adjustVectorToInterfaceOrientation","useAnimatedSensor","useMemo$argument_0","useRef$argument_0.unregister","useEffect$argument_0","ref.current.unregister","registerSensor$argument_2","<anonymous>"],"mappings":"AAA;ACmB;CDe;AEE;CFuB;AGE;CHc;OIqB;ICiB;MDK;gBEM;KFE;YGK;kBCG;ODE;kDES;KFW;+BCI,0BD;+BCI;ODE;WGI;KHE;GHC;CJG"}},"type":"js/module"}]}