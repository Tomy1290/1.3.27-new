{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"./errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":70},"end":{"line":3,"column":73,"index":143}}],"key":"rEld05quROH+iA6QLT6kkvqJ/qc=","exportNames":["*"]}},{"name":"./logger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":144},"end":{"line":9,"column":18,"index":276}}],"key":"RJYKXaUuTbTmL7MuVmczbacEgjY=","exportNames":["*"]}},{"name":"./mockedRequestAnimationFrame","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":277},"end":{"line":10,"column":76,"index":353}}],"key":"jvDSoC1dDp0COKQ+aujAg83tQSA=","exportNames":["*"]}},{"name":"./PlatformChecker","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":354},"end":{"line":16,"column":27,"index":447}}],"key":"O136KS8LvzB4pufOIvMCitL6KOc=","exportNames":["*"]}},{"name":"./threads","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":448},"end":{"line":23,"column":19,"index":572}}],"key":"ZuB0ICrjKM3htfPQkuonl9kPByQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.callGuardDEV = undefined;\n  exports.initializeUIRuntime = initializeUIRuntime;\n  exports.setupConsole = exports.setupCallGuard = undefined;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _errors = require(_dependencyMap[2]);\n  var _logger = require(_dependencyMap[3]);\n  var _mockedRequestAnimationFrame = require(_dependencyMap[4]);\n  var _PlatformChecker = require(_dependencyMap[5]);\n  var _threads = require(_dependencyMap[6]);\n  var IS_JEST = (0, _PlatformChecker.isJest)();\n  var SHOULD_BE_USE_WEB = (0, _PlatformChecker.shouldBeUseWeb)();\n  var IS_CHROME_DEBUGGER = (0, _PlatformChecker.isChromeDebugger)();\n\n  // Override the logFunction implementation with the one that adds logs\n  // with better stack traces to the LogBox (need to override it after `runOnJS`\n  // is defined).\n  var _worklet_10402436481482_init_data = {\n    code: \"function overrideLogFunctionImplementation_reactNativeReanimated_initializersTs1(){const{replaceLoggerImplementation,runOnJS,logToLogBoxAndConsole}=this.__closure;replaceLoggerImplementation(function(data){'worklet';runOnJS(logToLogBoxAndConsole)(data);});}\"\n  };\n  var _worklet_7251829080738_init_data = {\n    code: \"function reactNativeReanimated_initializersTs2(data){const{runOnJS,logToLogBoxAndConsole}=this.__closure;runOnJS(logToLogBoxAndConsole)(data);}\"\n  };\n  var overrideLogFunctionImplementation = function () {\n    var overrideLogFunctionImplementation = function () {\n      (0, _logger.replaceLoggerImplementation)(function () {\n        var reactNativeReanimated_initializersTs2 = function (data) {\n          (0, _threads.runOnJS)(_logger.logToLogBoxAndConsole)(data);\n        };\n        reactNativeReanimated_initializersTs2.__closure = {\n          runOnJS: _threads.runOnJS,\n          logToLogBoxAndConsole: _logger.logToLogBoxAndConsole\n        };\n        reactNativeReanimated_initializersTs2.__workletHash = 7251829080738;\n        reactNativeReanimated_initializersTs2.__initData = _worklet_7251829080738_init_data;\n        return reactNativeReanimated_initializersTs2;\n      }());\n    };\n    overrideLogFunctionImplementation.__closure = {\n      replaceLoggerImplementation: _logger.replaceLoggerImplementation,\n      runOnJS: _threads.runOnJS,\n      logToLogBoxAndConsole: _logger.logToLogBoxAndConsole\n    };\n    overrideLogFunctionImplementation.__workletHash = 10402436481482;\n    overrideLogFunctionImplementation.__initData = _worklet_10402436481482_init_data;\n    return overrideLogFunctionImplementation;\n  }(); // Register logger config and replace the log function implementation in\n  // the React runtime global scope\n  (0, _logger.registerLoggerConfig)(_logger.DEFAULT_LOGGER_CONFIG);\n  overrideLogFunctionImplementation();\n\n  // this is for web implementation\n  if (SHOULD_BE_USE_WEB) {\n    global._WORKLET = false;\n    global._log = console.log;\n    global._getAnimationTimestamp = () => performance.now();\n  } else {\n    // Register ReanimatedError and logger config in the UI runtime global scope.\n    // (we are using `executeOnUIRuntimeSync` here to make sure that the changes\n    // are applied before any async operations are executed on the UI runtime)\n    (0, _threads.executeOnUIRuntimeSync)(_errors.registerReanimatedError)();\n    (0, _threads.executeOnUIRuntimeSync)(_logger.registerLoggerConfig)(_logger.DEFAULT_LOGGER_CONFIG);\n    (0, _threads.executeOnUIRuntimeSync)(overrideLogFunctionImplementation)();\n  }\n\n  // callGuard is only used with debug builds\n  var _worklet_9908746026269_init_data = {\n    code: \"function callGuardDEV_reactNativeReanimated_initializersTs3(fn,...args){try{return fn(...args);}catch(e){if(global.__ErrorUtils){global.__ErrorUtils.reportFatalError(e);}else{throw e;}}}\"\n  };\n  var callGuardDEV = exports.callGuardDEV = function () {\n    var callGuardDEV = function (fn) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      try {\n        return fn(...args);\n      } catch (e) {\n        if (global.__ErrorUtils) {\n          global.__ErrorUtils.reportFatalError(e);\n        } else {\n          throw e;\n        }\n      }\n    };\n    callGuardDEV.__closure = {};\n    callGuardDEV.__workletHash = 9908746026269;\n    callGuardDEV.__initData = _worklet_9908746026269_init_data;\n    return callGuardDEV;\n  }();\n  var _worklet_1226484728363_init_data = {\n    code: \"function setupCallGuard_reactNativeReanimated_initializersTs4(){const{callGuardDEV,runOnJS,reportFatalErrorOnJS}=this.__closure;global.__callGuardDEV=callGuardDEV;global.__ErrorUtils={reportFatalError:function(error){runOnJS(reportFatalErrorOnJS)({message:error.message,stack:error.stack});}};}\"\n  };\n  var setupCallGuard = exports.setupCallGuard = function () {\n    var setupCallGuard = function () {\n      global.__callGuardDEV = callGuardDEV;\n      global.__ErrorUtils = {\n        reportFatalError: error => {\n          (0, _threads.runOnJS)(_errors.reportFatalErrorOnJS)({\n            message: error.message,\n            stack: error.stack\n          });\n        }\n      };\n    };\n    setupCallGuard.__closure = {\n      callGuardDEV,\n      runOnJS: _threads.runOnJS,\n      reportFatalErrorOnJS: _errors.reportFatalErrorOnJS\n    };\n    setupCallGuard.__workletHash = 1226484728363;\n    setupCallGuard.__initData = _worklet_1226484728363_init_data;\n    return setupCallGuard;\n  }();\n  /**\n   * Currently there seems to be a bug in the JSI layer which causes a crash when\n   * we try to copy some of the console methods, i.e. `clear` or `dirxml`.\n   *\n   * The crash happens only in React Native 0.75. It's not reproducible in neither\n   * 0.76 nor 0.74. It also happens only in the configuration of a debug app and\n   * production bundle.\n   *\n   * I haven't yet discovered what exactly causes the crash. It's tied to the\n   * console methods sometimes being `HostFunction`s. Therefore, as a workaround\n   * we don't copy the methods as they are in the original console object, we copy\n   * JavaScript wrappers instead.\n   */\n  function createMemorySafeCapturableConsole() {\n    var consoleCopy = Object.fromEntries(Object.entries(console).map(_ref => {\n      var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n        methodName = _ref2[0],\n        method = _ref2[1];\n      var methodWrapper = function methodWrapper() {\n        return method(...arguments);\n      };\n      if (method.name) {\n        /**\n         * Set the original method name as the wrapper name if available.\n         *\n         * It might be unnecessary but if we want to fully mimic the console\n         * object we should take into the account the fact some code might rely\n         * on the method name.\n         */\n        Object.defineProperty(methodWrapper, 'name', {\n          value: method.name,\n          writable: false\n        });\n      }\n      return [methodName, methodWrapper];\n    }));\n    return consoleCopy;\n  }\n\n  // We really have to create a copy of console here. Function runOnJS we use on elements inside\n  // this object makes it not configurable\n  var capturableConsole = createMemorySafeCapturableConsole();\n  var _worklet_16564225548487_init_data = {\n    code: \"function setupConsole_reactNativeReanimated_initializersTs5(){const{IS_CHROME_DEBUGGER,runOnJS,capturableConsole}=this.__closure;if(!IS_CHROME_DEBUGGER){global.console={assert:runOnJS(capturableConsole.assert),debug:runOnJS(capturableConsole.debug),log:runOnJS(capturableConsole.log),warn:runOnJS(capturableConsole.warn),error:runOnJS(capturableConsole.error),info:runOnJS(capturableConsole.info)};}}\"\n  };\n  var setupConsole = exports.setupConsole = function () {\n    var setupConsole = function () {\n      if (!IS_CHROME_DEBUGGER) {\n        // @ts-ignore TypeScript doesn't like that there are missing methods in console object, but we don't provide all the methods for the UI runtime console version\n        global.console = {\n          /* eslint-disable @typescript-eslint/unbound-method */\n          assert: (0, _threads.runOnJS)(capturableConsole.assert),\n          debug: (0, _threads.runOnJS)(capturableConsole.debug),\n          log: (0, _threads.runOnJS)(capturableConsole.log),\n          warn: (0, _threads.runOnJS)(capturableConsole.warn),\n          error: (0, _threads.runOnJS)(capturableConsole.error),\n          info: (0, _threads.runOnJS)(capturableConsole.info)\n          /* eslint-enable @typescript-eslint/unbound-method */\n        };\n      }\n    };\n    setupConsole.__closure = {\n      IS_CHROME_DEBUGGER,\n      runOnJS: _threads.runOnJS,\n      capturableConsole\n    };\n    setupConsole.__workletHash = 16564225548487;\n    setupConsole.__initData = _worklet_16564225548487_init_data;\n    return setupConsole;\n  }();\n  var _worklet_15606210022611_init_data = {\n    code: \"function setupRequestAnimationFrame_reactNativeReanimated_initializersTs6(){const{callMicrotasks}=this.__closure;const nativeRequestAnimationFrame=global.requestAnimationFrame;let animationFrameCallbacks=[];let flushRequested=false;global.__flushAnimationFrame=function(frameTimestamp){const currentCallbacks=animationFrameCallbacks;animationFrameCallbacks=[];currentCallbacks.forEach(function(f){return f(frameTimestamp);});callMicrotasks();};global.requestAnimationFrame=function(callback){animationFrameCallbacks.push(callback);if(!flushRequested){flushRequested=true;nativeRequestAnimationFrame(function(timestamp){flushRequested=false;global.__frameTimestamp=timestamp;global.__flushAnimationFrame(timestamp);global.__frameTimestamp=undefined;});}return-1;};}\"\n  };\n  var setupRequestAnimationFrame = function () {\n    var setupRequestAnimationFrame = function () {\n      // Jest mocks requestAnimationFrame API and it does not like if that mock gets overridden\n      // so we avoid doing requestAnimationFrame batching in Jest environment.\n      var nativeRequestAnimationFrame = global.requestAnimationFrame;\n      var animationFrameCallbacks = [];\n      var flushRequested = false;\n      global.__flushAnimationFrame = frameTimestamp => {\n        var currentCallbacks = animationFrameCallbacks;\n        animationFrameCallbacks = [];\n        currentCallbacks.forEach(f => f(frameTimestamp));\n        (0, _threads.callMicrotasks)();\n      };\n      global.requestAnimationFrame = callback => {\n        animationFrameCallbacks.push(callback);\n        if (!flushRequested) {\n          flushRequested = true;\n          nativeRequestAnimationFrame(timestamp => {\n            flushRequested = false;\n            global.__frameTimestamp = timestamp;\n            global.__flushAnimationFrame(timestamp);\n            global.__frameTimestamp = undefined;\n          });\n        }\n        // Reanimated currently does not support cancelling callbacks requested with\n        // requestAnimationFrame. We return -1 as identifier which isn't in line\n        // with the spec but it should give users better clue in case they actually\n        // attempt to store the value returned from rAF and use it for cancelling.\n        return -1;\n      };\n    };\n    setupRequestAnimationFrame.__closure = {\n      callMicrotasks: _threads.callMicrotasks\n    };\n    setupRequestAnimationFrame.__workletHash = 15606210022611;\n    setupRequestAnimationFrame.__initData = _worklet_15606210022611_init_data;\n    return setupRequestAnimationFrame;\n  }();\n  var _worklet_14957011896089_init_data = {\n    code: \"function reactNativeReanimated_initializersTs7(){const{setupCallGuard,setupConsole,SHOULD_BE_USE_WEB,setupMicrotasks,setupRequestAnimationFrame}=this.__closure;setupCallGuard();setupConsole();if(!SHOULD_BE_USE_WEB){setupMicrotasks();setupRequestAnimationFrame();}}\"\n  };\n  function initializeUIRuntime(ReanimatedModule) {\n    if ((0, _PlatformChecker.isWeb)()) {\n      return;\n    }\n    if (!ReanimatedModule) {\n      // eslint-disable-next-line reanimated/use-reanimated-error\n      throw new Error('[Reanimated] Reanimated is trying to initialize the UI runtime without a valid ReanimatedModule');\n    }\n    if (IS_JEST) {\n      // requestAnimationFrame react-native jest's setup is incorrect as it polyfills\n      // the method directly using setTimeout, therefore the callback doesn't get the\n      // expected timestamp as the only argument: https://github.com/facebook/react-native/blob/main/packages/react-native/jest/setup.js#L28\n      // We override this setup here to make sure that callbacks get the proper timestamps\n      // when executed. For non-jest environments we define requestAnimationFrame in setupRequestAnimationFrame\n      // @ts-ignore TypeScript uses Node definition for rAF, setTimeout, etc which returns a Timeout object rather than a number\n      globalThis.requestAnimationFrame = _mockedRequestAnimationFrame.mockedRequestAnimationFrame;\n    }\n    (0, _threads.runOnUIImmediately)(function () {\n      var reactNativeReanimated_initializersTs7 = function () {\n        setupCallGuard();\n        setupConsole();\n        if (!SHOULD_BE_USE_WEB) {\n          (0, _threads.setupMicrotasks)();\n          setupRequestAnimationFrame();\n        }\n      };\n      reactNativeReanimated_initializersTs7.__closure = {\n        setupCallGuard,\n        setupConsole,\n        SHOULD_BE_USE_WEB,\n        setupMicrotasks: _threads.setupMicrotasks,\n        setupRequestAnimationFrame\n      };\n      reactNativeReanimated_initializersTs7.__workletHash = 14957011896089;\n      reactNativeReanimated_initializersTs7.__initData = _worklet_14957011896089_init_data;\n      return reactNativeReanimated_initializersTs7;\n    }())();\n  }\n});","lineCount":272,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"callGuardDEV"],[8,22,1,13],[8,25,1,13,"undefined"],[8,34,1,13],[9,2,1,13,"exports"],[9,9,1,13],[9,10,1,13,"initializeUIRuntime"],[9,29,1,13],[9,32,1,13,"initializeUIRuntime"],[9,51,1,13],[10,2,1,13,"exports"],[10,9,1,13],[10,10,1,13,"setupConsole"],[10,22,1,13],[10,25,1,13,"exports"],[10,32,1,13],[10,33,1,13,"setupCallGuard"],[10,47,1,13],[10,50,1,13,"undefined"],[10,59,1,13],[11,2,1,13],[11,6,1,13,"_slicedToArray2"],[11,21,1,13],[11,24,1,13,"_interopRequireDefault"],[11,46,1,13],[11,47,1,13,"require"],[11,54,1,13],[11,55,1,13,"_dependencyMap"],[11,69,1,13],[12,2,3,0],[12,6,3,0,"_errors"],[12,13,3,0],[12,16,3,0,"require"],[12,23,3,0],[12,24,3,0,"_dependencyMap"],[12,38,3,0],[13,2,4,0],[13,6,4,0,"_logger"],[13,13,4,0],[13,16,4,0,"require"],[13,23,4,0],[13,24,4,0,"_dependencyMap"],[13,38,4,0],[14,2,10,0],[14,6,10,0,"_mockedRequestAnimationFrame"],[14,34,10,0],[14,37,10,0,"require"],[14,44,10,0],[14,45,10,0,"_dependencyMap"],[14,59,10,0],[15,2,11,0],[15,6,11,0,"_PlatformChecker"],[15,22,11,0],[15,25,11,0,"require"],[15,32,11,0],[15,33,11,0,"_dependencyMap"],[15,47,11,0],[16,2,17,0],[16,6,17,0,"_threads"],[16,14,17,0],[16,17,17,0,"require"],[16,24,17,0],[16,25,17,0,"_dependencyMap"],[16,39,17,0],[17,2,25,0],[17,6,25,6,"IS_JEST"],[17,13,25,13],[17,16,25,16],[17,20,25,16,"isJest"],[17,43,25,22],[17,45,25,23],[17,46,25,24],[18,2,26,0],[18,6,26,6,"SHOULD_BE_USE_WEB"],[18,23,26,23],[18,26,26,26],[18,30,26,26,"shouldBeUseWeb"],[18,61,26,40],[18,63,26,41],[18,64,26,42],[19,2,27,0],[19,6,27,6,"IS_CHROME_DEBUGGER"],[19,24,27,24],[19,27,27,27],[19,31,27,27,"isChromeDebugger"],[19,64,27,43],[19,66,27,44],[19,67,27,45],[21,2,29,0],[22,2,30,0],[23,2,31,0],[24,2,31,0],[24,6,31,0,"_worklet_10402436481482_init_data"],[24,39,31,0],[25,4,31,0,"code"],[25,8,31,0],[26,2,31,0],[27,2,31,0],[27,6,31,0,"_worklet_7251829080738_init_data"],[27,38,31,0],[28,4,31,0,"code"],[28,8,31,0],[29,2,31,0],[30,2,31,0],[30,6,31,0,"overrideLogFunctionImplementation"],[30,39,31,0],[30,42,32,0],[31,4,32,0],[31,8,32,0,"overrideLogFunctionImplementation"],[31,41,32,0],[31,53,32,0,"overrideLogFunctionImplementation"],[31,54,32,0],[31,56,32,45],[32,6,34,2],[32,10,34,2,"replaceLoggerImplementation"],[32,45,34,29],[32,47,34,30],[33,8,34,30],[33,12,34,30,"reactNativeReanimated_initializersTs2"],[33,49,34,30],[33,61,34,30,"reactNativeReanimated_initializersTs2"],[33,62,34,31,"data"],[33,66,34,35],[33,68,34,40],[34,10,36,4],[34,14,36,4,"runOnJS"],[34,30,36,11],[34,32,36,12,"logToLogBoxAndConsole"],[34,61,36,33],[34,62,36,34],[34,63,36,35,"data"],[34,67,36,39],[34,68,36,40],[35,8,37,2],[35,9,37,3],[36,8,37,3,"reactNativeReanimated_initializersTs2"],[36,45,37,3],[36,46,37,3,"__closure"],[36,55,37,3],[37,10,37,3,"runOnJS"],[37,17,37,3],[37,19,36,4,"runOnJS"],[37,35,36,11],[38,10,36,11,"logToLogBoxAndConsole"],[38,31,36,11],[38,33,36,12,"logToLogBoxAndConsole"],[39,8,36,33],[40,8,36,33,"reactNativeReanimated_initializersTs2"],[40,45,36,33],[40,46,36,33,"__workletHash"],[40,59,36,33],[41,8,36,33,"reactNativeReanimated_initializersTs2"],[41,45,36,33],[41,46,36,33,"__initData"],[41,56,36,33],[41,59,36,33,"_worklet_7251829080738_init_data"],[41,91,36,33],[42,8,36,33],[42,15,36,33,"reactNativeReanimated_initializersTs2"],[42,52,36,33],[43,6,36,33],[43,7,34,30],[43,9,37,3],[43,10,37,4],[44,4,38,0],[44,5,38,1],[45,4,38,1,"overrideLogFunctionImplementation"],[45,37,38,1],[45,38,38,1,"__closure"],[45,47,38,1],[46,6,38,1,"replaceLoggerImplementation"],[46,33,38,1],[46,35,34,2,"replaceLoggerImplementation"],[46,70,34,29],[47,6,34,29,"runOnJS"],[47,13,34,29],[47,15,36,4,"runOnJS"],[47,31,36,11],[48,6,36,11,"logToLogBoxAndConsole"],[48,27,36,11],[48,29,36,12,"logToLogBoxAndConsole"],[49,4,36,33],[50,4,36,33,"overrideLogFunctionImplementation"],[50,37,36,33],[50,38,36,33,"__workletHash"],[50,51,36,33],[51,4,36,33,"overrideLogFunctionImplementation"],[51,37,36,33],[51,38,36,33,"__initData"],[51,48,36,33],[51,51,36,33,"_worklet_10402436481482_init_data"],[51,84,36,33],[52,4,36,33],[52,11,36,33,"overrideLogFunctionImplementation"],[52,44,36,33],[53,2,36,33],[53,3,32,0],[53,7,40,0],[54,2,41,0],[55,2,42,0],[55,6,42,0,"registerLoggerConfig"],[55,34,42,20],[55,36,42,21,"DEFAULT_LOGGER_CONFIG"],[55,65,42,42],[55,66,42,43],[56,2,43,0,"overrideLogFunctionImplementation"],[56,35,43,33],[56,36,43,34],[56,37,43,35],[58,2,45,0],[59,2,46,0],[59,6,46,4,"SHOULD_BE_USE_WEB"],[59,23,46,21],[59,25,46,23],[60,4,47,2,"global"],[60,10,47,8],[60,11,47,9,"_WORKLET"],[60,19,47,17],[60,22,47,20],[60,27,47,25],[61,4,48,2,"global"],[61,10,48,8],[61,11,48,9,"_log"],[61,15,48,13],[61,18,48,16,"console"],[61,25,48,23],[61,26,48,24,"log"],[61,29,48,27],[62,4,49,2,"global"],[62,10,49,8],[62,11,49,9,"_getAnimationTimestamp"],[62,33,49,31],[62,36,49,34],[62,42,49,40,"performance"],[62,53,49,51],[62,54,49,52,"now"],[62,57,49,55],[62,58,49,56],[62,59,49,57],[63,2,50,0],[63,3,50,1],[63,9,50,7],[64,4,51,2],[65,4,52,2],[66,4,53,2],[67,4,54,2],[67,8,54,2,"executeOnUIRuntimeSync"],[67,39,54,24],[67,41,54,25,"registerReanimatedError"],[67,72,54,48],[67,73,54,49],[67,74,54,50],[67,75,54,51],[68,4,55,2],[68,8,55,2,"executeOnUIRuntimeSync"],[68,39,55,24],[68,41,55,25,"registerLoggerConfig"],[68,69,55,45],[68,70,55,46],[68,71,55,47,"DEFAULT_LOGGER_CONFIG"],[68,100,55,68],[68,101,55,69],[69,4,56,2],[69,8,56,2,"executeOnUIRuntimeSync"],[69,39,56,24],[69,41,56,25,"overrideLogFunctionImplementation"],[69,74,56,58],[69,75,56,59],[69,76,56,60],[69,77,56,61],[70,2,57,0],[72,2,59,0],[73,2,59,0],[73,6,59,0,"_worklet_9908746026269_init_data"],[73,38,59,0],[74,4,59,0,"code"],[74,8,59,0],[75,2,59,0],[76,2,59,0],[76,6,59,0,"callGuardDEV"],[76,18,59,0],[76,21,59,0,"exports"],[76,28,59,0],[76,29,59,0,"callGuardDEV"],[76,41,59,0],[76,44,60,7],[77,4,60,7],[77,8,60,7,"callGuardDEV"],[77,20,60,7],[77,32,60,7,"callGuardDEV"],[77,33,61,2,"fn"],[77,35,61,36],[77,37,63,22],[78,6,63,22],[78,15,63,22,"_len"],[78,19,63,22],[78,22,63,22,"arguments"],[78,31,63,22],[78,32,63,22,"length"],[78,38,63,22],[78,40,62,5,"args"],[78,44,62,9],[78,51,62,9,"Array"],[78,56,62,9],[78,57,62,9,"_len"],[78,61,62,9],[78,68,62,9,"_len"],[78,72,62,9],[78,83,62,9,"_key"],[78,87,62,9],[78,93,62,9,"_key"],[78,97,62,9],[78,100,62,9,"_len"],[78,104,62,9],[78,106,62,9,"_key"],[78,110,62,9],[79,8,62,5,"args"],[79,12,62,9],[79,13,62,9,"_key"],[79,17,62,9],[79,25,62,9,"arguments"],[79,34,62,9],[79,35,62,9,"_key"],[79,39,62,9],[80,6,62,9],[81,6,65,2],[81,10,65,6],[82,8,66,4],[82,15,66,11,"fn"],[82,17,66,13],[82,18,66,14],[82,21,66,17,"args"],[82,25,66,21],[82,26,66,22],[83,6,67,2],[83,7,67,3],[83,8,67,4],[83,15,67,11,"e"],[83,16,67,12],[83,18,67,14],[84,8,68,4],[84,12,68,8,"global"],[84,18,68,14],[84,19,68,15,"__ErrorUtils"],[84,31,68,27],[84,33,68,29],[85,10,69,6,"global"],[85,16,69,12],[85,17,69,13,"__ErrorUtils"],[85,29,69,25],[85,30,69,26,"reportFatalError"],[85,46,69,42],[85,47,69,43,"e"],[85,48,69,53],[85,49,69,54],[86,8,70,4],[86,9,70,5],[86,15,70,11],[87,10,71,6],[87,16,71,12,"e"],[87,17,71,13],[88,8,72,4],[89,6,73,2],[90,4,74,0],[90,5,74,1],[91,4,74,1,"callGuardDEV"],[91,16,74,1],[91,17,74,1,"__closure"],[91,26,74,1],[92,4,74,1,"callGuardDEV"],[92,16,74,1],[92,17,74,1,"__workletHash"],[92,30,74,1],[93,4,74,1,"callGuardDEV"],[93,16,74,1],[93,17,74,1,"__initData"],[93,27,74,1],[93,30,74,1,"_worklet_9908746026269_init_data"],[93,62,74,1],[94,4,74,1],[94,11,74,1,"callGuardDEV"],[94,23,74,1],[95,2,74,1],[95,3,60,7],[96,2,60,7],[96,6,60,7,"_worklet_1226484728363_init_data"],[96,38,60,7],[97,4,60,7,"code"],[97,8,60,7],[98,2,60,7],[99,2,60,7],[99,6,60,7,"setupCallGuard"],[99,20,60,7],[99,23,60,7,"exports"],[99,30,60,7],[99,31,60,7,"setupCallGuard"],[99,45,60,7],[99,48,76,7],[100,4,76,7],[100,8,76,7,"setupCallGuard"],[100,22,76,7],[100,34,76,7,"setupCallGuard"],[100,35,76,7],[100,37,76,33],[101,6,78,2,"global"],[101,12,78,8],[101,13,78,9,"__callGuardDEV"],[101,27,78,23],[101,30,78,26,"callGuardDEV"],[101,42,78,38],[102,6,79,2,"global"],[102,12,79,8],[102,13,79,9,"__ErrorUtils"],[102,25,79,21],[102,28,79,24],[103,8,80,4,"reportFatalError"],[103,24,80,20],[103,26,80,23,"error"],[103,31,80,35],[103,35,80,40],[104,10,81,6],[104,14,81,6,"runOnJS"],[104,30,81,13],[104,32,81,14,"reportFatalErrorOnJS"],[104,60,81,34],[104,61,81,35],[104,62,81,36],[105,12,82,8,"message"],[105,19,82,15],[105,21,82,17,"error"],[105,26,82,22],[105,27,82,23,"message"],[105,34,82,30],[106,12,83,8,"stack"],[106,17,83,13],[106,19,83,15,"error"],[106,24,83,20],[106,25,83,21,"stack"],[107,10,84,6],[107,11,84,7],[107,12,84,8],[108,8,85,4],[109,6,86,2],[109,7,86,3],[110,4,87,0],[110,5,87,1],[111,4,87,1,"setupCallGuard"],[111,18,87,1],[111,19,87,1,"__closure"],[111,28,87,1],[112,6,87,1,"callGuardDEV"],[112,18,87,1],[113,6,87,1,"runOnJS"],[113,13,87,1],[113,15,81,6,"runOnJS"],[113,31,81,13],[114,6,81,13,"reportFatalErrorOnJS"],[114,26,81,13],[114,28,81,14,"reportFatalErrorOnJS"],[115,4,81,34],[116,4,81,34,"setupCallGuard"],[116,18,81,34],[116,19,81,34,"__workletHash"],[116,32,81,34],[117,4,81,34,"setupCallGuard"],[117,18,81,34],[117,19,81,34,"__initData"],[117,29,81,34],[117,32,81,34,"_worklet_1226484728363_init_data"],[117,64,81,34],[118,4,81,34],[118,11,81,34,"setupCallGuard"],[118,25,81,34],[119,2,81,34],[119,3,76,7],[120,2,89,0],[121,0,90,0],[122,0,91,0],[123,0,92,0],[124,0,93,0],[125,0,94,0],[126,0,95,0],[127,0,96,0],[128,0,97,0],[129,0,98,0],[130,0,99,0],[131,0,100,0],[132,0,101,0],[133,2,102,0],[133,11,102,9,"createMemorySafeCapturableConsole"],[133,44,102,42,"createMemorySafeCapturableConsole"],[133,45,102,42],[133,47,102,61],[134,4,103,2],[134,8,103,8,"consoleCopy"],[134,19,103,19],[134,22,103,22,"Object"],[134,28,103,28],[134,29,103,29,"fromEntries"],[134,40,103,40],[134,41,104,4,"Object"],[134,47,104,10],[134,48,104,11,"entries"],[134,55,104,18],[134,56,104,19,"console"],[134,63,104,26],[134,64,104,27],[134,65,104,28,"map"],[134,68,104,31],[134,69,104,32,"_ref"],[134,73,104,32],[134,77,104,58],[135,6,104,58],[135,10,104,58,"_ref2"],[135,15,104,58],[135,22,104,58,"_slicedToArray2"],[135,37,104,58],[135,38,104,58,"default"],[135,45,104,58],[135,47,104,58,"_ref"],[135,51,104,58],[136,8,104,34,"methodName"],[136,18,104,44],[136,21,104,44,"_ref2"],[136,26,104,44],[137,8,104,46,"method"],[137,14,104,52],[137,17,104,52,"_ref2"],[137,22,104,52],[138,6,105,6],[138,10,105,12,"methodWrapper"],[138,23,105,25],[138,26,105,28],[138,35,105,37,"methodWrapper"],[138,48,105,50,"methodWrapper"],[138,49,105,50],[138,51,105,71],[139,8,106,8],[139,15,106,15,"method"],[139,21,106,21],[139,22,106,22],[139,25,106,22,"arguments"],[139,34,106,29],[139,35,106,30],[140,6,107,6],[140,7,107,7],[141,6,108,6],[141,10,108,10,"method"],[141,16,108,16],[141,17,108,17,"name"],[141,21,108,21],[141,23,108,23],[142,8,109,8],[143,0,110,0],[144,0,111,0],[145,0,112,0],[146,0,113,0],[147,0,114,0],[148,0,115,0],[149,8,116,8,"Object"],[149,14,116,14],[149,15,116,15,"defineProperty"],[149,29,116,29],[149,30,116,30,"methodWrapper"],[149,43,116,43],[149,45,116,45],[149,51,116,51],[149,53,116,53],[150,10,117,10,"value"],[150,15,117,15],[150,17,117,17,"method"],[150,23,117,23],[150,24,117,24,"name"],[150,28,117,28],[151,10,118,10,"writable"],[151,18,118,18],[151,20,118,20],[152,8,119,8],[152,9,119,9],[152,10,119,10],[153,6,120,6],[154,6,121,6],[154,13,121,13],[154,14,121,14,"methodName"],[154,24,121,24],[154,26,121,26,"methodWrapper"],[154,39,121,39],[154,40,121,40],[155,4,122,4],[155,5,122,5],[155,6,123,2],[155,7,123,3],[156,4,125,2],[156,11,125,9,"consoleCopy"],[156,22,125,20],[157,2,126,0],[159,2,128,0],[160,2,129,0],[161,2,130,0],[161,6,130,6,"capturableConsole"],[161,23,130,23],[161,26,130,26,"createMemorySafeCapturableConsole"],[161,59,130,59],[161,60,130,60],[161,61,130,61],[162,2,130,62],[162,6,130,62,"_worklet_16564225548487_init_data"],[162,39,130,62],[163,4,130,62,"code"],[163,8,130,62],[164,2,130,62],[165,2,130,62],[165,6,130,62,"setupConsole"],[165,18,130,62],[165,21,130,62,"exports"],[165,28,130,62],[165,29,130,62,"setupConsole"],[165,41,130,62],[165,44,132,7],[166,4,132,7],[166,8,132,7,"setupConsole"],[166,20,132,7],[166,32,132,7,"setupConsole"],[166,33,132,7],[166,35,132,31],[167,6,134,2],[167,10,134,6],[167,11,134,7,"IS_CHROME_DEBUGGER"],[167,29,134,25],[167,31,134,27],[168,8,135,4],[169,8,136,4,"global"],[169,14,136,10],[169,15,136,11,"console"],[169,22,136,18],[169,25,136,21],[170,10,137,6],[171,10,138,6,"assert"],[171,16,138,12],[171,18,138,14],[171,22,138,14,"runOnJS"],[171,38,138,21],[171,40,138,22,"capturableConsole"],[171,57,138,39],[171,58,138,40,"assert"],[171,64,138,46],[171,65,138,47],[172,10,139,6,"debug"],[172,15,139,11],[172,17,139,13],[172,21,139,13,"runOnJS"],[172,37,139,20],[172,39,139,21,"capturableConsole"],[172,56,139,38],[172,57,139,39,"debug"],[172,62,139,44],[172,63,139,45],[173,10,140,6,"log"],[173,13,140,9],[173,15,140,11],[173,19,140,11,"runOnJS"],[173,35,140,18],[173,37,140,19,"capturableConsole"],[173,54,140,36],[173,55,140,37,"log"],[173,58,140,40],[173,59,140,41],[174,10,141,6,"warn"],[174,14,141,10],[174,16,141,12],[174,20,141,12,"runOnJS"],[174,36,141,19],[174,38,141,20,"capturableConsole"],[174,55,141,37],[174,56,141,38,"warn"],[174,60,141,42],[174,61,141,43],[175,10,142,6,"error"],[175,15,142,11],[175,17,142,13],[175,21,142,13,"runOnJS"],[175,37,142,20],[175,39,142,21,"capturableConsole"],[175,56,142,38],[175,57,142,39,"error"],[175,62,142,44],[175,63,142,45],[176,10,143,6,"info"],[176,14,143,10],[176,16,143,12],[176,20,143,12,"runOnJS"],[176,36,143,19],[176,38,143,20,"capturableConsole"],[176,55,143,37],[176,56,143,38,"info"],[176,60,143,42],[177,10,144,6],[178,8,145,4],[178,9,145,5],[179,6,146,2],[180,4,147,0],[180,5,147,1],[181,4,147,1,"setupConsole"],[181,16,147,1],[181,17,147,1,"__closure"],[181,26,147,1],[182,6,147,1,"IS_CHROME_DEBUGGER"],[182,24,147,1],[183,6,147,1,"runOnJS"],[183,13,147,1],[183,15,138,14,"runOnJS"],[183,31,138,21],[184,6,138,21,"capturableConsole"],[185,4,138,21],[186,4,138,21,"setupConsole"],[186,16,138,21],[186,17,138,21,"__workletHash"],[186,30,138,21],[187,4,138,21,"setupConsole"],[187,16,138,21],[187,17,138,21,"__initData"],[187,27,138,21],[187,30,138,21,"_worklet_16564225548487_init_data"],[187,63,138,21],[188,4,138,21],[188,11,138,21,"setupConsole"],[188,23,138,21],[189,2,138,21],[189,3,132,7],[190,2,132,7],[190,6,132,7,"_worklet_15606210022611_init_data"],[190,39,132,7],[191,4,132,7,"code"],[191,8,132,7],[192,2,132,7],[193,2,132,7],[193,6,132,7,"setupRequestAnimationFrame"],[193,32,132,7],[193,35,149,0],[194,4,149,0],[194,8,149,0,"setupRequestAnimationFrame"],[194,34,149,0],[194,46,149,0,"setupRequestAnimationFrame"],[194,47,149,0],[194,49,149,38],[195,6,152,2],[196,6,153,2],[197,6,154,2],[197,10,154,8,"nativeRequestAnimationFrame"],[197,37,154,35],[197,40,154,38,"global"],[197,46,154,44],[197,47,154,45,"requestAnimationFrame"],[197,68,154,66],[198,6,156,2],[198,10,156,6,"animationFrameCallbacks"],[198,33,156,65],[198,36,156,68],[198,38,156,70],[199,6,157,2],[199,10,157,6,"flushRequested"],[199,24,157,20],[199,27,157,23],[199,32,157,28],[200,6,159,2,"global"],[200,12,159,8],[200,13,159,9,"__flushAnimationFrame"],[200,34,159,30],[200,37,159,34,"frameTimestamp"],[200,51,159,56],[200,55,159,61],[201,8,160,4],[201,12,160,10,"currentCallbacks"],[201,28,160,26],[201,31,160,29,"animationFrameCallbacks"],[201,54,160,52],[202,8,161,4,"animationFrameCallbacks"],[202,31,161,27],[202,34,161,30],[202,36,161,32],[203,8,162,4,"currentCallbacks"],[203,24,162,20],[203,25,162,21,"forEach"],[203,32,162,28],[203,33,162,30,"f"],[203,34,162,31],[203,38,162,36,"f"],[203,39,162,37],[203,40,162,38,"frameTimestamp"],[203,54,162,52],[203,55,162,53],[203,56,162,54],[204,8,163,4],[204,12,163,4,"callMicrotasks"],[204,35,163,18],[204,37,163,19],[204,38,163,20],[205,6,164,2],[205,7,164,3],[206,6,166,2,"global"],[206,12,166,8],[206,13,166,9,"requestAnimationFrame"],[206,34,166,30],[206,37,167,4,"callback"],[206,45,167,41],[206,49,168,15],[207,8,169,4,"animationFrameCallbacks"],[207,31,169,27],[207,32,169,28,"push"],[207,36,169,32],[207,37,169,33,"callback"],[207,45,169,41],[207,46,169,42],[208,8,170,4],[208,12,170,8],[208,13,170,9,"flushRequested"],[208,27,170,23],[208,29,170,25],[209,10,171,6,"flushRequested"],[209,24,171,20],[209,27,171,23],[209,31,171,27],[210,10,172,6,"nativeRequestAnimationFrame"],[210,37,172,33],[210,38,172,35,"timestamp"],[210,47,172,44],[210,51,172,49],[211,12,173,8,"flushRequested"],[211,26,173,22],[211,29,173,25],[211,34,173,30],[212,12,174,8,"global"],[212,18,174,14],[212,19,174,15,"__frameTimestamp"],[212,35,174,31],[212,38,174,34,"timestamp"],[212,47,174,43],[213,12,175,8,"global"],[213,18,175,14],[213,19,175,15,"__flushAnimationFrame"],[213,40,175,36],[213,41,175,37,"timestamp"],[213,50,175,46],[213,51,175,47],[214,12,176,8,"global"],[214,18,176,14],[214,19,176,15,"__frameTimestamp"],[214,35,176,31],[214,38,176,34,"undefined"],[214,47,176,43],[215,10,177,6],[215,11,177,7],[215,12,177,8],[216,8,178,4],[217,8,179,4],[218,8,180,4],[219,8,181,4],[220,8,182,4],[221,8,183,4],[222,6,184,2],[222,7,184,3],[223,4,185,0],[223,5,185,1],[224,4,185,1,"setupRequestAnimationFrame"],[224,30,185,1],[224,31,185,1,"__closure"],[224,40,185,1],[225,6,185,1,"callMicrotasks"],[225,20,185,1],[225,22,163,4,"callMicrotasks"],[226,4,163,18],[227,4,163,18,"setupRequestAnimationFrame"],[227,30,163,18],[227,31,163,18,"__workletHash"],[227,44,163,18],[228,4,163,18,"setupRequestAnimationFrame"],[228,30,163,18],[228,31,163,18,"__initData"],[228,41,163,18],[228,44,163,18,"_worklet_15606210022611_init_data"],[228,77,163,18],[229,4,163,18],[229,11,163,18,"setupRequestAnimationFrame"],[229,37,163,18],[230,2,163,18],[230,3,149,0],[231,2,149,0],[231,6,149,0,"_worklet_14957011896089_init_data"],[231,39,149,0],[232,4,149,0,"code"],[232,8,149,0],[233,2,149,0],[234,2,187,7],[234,11,187,16,"initializeUIRuntime"],[234,30,187,35,"initializeUIRuntime"],[234,31,187,36,"ReanimatedModule"],[234,47,187,71],[234,49,187,73],[235,4,188,2],[235,8,188,6],[235,12,188,6,"isWeb"],[235,34,188,11],[235,36,188,12],[235,37,188,13],[235,39,188,15],[236,6,189,4],[237,4,190,2],[238,4,191,2],[238,8,191,6],[238,9,191,7,"ReanimatedModule"],[238,25,191,23],[238,27,191,25],[239,6,192,4],[240,6,193,4],[240,12,193,10],[240,16,193,14,"Error"],[240,21,193,19],[240,22,194,6],[240,119,195,4],[240,120,195,5],[241,4,196,2],[242,4,197,2],[242,8,197,6,"IS_JEST"],[242,15,197,13],[242,17,197,15],[243,6,198,4],[244,6,199,4],[245,6,200,4],[246,6,201,4],[247,6,202,4],[248,6,203,4],[249,6,204,4,"globalThis"],[249,16,204,14],[249,17,204,15,"requestAnimationFrame"],[249,38,204,36],[249,41,204,39,"mockedRequestAnimationFrame"],[249,97,204,66],[250,4,205,2],[251,4,207,2],[251,8,207,2,"runOnUIImmediately"],[251,35,207,20],[251,37,207,21],[252,6,207,21],[252,10,207,21,"reactNativeReanimated_initializersTs7"],[252,47,207,21],[252,59,207,21,"reactNativeReanimated_initializersTs7"],[252,60,207,21],[252,62,207,27],[253,8,209,4,"setupCallGuard"],[253,22,209,18],[253,23,209,19],[253,24,209,20],[254,8,210,4,"setupConsole"],[254,20,210,16],[254,21,210,17],[254,22,210,18],[255,8,211,4],[255,12,211,8],[255,13,211,9,"SHOULD_BE_USE_WEB"],[255,30,211,26],[255,32,211,28],[256,10,212,6],[256,14,212,6,"setupMicrotasks"],[256,38,212,21],[256,40,212,22],[256,41,212,23],[257,10,213,6,"setupRequestAnimationFrame"],[257,36,213,32],[257,37,213,33],[257,38,213,34],[258,8,214,4],[259,6,215,2],[259,7,215,3],[260,6,215,3,"reactNativeReanimated_initializersTs7"],[260,43,215,3],[260,44,215,3,"__closure"],[260,53,215,3],[261,8,215,3,"setupCallGuard"],[261,22,215,3],[262,8,215,3,"setupConsole"],[262,20,215,3],[263,8,215,3,"SHOULD_BE_USE_WEB"],[263,25,215,3],[264,8,215,3,"setupMicrotasks"],[264,23,215,3],[264,25,212,6,"setupMicrotasks"],[264,49,212,21],[265,8,212,21,"setupRequestAnimationFrame"],[266,6,212,21],[267,6,212,21,"reactNativeReanimated_initializersTs7"],[267,43,212,21],[267,44,212,21,"__workletHash"],[267,57,212,21],[268,6,212,21,"reactNativeReanimated_initializersTs7"],[268,43,212,21],[268,44,212,21,"__initData"],[268,54,212,21],[268,57,212,21,"_worklet_14957011896089_init_data"],[268,90,212,21],[269,6,212,21],[269,13,212,21,"reactNativeReanimated_initializersTs7"],[269,50,212,21],[270,4,212,21],[270,5,207,21],[270,7,215,3],[270,8,215,4],[270,9,215,5],[270,10,215,6],[271,2,216,0],[272,0,216,1],[272,3]],"functionMap":{"names":["<global>","overrideLogFunctionImplementation","replaceLoggerImplementation$argument_0","global._getAnimationTimestamp","callGuardDEV","setupCallGuard","global.__ErrorUtils.reportFatalError","createMemorySafeCapturableConsole","Object.entries.map$argument_0","methodWrapper","setupConsole","setupRequestAnimationFrame","global.__flushAnimationFrame","currentCallbacks.forEach$argument_0","global.requestAnimationFrame","nativeRequestAnimationFrame$argument_0","initializeUIRuntime","runOnUIImmediately$argument_0"],"mappings":"AAA;AC+B;8BCE;GDG;CDC;kCGW,uBH;OIW;CJc;OKE;sBCI;KDK;CLE;AOe;gCCE;4BCC;ODE;KDe;CPI;OUM;CVe;AWE;iCCU;6BCG,wBD;GDE;iCGE;kCCM;ODK;GHO;CXC;OgBE;qBCoB;GDQ;ChBC"}},"type":"js/module"}]}