{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.averageStartToStart = averageStartToStart;\n  exports.buildPeriodDaysSet = buildPeriodDaysSet;\n  exports.getAverageCycleLengthDays = getAverageCycleLengthDays;\n  exports.getAveragePeriodLengthDays = getAveragePeriodLengthDays;\n  exports.getFertileWindow = getFertileWindow;\n  exports.getOvulationDate = getOvulationDate;\n  exports.isWithin = isWithin;\n  exports.markersForMonth = markersForMonth;\n  exports.predictNextStart = predictNextStart;\n  exports.toKey = undefined;\n  var toKey = d => `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\n  exports.toKey = toKey;\n  function getAverageCycleLengthDays(cycles) {\n    var starts = cycles.filter(c => c.start).map(c => c.start).sort();\n    if (starts.length < 2) return 28;\n    var diffs = [];\n    for (var i = 1; i < starts.length; i++) {\n      var a = new Date(starts[i - 1]);\n      var b = new Date(starts[i]);\n      var diff = Math.round((+b - +a) / 86400000);\n      if (diff > 0) diffs.push(diff);\n    }\n    if (diffs.length === 0) return 28;\n    var last3 = diffs.slice(-3);\n    var avg = Math.round(last3.reduce((a, b) => a + b, 0) / last3.length);\n    return avg || 28;\n  }\n  function getAveragePeriodLengthDays(cycles) {\n    // If ends are recorded, use average (end-start+1), fallback to 5 days\n    var completed = cycles.filter(c => c.start && c.end);\n    if (completed.length === 0) return 5;\n    var lens = completed.map(c => {\n      var s = new Date(c.start);\n      var e = new Date(c.end);\n      return Math.max(1, Math.round((+e - +s) / 86400000) + 1);\n    });\n    var last3 = lens.slice(-3);\n    return Math.max(1, Math.round(last3.reduce((a, b) => a + b, 0) / last3.length));\n  }\n  function averageStartToStart(cycles) {\n    return getAverageCycleLengthDays(cycles);\n  }\n  function predictNextStart(cycles) {\n    var avg = averageStartToStart(cycles);\n    var starts = cycles.map(c => c.start).filter(Boolean).sort();\n    var last = starts.slice(-1)[0];\n    if (!last) return null;\n    var dt = new Date(last);\n    dt.setDate(dt.getDate() + avg);\n    return dt;\n  }\n\n  // Luteal phase defaults to 14 days (typical range 12â€“16). Fertile window includes ovulation day.\n  function getOvulationDate(cycles) {\n    var next = predictNextStart(cycles);\n    if (!next) return null;\n    var luteal = 14; // could be adapted later by user-specific data\n    var ov = new Date(next);\n    ov.setDate(ov.getDate() - luteal);\n    return ov;\n  }\n  function getFertileWindow(cycles) {\n    var ov = getOvulationDate(cycles);\n    if (!ov) return null;\n    var start = new Date(ov);\n    start.setDate(start.getDate() - 5);\n    var end = new Date(ov); // include ovulation day as fertile\n    return {\n      start,\n      end\n    };\n  }\n  function isWithin(date, start, end) {\n    var d = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n    var s = new Date(start.getFullYear(), start.getMonth(), start.getDate());\n    var e = new Date(end.getFullYear(), end.getMonth(), end.getDate());\n    return +d >= +s && +d <= +e;\n  }\n  function buildPeriodDaysSet(cycles) {\n    var periodLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n    var set = new Set();\n    for (var c of cycles) {\n      var start = new Date(c.start);\n      var len = Math.max(1, periodLength);\n      var end = new Date(start);\n      end.setDate(start.getDate() + len - 1);\n      var cur = new Date(start);\n      while (+cur <= +end) {\n        set.add(toKey(cur));\n        cur.setDate(cur.getDate() + 1);\n      }\n    }\n    return set;\n  }\n  function markersForMonth(year, month, cycles) {\n    var today = new Date();\n    var avgCycleLen = averageStartToStart(cycles);\n    var avgPeriodLen = getAveragePeriodLengthDays(cycles);\n    var expectedNext = predictNextStart(cycles);\n    var fertile = getFertileWindow(cycles);\n    var ovulation = getOvulationDate(cycles);\n    var days = [];\n    var d = new Date(year, month, 1);\n    while (d.getMonth() === month) {\n      days.push(new Date(d));\n      d.setDate(d.getDate() + 1);\n    }\n\n    // Past/confirmed period days: from each cycle start up to today (clamped by period length)\n    var confirmed = new Set();\n    var upcoming = new Set();\n    var _loop = function () {\n      var s = new Date(c.start);\n      var end = c.end ? new Date(c.end) : (() => {\n        var tmp = new Date(s);\n        tmp.setDate(tmp.getDate() + avgPeriodLen - 1);\n        return tmp;\n      })();\n      var cur = new Date(s);\n      while (+cur <= +end) {\n        var key = toKey(cur);\n        if (+cur <= +today) confirmed.add(key);else upcoming.add(key);\n        cur.setDate(cur.getDate() + 1);\n      }\n    };\n    for (var c of cycles) {\n      _loop();\n    }\n    var period = new Set(days.filter(dd => confirmed.has(toKey(dd))).map(toKey));\n    var upcomingPeriod = new Set(days.filter(dd => upcoming.has(toKey(dd))).map(toKey));\n    var fertileSet = new Set(days.filter(dd => fertile && isWithin(dd, fertile.start, fertile.end)).map(toKey));\n    var ovulationSet = new Set(days.filter(dd => ovulation && toKey(dd) === toKey(ovulation)).map(toKey));\n    var expectedSet = new Set(days.filter(dd => expectedNext && toKey(dd) === toKey(expectedNext)).map(toKey));\n    return {\n      period,\n      upcomingPeriod,\n      fertile: fertileSet,\n      ovulation: ovulationSet,\n      expected: expectedSet,\n      avgCycleLen,\n      avgPeriodLen,\n      expectedNext\n    };\n  }\n});","lineCount":149,"map":[[15,2,3,7],[15,6,3,13,"toKey"],[15,11,3,18],[15,14,3,22,"d"],[15,15,3,29],[15,19,3,34],[15,22,3,37,"d"],[15,23,3,38],[15,24,3,39,"getFullYear"],[15,35,3,50],[15,36,3,51],[15,37,3,52],[15,41,3,56,"String"],[15,47,3,62],[15,48,3,63,"d"],[15,49,3,64],[15,50,3,65,"getMonth"],[15,58,3,73],[15,59,3,74],[15,60,3,75],[15,63,3,76],[15,64,3,77],[15,65,3,78],[15,66,3,79,"padStart"],[15,74,3,87],[15,75,3,88],[15,76,3,89],[15,78,3,90],[15,81,3,93],[15,82,3,94],[15,86,3,98,"String"],[15,92,3,104],[15,93,3,105,"d"],[15,94,3,106],[15,95,3,107,"getDate"],[15,102,3,114],[15,103,3,115],[15,104,3,116],[15,105,3,117],[15,106,3,118,"padStart"],[15,114,3,126],[15,115,3,127],[15,116,3,128],[15,118,3,129],[15,121,3,132],[15,122,3,133],[15,124,3,135],[16,2,3,136,"exports"],[16,9,3,136],[16,10,3,136,"toKey"],[16,15,3,136],[16,18,3,136,"toKey"],[16,23,3,136],[17,2,5,7],[17,11,5,16,"getAverageCycleLengthDays"],[17,36,5,41,"getAverageCycleLengthDays"],[17,37,5,42,"cycles"],[17,43,5,57],[17,45,5,67],[18,4,6,2],[18,8,6,8,"starts"],[18,14,6,14],[18,17,6,17,"cycles"],[18,23,6,23],[18,24,6,24,"filter"],[18,30,6,30],[18,31,6,31,"c"],[18,32,6,32],[18,36,6,36,"c"],[18,37,6,37],[18,38,6,38,"start"],[18,43,6,43],[18,44,6,44],[18,45,6,45,"map"],[18,48,6,48],[18,49,6,49,"c"],[18,50,6,50],[18,54,6,54,"c"],[18,55,6,55],[18,56,6,56,"start"],[18,61,6,61],[18,62,6,62],[18,63,6,63,"sort"],[18,67,6,67],[18,68,6,68],[18,69,6,69],[19,4,7,2],[19,8,7,6,"starts"],[19,14,7,12],[19,15,7,13,"length"],[19,21,7,19],[19,24,7,22],[19,25,7,23],[19,27,7,25],[19,34,7,32],[19,36,7,34],[20,4,8,2],[20,8,8,8,"diffs"],[20,13,8,23],[20,16,8,26],[20,18,8,28],[21,4,9,2],[21,9,9,7],[21,13,9,11,"i"],[21,14,9,12],[21,17,9,15],[21,18,9,16],[21,20,9,18,"i"],[21,21,9,19],[21,24,9,22,"starts"],[21,30,9,28],[21,31,9,29,"length"],[21,37,9,35],[21,39,9,37,"i"],[21,40,9,38],[21,42,9,40],[21,44,9,42],[22,6,10,4],[22,10,10,10,"a"],[22,11,10,11],[22,14,10,14],[22,18,10,18,"Date"],[22,22,10,22],[22,23,10,23,"starts"],[22,29,10,29],[22,30,10,30,"i"],[22,31,10,31],[22,34,10,32],[22,35,10,33],[22,36,10,34],[22,37,10,35],[23,6,10,37],[23,10,10,43,"b"],[23,11,10,44],[23,14,10,47],[23,18,10,51,"Date"],[23,22,10,55],[23,23,10,56,"starts"],[23,29,10,62],[23,30,10,63,"i"],[23,31,10,64],[23,32,10,65],[23,33,10,66],[24,6,11,4],[24,10,11,10,"diff"],[24,14,11,14],[24,17,11,17,"Math"],[24,21,11,21],[24,22,11,22,"round"],[24,27,11,27],[24,28,11,28],[24,29,11,29],[24,30,11,30,"b"],[24,31,11,31],[24,34,11,34],[24,35,11,35,"a"],[24,36,11,36],[24,48,11,53],[24,49,11,54],[25,6,12,4],[25,10,12,8,"diff"],[25,14,12,12],[25,17,12,15],[25,18,12,16],[25,20,12,18,"diffs"],[25,25,12,23],[25,26,12,24,"push"],[25,30,12,28],[25,31,12,29,"diff"],[25,35,12,33],[25,36,12,34],[26,4,13,2],[27,4,14,2],[27,8,14,6,"diffs"],[27,13,14,11],[27,14,14,12,"length"],[27,20,14,18],[27,25,14,23],[27,26,14,24],[27,28,14,26],[27,35,14,33],[27,37,14,35],[28,4,15,2],[28,8,15,8,"last3"],[28,13,15,13],[28,16,15,16,"diffs"],[28,21,15,21],[28,22,15,22,"slice"],[28,27,15,27],[28,30,15,30],[28,31,15,31],[29,4,16,2],[29,8,16,8,"avg"],[29,11,16,11],[29,14,16,14,"Math"],[29,18,16,18],[29,19,16,19,"round"],[29,24,16,24],[29,25,16,25,"last3"],[29,30,16,30],[29,31,16,31,"reduce"],[29,37,16,37],[29,38,16,38],[29,39,16,39,"a"],[29,40,16,40],[29,42,16,41,"b"],[29,43,16,42],[29,48,16,45,"a"],[29,49,16,46],[29,52,16,47,"b"],[29,53,16,48],[29,55,16,49],[29,56,16,50],[29,57,16,51],[29,60,16,52,"last3"],[29,65,16,57],[29,66,16,58,"length"],[29,72,16,64],[29,73,16,65],[30,4,17,2],[30,11,17,9,"avg"],[30,14,17,12],[30,18,17,16],[30,20,17,18],[31,2,18,0],[32,2,20,7],[32,11,20,16,"getAveragePeriodLengthDays"],[32,37,20,42,"getAveragePeriodLengthDays"],[32,38,20,43,"cycles"],[32,44,20,58],[32,46,20,68],[33,4,21,2],[34,4,22,2],[34,8,22,8,"completed"],[34,17,22,17],[34,20,22,20,"cycles"],[34,26,22,26],[34,27,22,27,"filter"],[34,33,22,33],[34,34,22,34,"c"],[34,35,22,35],[34,39,22,39,"c"],[34,40,22,40],[34,41,22,41,"start"],[34,46,22,46],[34,50,22,50,"c"],[34,51,22,51],[34,52,22,52,"end"],[34,55,22,55],[34,56,22,56],[35,4,23,2],[35,8,23,6,"completed"],[35,17,23,15],[35,18,23,16,"length"],[35,24,23,22],[35,29,23,27],[35,30,23,28],[35,32,23,30],[35,39,23,37],[35,40,23,38],[36,4,24,2],[36,8,24,8,"lens"],[36,12,24,12],[36,15,24,15,"completed"],[36,24,24,24],[36,25,24,25,"map"],[36,28,24,28],[36,29,24,29,"c"],[36,30,24,30],[36,34,24,34],[37,6,25,4],[37,10,25,10,"s"],[37,11,25,11],[37,14,25,14],[37,18,25,18,"Date"],[37,22,25,22],[37,23,25,23,"c"],[37,24,25,24],[37,25,25,25,"start"],[37,30,25,30],[37,31,25,31],[38,6,25,33],[38,10,25,39,"e"],[38,11,25,40],[38,14,25,43],[38,18,25,47,"Date"],[38,22,25,51],[38,23,25,52,"c"],[38,24,25,53],[38,25,25,54,"end"],[38,28,25,67],[38,29,25,68],[39,6,26,4],[39,13,26,11,"Math"],[39,17,26,15],[39,18,26,16,"max"],[39,21,26,19],[39,22,26,20],[39,23,26,21],[39,25,26,23,"Math"],[39,29,26,27],[39,30,26,28,"round"],[39,35,26,33],[39,36,26,34],[39,37,26,35],[39,38,26,36,"e"],[39,39,26,37],[39,42,26,40],[39,43,26,41,"s"],[39,44,26,42],[39,56,26,59],[39,57,26,60],[39,60,26,63],[39,61,26,64],[39,62,26,65],[40,4,27,2],[40,5,27,3],[40,6,27,4],[41,4,28,2],[41,8,28,8,"last3"],[41,13,28,13],[41,16,28,16,"lens"],[41,20,28,20],[41,21,28,21,"slice"],[41,26,28,26],[41,29,28,29],[41,30,28,30],[42,4,29,2],[42,11,29,9,"Math"],[42,15,29,13],[42,16,29,14,"max"],[42,19,29,17],[42,20,29,18],[42,21,29,19],[42,23,29,21,"Math"],[42,27,29,25],[42,28,29,26,"round"],[42,33,29,31],[42,34,29,32,"last3"],[42,39,29,37],[42,40,29,38,"reduce"],[42,46,29,44],[42,47,29,45],[42,48,29,46,"a"],[42,49,29,47],[42,51,29,48,"b"],[42,52,29,49],[42,57,29,52,"a"],[42,58,29,53],[42,61,29,54,"b"],[42,62,29,55],[42,64,29,56],[42,65,29,57],[42,66,29,58],[42,69,29,59,"last3"],[42,74,29,64],[42,75,29,65,"length"],[42,81,29,71],[42,82,29,72],[42,83,29,73],[43,2,30,0],[44,2,32,7],[44,11,32,16,"averageStartToStart"],[44,30,32,35,"averageStartToStart"],[44,31,32,36,"cycles"],[44,37,32,51],[44,39,32,61],[45,4,33,2],[45,11,33,9,"getAverageCycleLengthDays"],[45,36,33,34],[45,37,33,35,"cycles"],[45,43,33,41],[45,44,33,42],[46,2,34,0],[47,2,36,7],[47,11,36,16,"predictNextStart"],[47,27,36,32,"predictNextStart"],[47,28,36,33,"cycles"],[47,34,36,48],[47,36,36,63],[48,4,37,2],[48,8,37,8,"avg"],[48,11,37,11],[48,14,37,14,"averageStartToStart"],[48,33,37,33],[48,34,37,34,"cycles"],[48,40,37,40],[48,41,37,41],[49,4,38,2],[49,8,38,8,"starts"],[49,14,38,14],[49,17,38,17,"cycles"],[49,23,38,23],[49,24,38,24,"map"],[49,27,38,27],[49,28,38,28,"c"],[49,29,38,29],[49,33,38,33,"c"],[49,34,38,34],[49,35,38,35,"start"],[49,40,38,40],[49,41,38,41],[49,42,38,42,"filter"],[49,48,38,48],[49,49,38,49,"Boolean"],[49,56,38,56],[49,57,38,57],[49,58,38,58,"sort"],[49,62,38,62],[49,63,38,63],[49,64,38,64],[50,4,39,2],[50,8,39,8,"last"],[50,12,39,12],[50,15,39,15,"starts"],[50,21,39,21],[50,22,39,22,"slice"],[50,27,39,27],[50,30,39,30],[50,31,39,31],[50,32,39,32],[50,33,39,33],[50,34,39,34],[51,4,40,2],[51,8,40,6],[51,9,40,7,"last"],[51,13,40,11],[51,15,40,13],[51,22,40,20],[51,26,40,24],[52,4,41,2],[52,8,41,8,"dt"],[52,10,41,10],[52,13,41,13],[52,17,41,17,"Date"],[52,21,41,21],[52,22,41,22,"last"],[52,26,41,26],[52,27,41,27],[53,4,42,2,"dt"],[53,6,42,4],[53,7,42,5,"setDate"],[53,14,42,12],[53,15,42,13,"dt"],[53,17,42,15],[53,18,42,16,"getDate"],[53,25,42,23],[53,26,42,24],[53,27,42,25],[53,30,42,28,"avg"],[53,33,42,31],[53,34,42,32],[54,4,43,2],[54,11,43,9,"dt"],[54,13,43,11],[55,2,44,0],[57,2,46,0],[58,2,47,7],[58,11,47,16,"getOvulationDate"],[58,27,47,32,"getOvulationDate"],[58,28,47,33,"cycles"],[58,34,47,48],[58,36,47,63],[59,4,48,2],[59,8,48,8,"next"],[59,12,48,12],[59,15,48,15,"predictNextStart"],[59,31,48,31],[59,32,48,32,"cycles"],[59,38,48,38],[59,39,48,39],[60,4,49,2],[60,8,49,6],[60,9,49,7,"next"],[60,13,49,11],[60,15,49,13],[60,22,49,20],[60,26,49,24],[61,4,50,2],[61,8,50,8,"luteal"],[61,14,50,14],[61,17,50,17],[61,19,50,19],[61,20,50,20],[61,21,50,21],[62,4,51,2],[62,8,51,8,"ov"],[62,10,51,10],[62,13,51,13],[62,17,51,17,"Date"],[62,21,51,21],[62,22,51,22,"next"],[62,26,51,26],[62,27,51,27],[63,4,52,2,"ov"],[63,6,52,4],[63,7,52,5,"setDate"],[63,14,52,12],[63,15,52,13,"ov"],[63,17,52,15],[63,18,52,16,"getDate"],[63,25,52,23],[63,26,52,24],[63,27,52,25],[63,30,52,28,"luteal"],[63,36,52,34],[63,37,52,35],[64,4,53,2],[64,11,53,9,"ov"],[64,13,53,11],[65,2,54,0],[66,2,56,7],[66,11,56,16,"getFertileWindow"],[66,27,56,32,"getFertileWindow"],[66,28,56,33,"cycles"],[66,34,56,48],[66,36,56,85],[67,4,57,2],[67,8,57,8,"ov"],[67,10,57,10],[67,13,57,13,"getOvulationDate"],[67,29,57,29],[67,30,57,30,"cycles"],[67,36,57,36],[67,37,57,37],[68,4,58,2],[68,8,58,6],[68,9,58,7,"ov"],[68,11,58,9],[68,13,58,11],[68,20,58,18],[68,24,58,22],[69,4,59,2],[69,8,59,8,"start"],[69,13,59,13],[69,16,59,16],[69,20,59,20,"Date"],[69,24,59,24],[69,25,59,25,"ov"],[69,27,59,27],[69,28,59,28],[70,4,60,2,"start"],[70,9,60,7],[70,10,60,8,"setDate"],[70,17,60,15],[70,18,60,16,"start"],[70,23,60,21],[70,24,60,22,"getDate"],[70,31,60,29],[70,32,60,30],[70,33,60,31],[70,36,60,34],[70,37,60,35],[70,38,60,36],[71,4,61,2],[71,8,61,8,"end"],[71,11,61,11],[71,14,61,14],[71,18,61,18,"Date"],[71,22,61,22],[71,23,61,23,"ov"],[71,25,61,25],[71,26,61,26],[71,27,61,27],[71,28,61,28],[72,4,62,2],[72,11,62,9],[73,6,62,11,"start"],[73,11,62,16],[74,6,62,18,"end"],[75,4,62,22],[75,5,62,23],[76,2,63,0],[77,2,65,7],[77,11,65,16,"isWithin"],[77,19,65,24,"isWithin"],[77,20,65,25,"date"],[77,24,65,35],[77,26,65,37,"start"],[77,31,65,48],[77,33,65,50,"end"],[77,36,65,59],[77,38,65,61],[78,4,66,2],[78,8,66,8,"d"],[78,9,66,9],[78,12,66,12],[78,16,66,16,"Date"],[78,20,66,20],[78,21,66,21,"date"],[78,25,66,25],[78,26,66,26,"getFullYear"],[78,37,66,37],[78,38,66,38],[78,39,66,39],[78,41,66,41,"date"],[78,45,66,45],[78,46,66,46,"getMonth"],[78,54,66,54],[78,55,66,55],[78,56,66,56],[78,58,66,58,"date"],[78,62,66,62],[78,63,66,63,"getDate"],[78,70,66,70],[78,71,66,71],[78,72,66,72],[78,73,66,73],[79,4,67,2],[79,8,67,8,"s"],[79,9,67,9],[79,12,67,12],[79,16,67,16,"Date"],[79,20,67,20],[79,21,67,21,"start"],[79,26,67,26],[79,27,67,27,"getFullYear"],[79,38,67,38],[79,39,67,39],[79,40,67,40],[79,42,67,42,"start"],[79,47,67,47],[79,48,67,48,"getMonth"],[79,56,67,56],[79,57,67,57],[79,58,67,58],[79,60,67,60,"start"],[79,65,67,65],[79,66,67,66,"getDate"],[79,73,67,73],[79,74,67,74],[79,75,67,75],[79,76,67,76],[80,4,68,2],[80,8,68,8,"e"],[80,9,68,9],[80,12,68,12],[80,16,68,16,"Date"],[80,20,68,20],[80,21,68,21,"end"],[80,24,68,24],[80,25,68,25,"getFullYear"],[80,36,68,36],[80,37,68,37],[80,38,68,38],[80,40,68,40,"end"],[80,43,68,43],[80,44,68,44,"getMonth"],[80,52,68,52],[80,53,68,53],[80,54,68,54],[80,56,68,56,"end"],[80,59,68,59],[80,60,68,60,"getDate"],[80,67,68,67],[80,68,68,68],[80,69,68,69],[80,70,68,70],[81,4,69,2],[81,11,69,9],[81,12,69,10,"d"],[81,13,69,11],[81,17,69,15],[81,18,69,16,"s"],[81,19,69,17],[81,23,69,21],[81,24,69,22,"d"],[81,25,69,23],[81,29,69,27],[81,30,69,28,"e"],[81,31,69,29],[82,2,70,0],[83,2,72,7],[83,11,72,16,"buildPeriodDaysSet"],[83,29,72,34,"buildPeriodDaysSet"],[83,30,72,35,"cycles"],[83,36,72,50],[83,38,72,83],[84,4,72,83],[84,8,72,52,"periodLength"],[84,20,72,64],[84,23,72,64,"arguments"],[84,32,72,64],[84,33,72,64,"length"],[84,39,72,64],[84,47,72,64,"arguments"],[84,56,72,64],[84,64,72,64,"undefined"],[84,73,72,64],[84,76,72,64,"arguments"],[84,85,72,64],[84,91,72,67],[84,92,72,68],[85,4,73,2],[85,8,73,8,"set"],[85,11,73,11],[85,14,73,14],[85,18,73,18,"Set"],[85,21,73,21],[85,22,73,30],[85,23,73,31],[86,4,74,2],[86,9,74,7],[86,13,74,13,"c"],[86,14,74,14],[86,18,74,18,"cycles"],[86,24,74,24],[86,26,74,26],[87,6,75,4],[87,10,75,10,"start"],[87,15,75,15],[87,18,75,18],[87,22,75,22,"Date"],[87,26,75,26],[87,27,75,27,"c"],[87,28,75,28],[87,29,75,29,"start"],[87,34,75,34],[87,35,75,35],[88,6,76,4],[88,10,76,10,"len"],[88,13,76,13],[88,16,76,16,"Math"],[88,20,76,20],[88,21,76,21,"max"],[88,24,76,24],[88,25,76,25],[88,26,76,26],[88,28,76,28,"periodLength"],[88,40,76,40],[88,41,76,41],[89,6,77,4],[89,10,77,10,"end"],[89,13,77,13],[89,16,77,16],[89,20,77,20,"Date"],[89,24,77,24],[89,25,77,25,"start"],[89,30,77,30],[89,31,77,31],[90,6,78,4,"end"],[90,9,78,7],[90,10,78,8,"setDate"],[90,17,78,15],[90,18,78,16,"start"],[90,23,78,21],[90,24,78,22,"getDate"],[90,31,78,29],[90,32,78,30],[90,33,78,31],[90,36,78,34,"len"],[90,39,78,37],[90,42,78,40],[90,43,78,41],[90,44,78,42],[91,6,79,4],[91,10,79,8,"cur"],[91,13,79,11],[91,16,79,14],[91,20,79,18,"Date"],[91,24,79,22],[91,25,79,23,"start"],[91,30,79,28],[91,31,79,29],[92,6,80,4],[92,13,80,11],[92,14,80,12,"cur"],[92,17,80,15],[92,21,80,19],[92,22,80,20,"end"],[92,25,80,23],[92,27,80,25],[93,8,80,27,"set"],[93,11,80,30],[93,12,80,31,"add"],[93,15,80,34],[93,16,80,35,"toKey"],[93,21,80,40],[93,22,80,41,"cur"],[93,25,80,44],[93,26,80,45],[93,27,80,46],[94,8,80,48,"cur"],[94,11,80,51],[94,12,80,52,"setDate"],[94,19,80,59],[94,20,80,60,"cur"],[94,23,80,63],[94,24,80,64,"getDate"],[94,31,80,71],[94,32,80,72],[94,33,80,73],[94,36,80,74],[94,37,80,75],[94,38,80,76],[95,6,80,78],[96,4,81,2],[97,4,82,2],[97,11,82,9,"set"],[97,14,82,12],[98,2,83,0],[99,2,85,7],[99,11,85,16,"markersForMonth"],[99,26,85,31,"markersForMonth"],[99,27,85,32,"year"],[99,31,85,44],[99,33,85,46,"month"],[99,38,85,59],[99,40,85,61,"cycles"],[99,46,85,76],[99,48,85,78],[100,4,86,2],[100,8,86,8,"today"],[100,13,86,13],[100,16,86,16],[100,20,86,20,"Date"],[100,24,86,24],[100,25,86,25],[100,26,86,26],[101,4,87,2],[101,8,87,8,"avgCycleLen"],[101,19,87,19],[101,22,87,22,"averageStartToStart"],[101,41,87,41],[101,42,87,42,"cycles"],[101,48,87,48],[101,49,87,49],[102,4,88,2],[102,8,88,8,"avgPeriodLen"],[102,20,88,20],[102,23,88,23,"getAveragePeriodLengthDays"],[102,49,88,49],[102,50,88,50,"cycles"],[102,56,88,56],[102,57,88,57],[103,4,89,2],[103,8,89,8,"expectedNext"],[103,20,89,20],[103,23,89,23,"predictNextStart"],[103,39,89,39],[103,40,89,40,"cycles"],[103,46,89,46],[103,47,89,47],[104,4,90,2],[104,8,90,8,"fertile"],[104,15,90,15],[104,18,90,18,"getFertileWindow"],[104,34,90,34],[104,35,90,35,"cycles"],[104,41,90,41],[104,42,90,42],[105,4,91,2],[105,8,91,8,"ovulation"],[105,17,91,17],[105,20,91,20,"getOvulationDate"],[105,36,91,36],[105,37,91,37,"cycles"],[105,43,91,43],[105,44,91,44],[106,4,93,2],[106,8,93,8,"days"],[106,12,93,20],[106,15,93,23],[106,17,93,25],[107,4,94,2],[107,8,94,8,"d"],[107,9,94,9],[107,12,94,12],[107,16,94,16,"Date"],[107,20,94,20],[107,21,94,21,"year"],[107,25,94,25],[107,27,94,27,"month"],[107,32,94,32],[107,34,94,34],[107,35,94,35],[107,36,94,36],[108,4,95,2],[108,11,95,9,"d"],[108,12,95,10],[108,13,95,11,"getMonth"],[108,21,95,19],[108,22,95,20],[108,23,95,21],[108,28,95,26,"month"],[108,33,95,31],[108,35,95,33],[109,6,95,35,"days"],[109,10,95,39],[109,11,95,40,"push"],[109,15,95,44],[109,16,95,45],[109,20,95,49,"Date"],[109,24,95,53],[109,25,95,54,"d"],[109,26,95,55],[109,27,95,56],[109,28,95,57],[110,6,95,59,"d"],[110,7,95,60],[110,8,95,61,"setDate"],[110,15,95,68],[110,16,95,69,"d"],[110,17,95,70],[110,18,95,71,"getDate"],[110,25,95,78],[110,26,95,79],[110,27,95,80],[110,30,95,81],[110,31,95,82],[110,32,95,83],[111,4,95,85],[113,4,97,2],[114,4,98,2],[114,8,98,8,"confirmed"],[114,17,98,17],[114,20,98,20],[114,24,98,24,"Set"],[114,27,98,27],[114,28,98,36],[114,29,98,37],[115,4,99,2],[115,8,99,8,"upcoming"],[115,16,99,16],[115,19,99,19],[115,23,99,23,"Set"],[115,26,99,26],[115,27,99,35],[115,28,99,36],[116,4,99,37],[116,8,99,37,"_loop"],[116,13,99,37],[116,25,99,37,"_loop"],[116,26,99,37],[116,28,101,26],[117,6,102,4],[117,10,102,10,"s"],[117,11,102,11],[117,14,102,14],[117,18,102,18,"Date"],[117,22,102,22],[117,23,102,23,"c"],[117,24,102,24],[117,25,102,25,"start"],[117,30,102,30],[117,31,102,31],[118,6,103,4],[118,10,103,10,"end"],[118,13,103,13],[118,16,103,16,"c"],[118,17,103,17],[118,18,103,18,"end"],[118,21,103,21],[118,24,103,24],[118,28,103,28,"Date"],[118,32,103,32],[118,33,103,33,"c"],[118,34,103,34],[118,35,103,35,"end"],[118,38,103,38],[118,39,103,39],[118,42,103,42],[118,43,103,43],[118,49,103,49],[119,8,103,51],[119,12,103,57,"tmp"],[119,15,103,60],[119,18,103,63],[119,22,103,67,"Date"],[119,26,103,71],[119,27,103,72,"s"],[119,28,103,73],[119,29,103,74],[120,8,103,76,"tmp"],[120,11,103,79],[120,12,103,80,"setDate"],[120,19,103,87],[120,20,103,88,"tmp"],[120,23,103,91],[120,24,103,92,"getDate"],[120,31,103,99],[120,32,103,100],[120,33,103,101],[120,36,103,104,"avgPeriodLen"],[120,48,103,116],[120,51,103,119],[120,52,103,120],[120,53,103,121],[121,8,103,123],[121,15,103,130,"tmp"],[121,18,103,133],[122,6,103,135],[122,7,103,136],[122,9,103,138],[122,10,103,139],[123,6,104,4],[123,10,104,8,"cur"],[123,13,104,11],[123,16,104,14],[123,20,104,18,"Date"],[123,24,104,22],[123,25,104,23,"s"],[123,26,104,24],[123,27,104,25],[124,6,105,4],[124,13,105,11],[124,14,105,12,"cur"],[124,17,105,15],[124,21,105,19],[124,22,105,20,"end"],[124,25,105,23],[124,27,105,25],[125,8,106,6],[125,12,106,12,"key"],[125,15,106,15],[125,18,106,18,"toKey"],[125,23,106,23],[125,24,106,24,"cur"],[125,27,106,27],[125,28,106,28],[126,8,107,6],[126,12,107,10],[126,13,107,11,"cur"],[126,16,107,14],[126,20,107,18],[126,21,107,19,"today"],[126,26,107,24],[126,28,107,26,"confirmed"],[126,37,107,35],[126,38,107,36,"add"],[126,41,107,39],[126,42,107,40,"key"],[126,45,107,43],[126,46,107,44],[126,47,107,45],[126,52,107,51,"upcoming"],[126,60,107,59],[126,61,107,60,"add"],[126,64,107,63],[126,65,107,64,"key"],[126,68,107,67],[126,69,107,68],[127,8,108,6,"cur"],[127,11,108,9],[127,12,108,10,"setDate"],[127,19,108,17],[127,20,108,18,"cur"],[127,23,108,21],[127,24,108,22,"getDate"],[127,31,108,29],[127,32,108,30],[127,33,108,31],[127,36,108,32],[127,37,108,33],[127,38,108,34],[128,6,109,4],[129,4,110,2],[129,5,110,3],[130,4,101,2],[130,9,101,7],[130,13,101,13,"c"],[130,14,101,14],[130,18,101,18,"cycles"],[130,24,101,24],[131,6,101,24,"_loop"],[131,11,101,24],[132,4,101,24],[133,4,112,2],[133,8,112,8,"period"],[133,14,112,14],[133,17,112,17],[133,21,112,21,"Set"],[133,24,112,24],[133,25,112,25,"days"],[133,29,112,29],[133,30,112,30,"filter"],[133,36,112,36],[133,37,112,37,"dd"],[133,39,112,39],[133,43,112,43,"confirmed"],[133,52,112,52],[133,53,112,53,"has"],[133,56,112,56],[133,57,112,57,"toKey"],[133,62,112,62],[133,63,112,63,"dd"],[133,65,112,65],[133,66,112,66],[133,67,112,67],[133,68,112,68],[133,69,112,69,"map"],[133,72,112,72],[133,73,112,73,"toKey"],[133,78,112,78],[133,79,112,79],[133,80,112,80],[134,4,113,2],[134,8,113,8,"upcomingPeriod"],[134,22,113,22],[134,25,113,25],[134,29,113,29,"Set"],[134,32,113,32],[134,33,113,33,"days"],[134,37,113,37],[134,38,113,38,"filter"],[134,44,113,44],[134,45,113,45,"dd"],[134,47,113,47],[134,51,113,51,"upcoming"],[134,59,113,59],[134,60,113,60,"has"],[134,63,113,63],[134,64,113,64,"toKey"],[134,69,113,69],[134,70,113,70,"dd"],[134,72,113,72],[134,73,113,73],[134,74,113,74],[134,75,113,75],[134,76,113,76,"map"],[134,79,113,79],[134,80,113,80,"toKey"],[134,85,113,85],[134,86,113,86],[134,87,113,87],[135,4,114,2],[135,8,114,8,"fertileSet"],[135,18,114,18],[135,21,114,21],[135,25,114,25,"Set"],[135,28,114,28],[135,29,114,29,"days"],[135,33,114,33],[135,34,114,34,"filter"],[135,40,114,40],[135,41,114,41,"dd"],[135,43,114,43],[135,47,114,47,"fertile"],[135,54,114,54],[135,58,114,58,"isWithin"],[135,66,114,66],[135,67,114,67,"dd"],[135,69,114,69],[135,71,114,71,"fertile"],[135,78,114,78],[135,79,114,79,"start"],[135,84,114,84],[135,86,114,86,"fertile"],[135,93,114,93],[135,94,114,94,"end"],[135,97,114,97],[135,98,114,98],[135,99,114,99],[135,100,114,100,"map"],[135,103,114,103],[135,104,114,104,"toKey"],[135,109,114,109],[135,110,114,110],[135,111,114,111],[136,4,115,2],[136,8,115,8,"ovulationSet"],[136,20,115,20],[136,23,115,23],[136,27,115,27,"Set"],[136,30,115,30],[136,31,115,31,"days"],[136,35,115,35],[136,36,115,36,"filter"],[136,42,115,42],[136,43,115,43,"dd"],[136,45,115,45],[136,49,115,49,"ovulation"],[136,58,115,58],[136,62,115,62,"toKey"],[136,67,115,67],[136,68,115,68,"dd"],[136,70,115,70],[136,71,115,71],[136,76,115,76,"toKey"],[136,81,115,81],[136,82,115,82,"ovulation"],[136,91,115,91],[136,92,115,92],[136,93,115,93],[136,94,115,94,"map"],[136,97,115,97],[136,98,115,98,"toKey"],[136,103,115,103],[136,104,115,104],[136,105,115,105],[137,4,116,2],[137,8,116,8,"expectedSet"],[137,19,116,19],[137,22,116,22],[137,26,116,26,"Set"],[137,29,116,29],[137,30,116,30,"days"],[137,34,116,34],[137,35,116,35,"filter"],[137,41,116,41],[137,42,116,42,"dd"],[137,44,116,44],[137,48,116,48,"expectedNext"],[137,60,116,60],[137,64,116,64,"toKey"],[137,69,116,69],[137,70,116,70,"dd"],[137,72,116,72],[137,73,116,73],[137,78,116,78,"toKey"],[137,83,116,83],[137,84,116,84,"expectedNext"],[137,96,116,96],[137,97,116,97],[137,98,116,98],[137,99,116,99,"map"],[137,102,116,102],[137,103,116,103,"toKey"],[137,108,116,108],[137,109,116,109],[137,110,116,110],[138,4,118,2],[138,11,118,9],[139,6,118,11,"period"],[139,12,118,17],[140,6,118,19,"upcomingPeriod"],[140,20,118,33],[141,6,118,35,"fertile"],[141,13,118,42],[141,15,118,44,"fertileSet"],[141,25,118,54],[142,6,118,56,"ovulation"],[142,15,118,65],[142,17,118,67,"ovulationSet"],[142,29,118,79],[143,6,118,81,"expected"],[143,14,118,89],[143,16,118,91,"expectedSet"],[143,27,118,102],[144,6,118,104,"avgCycleLen"],[144,17,118,115],[145,6,118,117,"avgPeriodLen"],[145,18,118,129],[146,6,118,131,"expectedNext"],[147,4,118,144],[147,5,118,145],[148,2,119,0],[149,0,119,1],[149,3]],"functionMap":{"names":["<global>","toKey","getAverageCycleLengthDays","cycles.filter$argument_0","cycles.filter.map$argument_0","last3.reduce$argument_0","getAveragePeriodLengthDays","completed.map$argument_0","averageStartToStart","predictNextStart","cycles.map$argument_0","getOvulationDate","getFertileWindow","isWithin","buildPeriodDaysSet","markersForMonth","<anonymous>","days.filter$argument_0"],"mappings":"AAA;qBCE,kHD;OEE;+BCC,YD,ME,YF;sCGU,UH;CFE;OME;kCHE,qBG;6BCE;GDG;6CDE,UC;CNC;OQE;CRE;OSE;4BCE,YD;CTM;OWG;CXO;OYE;CZO;OaE;CbK;OcE;CdW;OeE;2CCkB,6FD;qCES,8BF;6CEC,6BF;yCEC,yDF;2CEC,iDF;0CEC,uDF"}},"type":"js/module"}]}