{"dependencies":[{"name":"../WorkletEventHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":69},"end":{"line":3,"column":61,"index":130}}],"key":"588C2ttWmFfH+Cx2zV7Dtb/CLj8=","exportNames":["*"]}},{"name":"./useEvent","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":264},"end":{"line":6,"column":38,"index":302}}],"key":"agcKO4KjKVVd8qmhkCqgPk8SZT0=","exportNames":["*"]}},{"name":"./useHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":303},"end":{"line":7,"column":42,"index":345}}],"key":"4fwTVy9JjjGj2GzFTCIyp4pa48c=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useComposedEventHandler = useComposedEventHandler;\n  var _WorkletEventHandler = require(_dependencyMap[0]);\n  var _useEvent = require(_dependencyMap[1]);\n  var _useHandler2 = require(_dependencyMap[2]);\n  /**\n   * Lets you compose multiple event handlers based on\n   * [useEvent](https://docs.swmansion.com/react-native-reanimated/docs/advanced/useEvent)\n   * hook.\n   *\n   * @param handlers - An array of event handlers created using\n   *   [useEvent](https://docs.swmansion.com/react-native-reanimated/docs/advanced/useEvent)\n   *   hook.\n   * @returns An object you need to pass to a coresponding \"onEvent\" prop on an\n   *   `Animated` component (for example handlers responsible for `onScroll` event\n   *   go to `onScroll` prop).\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/useComposedEventHandler\n   */\n  // @ts-expect-error This overload is required by our API.\n  var _worklet_5537037102218_init_data = {\n    code: \"function reactNativeReanimated_useComposedEventHandlerTs1(event){const{workletsMap}=this.__closure;if(workletsMap[event.eventName]){workletsMap[event.eventName].forEach(function(worklet){return worklet(event);});}}\"\n  };\n  function useComposedEventHandler(handlers) {\n    // Record of handlers' worklets to calculate deps diffs. We use the record type to match the useHandler API requirements\n    var workletsRecord = {};\n    // Summed event names for registration\n    var composedEventNames = new Set();\n    // Map that holds worklets for specific handled events\n    var workletsMap = {};\n    handlers.filter(h => h !== null).forEach(handler => {\n      // EventHandlerProcessed is the return type of useEvent and has to be force casted to EventHandlerInternal, because we need WorkletEventHandler object\n      var _ref = handler,\n        workletEventHandler = _ref.workletEventHandler;\n      if (workletEventHandler instanceof _WorkletEventHandler.WorkletEventHandler) {\n        workletEventHandler.eventNames.forEach(eventName => {\n          composedEventNames.add(eventName);\n          if (workletsMap[eventName]) {\n            workletsMap[eventName].push(workletEventHandler.worklet);\n          } else {\n            workletsMap[eventName] = [workletEventHandler.worklet];\n          }\n          var handlerName = eventName + `${workletsMap[eventName].length}`;\n          workletsRecord[handlerName] = workletEventHandler.worklet;\n        });\n      }\n    });\n    var _useHandler = (0, _useHandler2.useHandler)(workletsRecord),\n      doDependenciesDiffer = _useHandler.doDependenciesDiffer;\n    return (0, _useEvent.useEvent)(function () {\n      var reactNativeReanimated_useComposedEventHandlerTs1 = function (event) {\n        if (workletsMap[event.eventName]) {\n          workletsMap[event.eventName].forEach(worklet => worklet(event));\n        }\n      };\n      reactNativeReanimated_useComposedEventHandlerTs1.__closure = {\n        workletsMap\n      };\n      reactNativeReanimated_useComposedEventHandlerTs1.__workletHash = 5537037102218;\n      reactNativeReanimated_useComposedEventHandlerTs1.__initData = _worklet_5537037102218_init_data;\n      return reactNativeReanimated_useComposedEventHandlerTs1;\n    }(), Array.from(composedEventNames), doDependenciesDiffer);\n  }\n});","lineCount":68,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"useComposedEventHandler"],[7,33,1,13],[7,36,1,13,"useComposedEventHandler"],[7,59,1,13],[8,2,3,0],[8,6,3,0,"_WorkletEventHandler"],[8,26,3,0],[8,29,3,0,"require"],[8,36,3,0],[8,37,3,0,"_dependencyMap"],[8,51,3,0],[9,2,6,0],[9,6,6,0,"_useEvent"],[9,15,6,0],[9,18,6,0,"require"],[9,25,6,0],[9,26,6,0,"_dependencyMap"],[9,40,6,0],[10,2,7,0],[10,6,7,0,"_useHandler2"],[10,18,7,0],[10,21,7,0,"require"],[10,28,7,0],[10,29,7,0,"_dependencyMap"],[10,43,7,0],[11,2,17,0],[12,0,18,0],[13,0,19,0],[14,0,20,0],[15,0,21,0],[16,0,22,0],[17,0,23,0],[18,0,24,0],[19,0,25,0],[20,0,26,0],[21,0,27,0],[22,0,28,0],[23,0,29,0],[24,2,30,0],[25,2,30,0],[25,6,30,0,"_worklet_5537037102218_init_data"],[25,38,30,0],[26,4,30,0,"code"],[26,8,30,0],[27,2,30,0],[28,2,38,7],[28,11,38,16,"useComposedEventHandler"],[28,34,38,39,"useComposedEventHandler"],[28,35,41,2,"handlers"],[28,43,41,60],[28,45,41,62],[29,4,42,2],[30,4,43,2],[30,8,43,8,"workletsRecord"],[30,22,43,55],[30,25,43,58],[30,26,43,59],[30,27,43,60],[31,4,44,2],[32,4,45,2],[32,8,45,8,"composedEventNames"],[32,26,45,26],[32,29,45,29],[32,33,45,33,"Set"],[32,36,45,36],[32,37,45,45],[32,38,45,46],[33,4,46,2],[34,4,47,2],[34,8,47,8,"workletsMap"],[34,19,49,3],[34,22,49,6],[34,23,49,7],[34,24,49,8],[35,4,51,2,"handlers"],[35,12,51,10],[35,13,52,5,"filter"],[35,19,52,11],[35,20,52,13,"h"],[35,21,52,14],[35,25,52,19,"h"],[35,26,52,20],[35,31,52,25],[35,35,52,29],[35,36,52,30],[35,37,53,5,"forEach"],[35,44,53,12],[35,45,53,14,"handler"],[35,52,53,21],[35,56,53,26],[36,6,54,6],[37,6,55,6],[37,10,55,6,"_ref"],[37,14,55,6],[37,17,56,8,"handler"],[37,24,56,15],[38,8,55,14,"workletEventHandler"],[38,27,55,33],[38,30,55,33,"_ref"],[38,34,55,33],[38,35,55,14,"workletEventHandler"],[38,54,55,33],[39,6,57,6],[39,10,57,10,"workletEventHandler"],[39,29,57,29],[39,41,57,41,"WorkletEventHandler"],[39,81,57,60],[39,83,57,62],[40,8,58,8,"workletEventHandler"],[40,27,58,27],[40,28,58,28,"eventNames"],[40,38,58,38],[40,39,58,39,"forEach"],[40,46,58,46],[40,47,58,48,"eventName"],[40,56,58,57],[40,60,58,62],[41,10,59,10,"composedEventNames"],[41,28,59,28],[41,29,59,29,"add"],[41,32,59,32],[41,33,59,33,"eventName"],[41,42,59,42],[41,43,59,43],[42,10,61,10],[42,14,61,14,"workletsMap"],[42,25,61,25],[42,26,61,26,"eventName"],[42,35,61,35],[42,36,61,36],[42,38,61,38],[43,12,62,12,"workletsMap"],[43,23,62,23],[43,24,62,24,"eventName"],[43,33,62,33],[43,34,62,34],[43,35,62,35,"push"],[43,39,62,39],[43,40,62,40,"workletEventHandler"],[43,59,62,59],[43,60,62,60,"worklet"],[43,67,62,67],[43,68,62,68],[44,10,63,10],[44,11,63,11],[44,17,63,17],[45,12,64,12,"workletsMap"],[45,23,64,23],[45,24,64,24,"eventName"],[45,33,64,33],[45,34,64,34],[45,37,64,37],[45,38,64,38,"workletEventHandler"],[45,57,64,57],[45,58,64,58,"worklet"],[45,65,64,65],[45,66,64,66],[46,10,65,10],[47,10,67,10],[47,14,67,16,"handlerName"],[47,25,67,27],[47,28,67,30,"eventName"],[47,37,67,39],[47,40,67,42],[47,43,67,45,"workletsMap"],[47,54,67,56],[47,55,67,57,"eventName"],[47,64,67,66],[47,65,67,67],[47,66,67,68,"length"],[47,72,67,74],[47,74,67,76],[48,10,68,10,"workletsRecord"],[48,24,68,24],[48,25,68,25,"handlerName"],[48,36,68,36],[48,37,68,37],[48,40,69,12,"workletEventHandler"],[48,59,69,31],[48,60,69,32,"worklet"],[48,67,69,58],[49,8,70,8],[49,9,70,9],[49,10,70,10],[50,6,71,6],[51,4,72,4],[51,5,72,5],[51,6,72,6],[52,4,74,2],[52,8,74,2,"_useHandler"],[52,19,74,2],[52,22,74,35],[52,26,74,35,"useHandler"],[52,49,74,45],[52,51,74,46,"workletsRecord"],[52,65,74,60],[52,66,74,61],[53,6,74,10,"doDependenciesDiffer"],[53,26,74,30],[53,29,74,30,"_useHandler"],[53,40,74,30],[53,41,74,10,"doDependenciesDiffer"],[53,61,74,30],[54,4,76,2],[54,11,76,9],[54,15,76,9,"useEvent"],[54,33,76,17],[54,35,77,4],[55,6,77,4],[55,10,77,4,"reactNativeReanimated_useComposedEventHandlerTs1"],[55,58,77,4],[55,70,77,4,"reactNativeReanimated_useComposedEventHandlerTs1"],[55,71,77,5,"event"],[55,76,77,10],[55,78,77,15],[56,8,79,6],[56,12,79,10,"workletsMap"],[56,23,79,21],[56,24,79,22,"event"],[56,29,79,27],[56,30,79,28,"eventName"],[56,39,79,37],[56,40,79,38],[56,42,79,40],[57,10,80,8,"workletsMap"],[57,21,80,19],[57,22,80,20,"event"],[57,27,80,25],[57,28,80,26,"eventName"],[57,37,80,35],[57,38,80,36],[57,39,80,37,"forEach"],[57,46,80,44],[57,47,80,46,"worklet"],[57,54,80,53],[57,58,80,58,"worklet"],[57,65,80,65],[57,66,80,66,"event"],[57,71,80,71],[57,72,80,72],[57,73,80,73],[58,8,81,6],[59,6,82,4],[59,7,82,5],[60,6,82,5,"reactNativeReanimated_useComposedEventHandlerTs1"],[60,54,82,5],[60,55,82,5,"__closure"],[60,64,82,5],[61,8,82,5,"workletsMap"],[62,6,82,5],[63,6,82,5,"reactNativeReanimated_useComposedEventHandlerTs1"],[63,54,82,5],[63,55,82,5,"__workletHash"],[63,68,82,5],[64,6,82,5,"reactNativeReanimated_useComposedEventHandlerTs1"],[64,54,82,5],[64,55,82,5,"__initData"],[64,65,82,5],[64,68,82,5,"_worklet_5537037102218_init_data"],[64,100,82,5],[65,6,82,5],[65,13,82,5,"reactNativeReanimated_useComposedEventHandlerTs1"],[65,61,82,5],[66,4,82,5],[66,5,77,4],[66,9,83,4,"Array"],[66,14,83,9],[66,15,83,10,"from"],[66,19,83,14],[66,20,83,15,"composedEventNames"],[66,38,83,33],[66,39,83,34],[66,41,84,4,"doDependenciesDiffer"],[66,61,85,2],[66,62,85,3],[67,2,86,0],[68,0,86,1],[68,3]],"functionMap":{"names":["<global>","useComposedEventHandler","handlers.filter$argument_0","handlers.filter.forEach$argument_0","workletEventHandler.eventNames.forEach$argument_0","useEvent$argument_0","workletsMap.event.eventName.forEach$argument_0"],"mappings":"AAA;OCqC;YCc,iBD;aEC;+CCK;SDY;KFE;IIK;6CCG,2BD;KJE;CDI"}},"type":"js/module"}]}