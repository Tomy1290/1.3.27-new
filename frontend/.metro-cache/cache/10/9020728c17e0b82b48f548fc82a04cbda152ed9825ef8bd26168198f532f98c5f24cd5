{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getFileExtension = getFileExtension;\n  exports.getFilename = getFilename;\n  exports.getManifestBaseUrl = getManifestBaseUrl;\n  function getFilename(url) {\n    var _URL = new URL(url, 'https://e'),\n      pathname = _URL.pathname,\n      searchParams = _URL.searchParams;\n    // When attached to a dev server, we use `unstable_path` to represent the file path. This ensures\n    // the file name is not canonicalized by the browser.\n    // NOTE(EvanBacon): This is technically not tied to `__DEV__` as it's possible to use this while bundling in production\n    // mode.\n\n    return getBasename(pathname);\n  }\n  function getBasename(pathname) {\n    return pathname.substring(pathname.lastIndexOf('/') + 1);\n  }\n  function getFileExtension(url) {\n    var filename = getFilename(url);\n    var dotIndex = filename.lastIndexOf('.');\n    // Ignore leading dots for hidden files\n    return dotIndex > 0 ? filename.substring(dotIndex) : '';\n  }\n  /**\n   * Returns the base URL from a manifest's URL. For example, given a manifest hosted at\n   * https://example.com/app/manifest.json, the base URL would be https://example.com/app/. Query\n   * parameters and fragments also are removed.\n   *\n   * For an Expo-hosted project with a manifest hosted at https://exp.host/@user/project/index.exp, the\n   * base URL would be https://exp.host/@user/project.\n   *\n   * We also normalize the \"exp\" protocol to \"http\" to handle internal URLs with the Expo schemes used\n   * to tell the OS to open the URLs in the the Expo client.\n   */\n  function getManifestBaseUrl(manifestUrl) {\n    var urlObject = new URL(manifestUrl);\n    var nextProtocol = urlObject.protocol;\n    // Change the scheme to http(s) if it is exp(s)\n    if (nextProtocol === 'exp:') {\n      nextProtocol = 'http:';\n    } else if (nextProtocol === 'exps:') {\n      nextProtocol = 'https:';\n    }\n    urlObject.protocol = nextProtocol;\n    // Trim filename, query parameters, and fragment, if any\n    var directory = urlObject.pathname.substring(0, urlObject.pathname.lastIndexOf('/') + 1);\n    urlObject.pathname = directory;\n    urlObject.search = '';\n    urlObject.hash = '';\n    // The URL spec doesn't allow for changing the protocol to `http` or `https`\n    // without a port set so instead, we'll just swap the protocol manually.\n    return urlObject.protocol !== nextProtocol ? urlObject.href.replace(urlObject.protocol, nextProtocol) : urlObject.href;\n  }\n});","lineCount":58,"map":[[8,2,1,7],[8,11,1,16,"getFilename"],[8,22,1,27,"getFilename"],[8,23,1,28,"url"],[8,26,1,31],[8,28,1,33],[9,4,2,4],[9,8,2,4,"_URL"],[9,12,2,4],[9,15,2,39],[9,19,2,43,"URL"],[9,22,2,46],[9,23,2,47,"url"],[9,26,2,50],[9,28,2,52],[9,39,2,63],[9,40,2,64],[10,6,2,12,"pathname"],[10,14,2,20],[10,17,2,20,"_URL"],[10,21,2,20],[10,22,2,12,"pathname"],[10,30,2,20],[11,6,2,22,"searchParams"],[11,18,2,34],[11,21,2,34,"_URL"],[11,25,2,34],[11,26,2,22,"searchParams"],[11,38,2,34],[12,4,3,4],[13,4,4,4],[14,4,5,4],[15,4,6,4],[17,4,13,4],[17,11,13,11,"getBasename"],[17,22,13,22],[17,23,13,23,"pathname"],[17,31,13,31],[17,32,13,32],[18,2,14,0],[19,2,15,0],[19,11,15,9,"getBasename"],[19,22,15,20,"getBasename"],[19,23,15,21,"pathname"],[19,31,15,29],[19,33,15,31],[20,4,16,4],[20,11,16,11,"pathname"],[20,19,16,19],[20,20,16,20,"substring"],[20,29,16,29],[20,30,16,30,"pathname"],[20,38,16,38],[20,39,16,39,"lastIndexOf"],[20,50,16,50],[20,51,16,51],[20,54,16,54],[20,55,16,55],[20,58,16,58],[20,59,16,59],[20,60,16,60],[21,2,17,0],[22,2,18,7],[22,11,18,16,"getFileExtension"],[22,27,18,32,"getFileExtension"],[22,28,18,33,"url"],[22,31,18,36],[22,33,18,38],[23,4,19,4],[23,8,19,10,"filename"],[23,16,19,18],[23,19,19,21,"getFilename"],[23,30,19,32],[23,31,19,33,"url"],[23,34,19,36],[23,35,19,37],[24,4,20,4],[24,8,20,10,"dotIndex"],[24,16,20,18],[24,19,20,21,"filename"],[24,27,20,29],[24,28,20,30,"lastIndexOf"],[24,39,20,41],[24,40,20,42],[24,43,20,45],[24,44,20,46],[25,4,21,4],[26,4,22,4],[26,11,22,11,"dotIndex"],[26,19,22,19],[26,22,22,22],[26,23,22,23],[26,26,22,26,"filename"],[26,34,22,34],[26,35,22,35,"substring"],[26,44,22,44],[26,45,22,45,"dotIndex"],[26,53,22,53],[26,54,22,54],[26,57,22,57],[26,59,22,59],[27,2,23,0],[28,2,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,0,28,0],[33,0,29,0],[34,0,30,0],[35,0,31,0],[36,0,32,0],[37,0,33,0],[38,0,34,0],[39,2,35,7],[39,11,35,16,"getManifestBaseUrl"],[39,29,35,34,"getManifestBaseUrl"],[39,30,35,35,"manifestUrl"],[39,41,35,46],[39,43,35,48],[40,4,36,4],[40,8,36,10,"urlObject"],[40,17,36,19],[40,20,36,22],[40,24,36,26,"URL"],[40,27,36,29],[40,28,36,30,"manifestUrl"],[40,39,36,41],[40,40,36,42],[41,4,37,4],[41,8,37,8,"nextProtocol"],[41,20,37,20],[41,23,37,23,"urlObject"],[41,32,37,32],[41,33,37,33,"protocol"],[41,41,37,41],[42,4,38,4],[43,4,39,4],[43,8,39,8,"nextProtocol"],[43,20,39,20],[43,25,39,25],[43,31,39,31],[43,33,39,33],[44,6,40,8,"nextProtocol"],[44,18,40,20],[44,21,40,23],[44,28,40,30],[45,4,41,4],[45,5,41,5],[45,11,42,9],[45,15,42,13,"nextProtocol"],[45,27,42,25],[45,32,42,30],[45,39,42,37],[45,41,42,39],[46,6,43,8,"nextProtocol"],[46,18,43,20],[46,21,43,23],[46,29,43,31],[47,4,44,4],[48,4,45,4,"urlObject"],[48,13,45,13],[48,14,45,14,"protocol"],[48,22,45,22],[48,25,45,25,"nextProtocol"],[48,37,45,37],[49,4,46,4],[50,4,47,4],[50,8,47,10,"directory"],[50,17,47,19],[50,20,47,22,"urlObject"],[50,29,47,31],[50,30,47,32,"pathname"],[50,38,47,40],[50,39,47,41,"substring"],[50,48,47,50],[50,49,47,51],[50,50,47,52],[50,52,47,54,"urlObject"],[50,61,47,63],[50,62,47,64,"pathname"],[50,70,47,72],[50,71,47,73,"lastIndexOf"],[50,82,47,84],[50,83,47,85],[50,86,47,88],[50,87,47,89],[50,90,47,92],[50,91,47,93],[50,92,47,94],[51,4,48,4,"urlObject"],[51,13,48,13],[51,14,48,14,"pathname"],[51,22,48,22],[51,25,48,25,"directory"],[51,34,48,34],[52,4,49,4,"urlObject"],[52,13,49,13],[52,14,49,14,"search"],[52,20,49,20],[52,23,49,23],[52,25,49,25],[53,4,50,4,"urlObject"],[53,13,50,13],[53,14,50,14,"hash"],[53,18,50,18],[53,21,50,21],[53,23,50,23],[54,4,51,4],[55,4,52,4],[56,4,53,4],[56,11,53,11,"urlObject"],[56,20,53,20],[56,21,53,21,"protocol"],[56,29,53,29],[56,34,53,34,"nextProtocol"],[56,46,53,46],[56,49,54,10,"urlObject"],[56,58,54,19],[56,59,54,20,"href"],[56,63,54,24],[56,64,54,25,"replace"],[56,71,54,32],[56,72,54,33,"urlObject"],[56,81,54,42],[56,82,54,43,"protocol"],[56,90,54,51],[56,92,54,53,"nextProtocol"],[56,104,54,65],[56,105,54,66],[56,108,55,10,"urlObject"],[56,117,55,19],[56,118,55,20,"href"],[56,122,55,24],[57,2,56,0],[58,0,56,1],[58,3]],"functionMap":{"names":["<global>","getFilename","getBasename","getFileExtension","getManifestBaseUrl"],"mappings":"AAA,OC;CDa;AEC;CFE;OGC;CHK;OIY;CJqB"}},"type":"js/module"}]}