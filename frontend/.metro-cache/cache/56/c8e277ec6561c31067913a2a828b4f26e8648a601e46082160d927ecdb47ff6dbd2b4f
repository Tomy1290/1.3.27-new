{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"./commonTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":68},"end":{"line":3,"column":50,"index":118}}],"key":"+1Up2ERDMxkqzy1yjP2acBRtCSM=","exportNames":["*"]}},{"name":"./errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":119},"end":{"line":4,"column":43,"index":162}}],"key":"rEld05quROH+iA6QLT6kkvqJ/qc=","exportNames":["*"]}},{"name":"./PlatformChecker","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":163},"end":{"line":5,"column":59,"index":222}}],"key":"O136KS8LvzB4pufOIvMCitL6KOc=","exportNames":["*"]}},{"name":"./ReanimatedModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":223},"end":{"line":6,"column":54,"index":277}}],"key":"oecxEvQmWRmzTP60VuKAoww/f/4=","exportNames":["*"]}},{"name":"./shareables","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":278},"end":{"line":10,"column":22,"index":375}}],"key":"V8GJV/2wCfEKa73+4dIdiUi/ZbE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.callMicrotasks = undefined;\n  exports.executeOnUIRuntimeSync = executeOnUIRuntimeSync;\n  exports.setupMicrotasks = exports.runOnUIImmediately = exports.runOnUI = exports.runOnJS = undefined;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _commonTypes = require(_dependencyMap[2]);\n  var _errors = require(_dependencyMap[3]);\n  var _PlatformChecker = require(_dependencyMap[4]);\n  var _ReanimatedModule = require(_dependencyMap[5]);\n  var _shareables = require(_dependencyMap[6]);\n  var IS_JEST = (0, _PlatformChecker.isJest)();\n  var SHOULD_BE_USE_WEB = (0, _PlatformChecker.shouldBeUseWeb)();\n\n  /** An array of [worklet, args] pairs. */\n  var _runOnUIQueue = [];\n  var _worklet_7711689936114_init_data = {\n    code: \"function setupMicrotasks_reactNativeReanimated_threadsTs1(){let microtasksQueue=[];let isExecutingMicrotasksQueue=false;global.queueMicrotask=function(callback){microtasksQueue.push(callback);};global.__callMicrotasks=function(){if(isExecutingMicrotasksQueue){return;}try{isExecutingMicrotasksQueue=true;for(let index=0;index<microtasksQueue.length;index+=1){microtasksQueue[index]();}microtasksQueue=[];global._maybeFlushUIUpdatesQueue();}finally{isExecutingMicrotasksQueue=false;}};}\"\n  };\n  var setupMicrotasks = exports.setupMicrotasks = function () {\n    var setupMicrotasks = function () {\n      var microtasksQueue = [];\n      var isExecutingMicrotasksQueue = false;\n      global.queueMicrotask = callback => {\n        microtasksQueue.push(callback);\n      };\n      global.__callMicrotasks = () => {\n        if (isExecutingMicrotasksQueue) {\n          return;\n        }\n        try {\n          isExecutingMicrotasksQueue = true;\n          for (var index = 0; index < microtasksQueue.length; index += 1) {\n            // we use classic 'for' loop because the size of the currentTasks array may change while executing some of the callbacks due to queueMicrotask calls\n            microtasksQueue[index]();\n          }\n          microtasksQueue = [];\n          global._maybeFlushUIUpdatesQueue();\n        } finally {\n          isExecutingMicrotasksQueue = false;\n        }\n      };\n    };\n    setupMicrotasks.__closure = {};\n    setupMicrotasks.__workletHash = 7711689936114;\n    setupMicrotasks.__initData = _worklet_7711689936114_init_data;\n    return setupMicrotasks;\n  }();\n  var _worklet_14401793871566_init_data = {\n    code: \"function callMicrotasksOnUIThread_reactNativeReanimated_threadsTs2(){global.__callMicrotasks();}\"\n  };\n  var callMicrotasksOnUIThread = function () {\n    var callMicrotasksOnUIThread = function () {\n      global.__callMicrotasks();\n    };\n    callMicrotasksOnUIThread.__closure = {};\n    callMicrotasksOnUIThread.__workletHash = 14401793871566;\n    callMicrotasksOnUIThread.__initData = _worklet_14401793871566_init_data;\n    return callMicrotasksOnUIThread;\n  }();\n  var callMicrotasks = exports.callMicrotasks = SHOULD_BE_USE_WEB ? () => {\n    // on web flushing is a noop as immediates are handled by the browser\n  } : callMicrotasksOnUIThread;\n\n  /**\n   * Lets you asynchronously run\n   * [workletized](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#to-workletize)\n   * functions on the [UI\n   * thread](https://docs.swmansion.com/react-native-reanimated/docs/threading/runOnUI).\n   *\n   * This method does not schedule the work immediately but instead waits for\n   * other worklets to be scheduled within the same JS loop. It uses\n   * queueMicrotask to schedule all the worklets at once making sure they will run\n   * within the same frame boundaries on the UI thread.\n   *\n   * @param fun - A reference to a function you want to execute on the [UI\n   *   thread](https://docs.swmansion.com/react-native-reanimated/docs/threading/runOnUI)\n   *   from the [JavaScript\n   *   thread](https://docs.swmansion.com/react-native-reanimated/docs/threading/runOnUI).\n   * @returns A function that accepts arguments for the function passed as the\n   *   first argument.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/threading/runOnUI\n   */\n  // @ts-expect-error This overload is correct since it's what user sees in his code\n  // before it's transformed by Reanimated Babel plugin.\n  var _worklet_17427314962164_init_data = {\n    code: \"function runOnUI_reactNativeReanimated_threadsTs3(worklet){const{__DEV__,SHOULD_BE_USE_WEB,isWorkletFunction,IS_JEST,ReanimatedModule,makeShareableCloneRecursive,callMicrotasks}=this.__closure;if(__DEV__&&!SHOULD_BE_USE_WEB&&_WORKLET){throw new ReanimatedError('`runOnUI` cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.');}if(__DEV__&&!SHOULD_BE_USE_WEB&&!isWorkletFunction(worklet)){throw new ReanimatedError('`runOnUI` can only be used with worklets.');}return function(...args){if(IS_JEST){ReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function(){'worklet';worklet(...args);}));return;}if(__DEV__){makeShareableCloneRecursive(worklet);makeShareableCloneRecursive(args);}_runOnUIQueue.push([worklet,args]);if(_runOnUIQueue.length===1){queueMicrotask(function(){const queue=_runOnUIQueue;_runOnUIQueue=[];ReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function(){'worklet';queue.forEach(function([worklet,args]){worklet(...args);});callMicrotasks();}));});}};}\"\n  };\n  var _worklet_13504428753407_init_data = {\n    code: \"function reactNativeReanimated_threadsTs4(){const{worklet,args}=this.__closure;worklet(...args);}\"\n  };\n  var _worklet_12268532644971_init_data = {\n    code: \"function reactNativeReanimated_threadsTs5(){const{queue,callMicrotasks}=this.__closure;queue.forEach(function([worklet,args]){worklet(...args);});callMicrotasks();}\"\n  };\n  var runOnUI = exports.runOnUI = function () {\n    var runOnUI = function (worklet) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        if (IS_JEST) {\n          // Mocking time in Jest is tricky as both requestAnimationFrame and queueMicrotask\n          // callbacks run on the same queue and can be interleaved. There is no way\n          // to flush particular queue in Jest and the only control over mocked timers\n          // is by using jest.advanceTimersByTime() method which advances all types\n          // of timers including immediate and animation callbacks. Ideally we'd like\n          // to have some way here to schedule work along with React updates, but\n          // that's not possible, and hence in Jest environment instead of using scheduling\n          // mechanism we just schedule the work ommiting the queue. This is ok for the\n          // uses that we currently have but may not be ok for future tests that we write.\n          _ReanimatedModule.ReanimatedModule.scheduleOnUI((0, _shareables.makeShareableCloneRecursive)(function () {\n            var reactNativeReanimated_threadsTs4 = function () {\n              worklet(...args);\n            };\n            reactNativeReanimated_threadsTs4.__closure = {\n              worklet,\n              args\n            };\n            reactNativeReanimated_threadsTs4.__workletHash = 13504428753407;\n            reactNativeReanimated_threadsTs4.__initData = _worklet_13504428753407_init_data;\n            return reactNativeReanimated_threadsTs4;\n          }()));\n          return;\n        }\n        _runOnUIQueue.push([worklet, args]);\n        if (_runOnUIQueue.length === 1) {\n          queueMicrotask(() => {\n            var queue = _runOnUIQueue;\n            _runOnUIQueue = [];\n            _ReanimatedModule.ReanimatedModule.scheduleOnUI((0, _shareables.makeShareableCloneRecursive)(function () {\n              var reactNativeReanimated_threadsTs5 = function () {\n                // eslint-disable-next-line @typescript-eslint/no-shadow\n                queue.forEach(_ref => {\n                  var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n                    worklet = _ref2[0],\n                    args = _ref2[1];\n                  worklet(...args);\n                });\n                callMicrotasks();\n              };\n              reactNativeReanimated_threadsTs5.__closure = {\n                queue,\n                callMicrotasks\n              };\n              reactNativeReanimated_threadsTs5.__workletHash = 12268532644971;\n              reactNativeReanimated_threadsTs5.__initData = _worklet_12268532644971_init_data;\n              return reactNativeReanimated_threadsTs5;\n            }()));\n          });\n        }\n      };\n    };\n    runOnUI.__closure = {\n      __DEV__: false,\n      SHOULD_BE_USE_WEB,\n      isWorkletFunction: _commonTypes.isWorkletFunction,\n      IS_JEST,\n      ReanimatedModule: _ReanimatedModule.ReanimatedModule,\n      makeShareableCloneRecursive: _shareables.makeShareableCloneRecursive,\n      callMicrotasks\n    };\n    runOnUI.__workletHash = 17427314962164;\n    runOnUI.__initData = _worklet_17427314962164_init_data;\n    return runOnUI;\n  }(); // @ts-expect-error Check `executeOnUIRuntimeSync` overload above.\n  var _worklet_14569325233849_init_data = {\n    code: \"function reactNativeReanimated_threadsTs6(){const{worklet,args,makeShareableCloneOnUIRecursive}=this.__closure;const result=worklet(...args);return makeShareableCloneOnUIRecursive(result);}\"\n  };\n  function executeOnUIRuntimeSync(worklet) {\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return _ReanimatedModule.ReanimatedModule.executeOnUIRuntimeSync((0, _shareables.makeShareableCloneRecursive)(function () {\n        var reactNativeReanimated_threadsTs6 = function () {\n          var result = worklet(...args);\n          return (0, _shareables.makeShareableCloneOnUIRecursive)(result);\n        };\n        reactNativeReanimated_threadsTs6.__closure = {\n          worklet,\n          args,\n          makeShareableCloneOnUIRecursive: _shareables.makeShareableCloneOnUIRecursive\n        };\n        reactNativeReanimated_threadsTs6.__workletHash = 14569325233849;\n        reactNativeReanimated_threadsTs6.__initData = _worklet_14569325233849_init_data;\n        return reactNativeReanimated_threadsTs6;\n      }()));\n    };\n  }\n\n  // @ts-expect-error Check `runOnUI` overload above.\n  var _worklet_13660892204182_init_data = {\n    code: \"function runOnUIImmediately_reactNativeReanimated_threadsTs7(worklet){const{__DEV__,SHOULD_BE_USE_WEB,isWorkletFunction,ReanimatedModule,makeShareableCloneRecursive}=this.__closure;if(__DEV__&&!SHOULD_BE_USE_WEB&&_WORKLET){throw new ReanimatedError('`runOnUIImmediately` cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.');}if(__DEV__&&!SHOULD_BE_USE_WEB&&!isWorkletFunction(worklet)){throw new ReanimatedError('`runOnUIImmediately` can only be used with worklets.');}return function(...args){ReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function(){'worklet';worklet(...args);}));};}\"\n  };\n  var _worklet_15785581667315_init_data = {\n    code: \"function reactNativeReanimated_threadsTs8(){const{worklet,args}=this.__closure;worklet(...args);}\"\n  };\n  /** Schedule a worklet to execute on the UI runtime skipping batching mechanism. */\n  var runOnUIImmediately = exports.runOnUIImmediately = function () {\n    var runOnUIImmediately = function (worklet) {\n      return function () {\n        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n        _ReanimatedModule.ReanimatedModule.scheduleOnUI((0, _shareables.makeShareableCloneRecursive)(function () {\n          var reactNativeReanimated_threadsTs8 = function () {\n            worklet(...args);\n          };\n          reactNativeReanimated_threadsTs8.__closure = {\n            worklet,\n            args\n          };\n          reactNativeReanimated_threadsTs8.__workletHash = 15785581667315;\n          reactNativeReanimated_threadsTs8.__initData = _worklet_15785581667315_init_data;\n          return reactNativeReanimated_threadsTs8;\n        }()));\n      };\n    };\n    runOnUIImmediately.__closure = {\n      __DEV__: false,\n      SHOULD_BE_USE_WEB,\n      isWorkletFunction: _commonTypes.isWorkletFunction,\n      ReanimatedModule: _ReanimatedModule.ReanimatedModule,\n      makeShareableCloneRecursive: _shareables.makeShareableCloneRecursive\n    };\n    runOnUIImmediately.__workletHash = 13660892204182;\n    runOnUIImmediately.__initData = _worklet_13660892204182_init_data;\n    return runOnUIImmediately;\n  }();\n  function runWorkletOnJS(worklet) {\n    for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      args[_key4 - 1] = arguments[_key4];\n    }\n    // remote function that calls a worklet synchronously on the JS runtime\n    worklet(...args);\n  }\n\n  /**\n   * Lets you asynchronously run\n   * non-[workletized](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#to-workletize)\n   * functions that couldn't otherwise run on the [UI\n   * thread](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#ui-thread).\n   * This applies to most external libraries as they don't have their functions\n   * marked with \"worklet\"; directive.\n   *\n   * @param fun - A reference to a function you want to execute on the JavaScript\n   *   thread from the UI thread.\n   * @returns A function that accepts arguments for the function passed as the\n   *   first argument.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/threading/runOnJS\n   */\n  var _worklet_7462027857001_init_data = {\n    code: \"function runOnJS_reactNativeReanimated_threadsTs9(fun){const runOnJS_reactNativeReanimated_threadsTs9=this._recur;const{SHOULD_BE_USE_WEB,isWorkletFunction,runWorkletOnJS,makeShareableCloneOnUIRecursive}=this.__closure;if(SHOULD_BE_USE_WEB||!_WORKLET){return function(...args){return queueMicrotask(args.length?function(){return fun(...args);}:fun);};}if(isWorkletFunction(fun)){return function(...args){return runOnJS_reactNativeReanimated_threadsTs9(runWorkletOnJS)(fun,...args);};}if(fun.__remoteFunction){fun=fun.__remoteFunction;}const scheduleOnJS=typeof fun==='function'?global._scheduleHostFunctionOnJS:global._scheduleRemoteFunctionOnJS;return function(...args){scheduleOnJS(fun,args.length>0?makeShareableCloneOnUIRecursive(args):undefined);};}\"\n  };\n  var runOnJS = exports.runOnJS = function () {\n    var runOnJS = function (fun) {\n      if (SHOULD_BE_USE_WEB || !_WORKLET) {\n        // if we are already on the JS thread, we just schedule the worklet on the JS queue\n        return function () {\n          for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n            args[_key5] = arguments[_key5];\n          }\n          return queueMicrotask(args.length ? () => fun(...args) : fun);\n        };\n      }\n      if ((0, _commonTypes.isWorkletFunction)(fun)) {\n        // If `fun` is a worklet, we schedule a call of a remote function `runWorkletOnJS`\n        // and pass the worklet as a first argument followed by original arguments.\n\n        return function () {\n          for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n            args[_key6] = arguments[_key6];\n          }\n          return runOnJS(runWorkletOnJS)(fun, ...args);\n        };\n      }\n      if (fun.__remoteFunction) {\n        // In development mode the function provided as `fun` throws an error message\n        // such that when someone accidentally calls it directly on the UI runtime, they\n        // see that they should use `runOnJS` instead. To facilitate that we put the\n        // reference to the original remote function in the `__remoteFunction` property.\n        fun = fun.__remoteFunction;\n      }\n      var scheduleOnJS = typeof fun === 'function' ? global._scheduleHostFunctionOnJS : global._scheduleRemoteFunctionOnJS;\n      return function () {\n        for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n          args[_key7] = arguments[_key7];\n        }\n        scheduleOnJS(fun, args.length > 0 ?\n        // TODO TYPESCRIPT this cast is terrible but will be fixed\n        (0, _shareables.makeShareableCloneOnUIRecursive)(args) : undefined);\n      };\n    };\n    runOnJS.__closure = {\n      SHOULD_BE_USE_WEB,\n      isWorkletFunction: _commonTypes.isWorkletFunction,\n      runWorkletOnJS,\n      makeShareableCloneOnUIRecursive: _shareables.makeShareableCloneOnUIRecursive\n    };\n    runOnJS.__workletHash = 7462027857001;\n    runOnJS.__initData = _worklet_7462027857001_init_data;\n    return runOnJS;\n  }();\n});","lineCount":309,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"callMicrotasks"],[8,24,1,13],[8,27,1,13,"undefined"],[8,36,1,13],[9,2,1,13,"exports"],[9,9,1,13],[9,10,1,13,"executeOnUIRuntimeSync"],[9,32,1,13],[9,35,1,13,"executeOnUIRuntimeSync"],[9,57,1,13],[10,2,1,13,"exports"],[10,9,1,13],[10,10,1,13,"setupMicrotasks"],[10,25,1,13],[10,28,1,13,"exports"],[10,35,1,13],[10,36,1,13,"runOnUIImmediately"],[10,54,1,13],[10,57,1,13,"exports"],[10,64,1,13],[10,65,1,13,"runOnUI"],[10,72,1,13],[10,75,1,13,"exports"],[10,82,1,13],[10,83,1,13,"runOnJS"],[10,90,1,13],[10,93,1,13,"undefined"],[10,102,1,13],[11,2,1,13],[11,6,1,13,"_slicedToArray2"],[11,21,1,13],[11,24,1,13,"_interopRequireDefault"],[11,46,1,13],[11,47,1,13,"require"],[11,54,1,13],[11,55,1,13,"_dependencyMap"],[11,69,1,13],[12,2,3,0],[12,6,3,0,"_commonTypes"],[12,18,3,0],[12,21,3,0,"require"],[12,28,3,0],[12,29,3,0,"_dependencyMap"],[12,43,3,0],[13,2,4,0],[13,6,4,0,"_errors"],[13,13,4,0],[13,16,4,0,"require"],[13,23,4,0],[13,24,4,0,"_dependencyMap"],[13,38,4,0],[14,2,5,0],[14,6,5,0,"_PlatformChecker"],[14,22,5,0],[14,25,5,0,"require"],[14,32,5,0],[14,33,5,0,"_dependencyMap"],[14,47,5,0],[15,2,6,0],[15,6,6,0,"_ReanimatedModule"],[15,23,6,0],[15,26,6,0,"require"],[15,33,6,0],[15,34,6,0,"_dependencyMap"],[15,48,6,0],[16,2,7,0],[16,6,7,0,"_shareables"],[16,17,7,0],[16,20,7,0,"require"],[16,27,7,0],[16,28,7,0,"_dependencyMap"],[16,42,7,0],[17,2,12,0],[17,6,12,6,"IS_JEST"],[17,13,12,13],[17,16,12,16],[17,20,12,16,"isJest"],[17,43,12,22],[17,45,12,23],[17,46,12,24],[18,2,13,0],[18,6,13,6,"SHOULD_BE_USE_WEB"],[18,23,13,23],[18,26,13,26],[18,30,13,26,"shouldBeUseWeb"],[18,61,13,40],[18,63,13,41],[18,64,13,42],[20,2,15,0],[21,2,16,0],[21,6,16,4,"_runOnUIQueue"],[21,19,16,74],[21,22,16,77],[21,24,16,79],[22,2,16,80],[22,6,16,80,"_worklet_7711689936114_init_data"],[22,38,16,80],[23,4,16,80,"code"],[23,8,16,80],[24,2,16,80],[25,2,16,80],[25,6,16,80,"setupMicrotasks"],[25,21,16,80],[25,24,16,80,"exports"],[25,31,16,80],[25,32,16,80,"setupMicrotasks"],[25,47,16,80],[25,50,18,7],[26,4,18,7],[26,8,18,7,"setupMicrotasks"],[26,23,18,7],[26,35,18,7,"setupMicrotasks"],[26,36,18,7],[26,38,18,34],[27,6,21,2],[27,10,21,6,"microtasksQueue"],[27,25,21,40],[27,28,21,43],[27,30,21,45],[28,6,22,2],[28,10,22,6,"isExecutingMicrotasksQueue"],[28,36,22,32],[28,39,22,35],[28,44,22,40],[29,6,23,2,"global"],[29,12,23,8],[29,13,23,9,"queueMicrotask"],[29,27,23,23],[29,30,23,27,"callback"],[29,38,23,47],[29,42,23,52],[30,8,24,4,"microtasksQueue"],[30,23,24,19],[30,24,24,20,"push"],[30,28,24,24],[30,29,24,25,"callback"],[30,37,24,33],[30,38,24,34],[31,6,25,2],[31,7,25,3],[32,6,27,2,"global"],[32,12,27,8],[32,13,27,9,"__callMicrotasks"],[32,29,27,25],[32,32,27,28],[32,38,27,34],[33,8,28,4],[33,12,28,8,"isExecutingMicrotasksQueue"],[33,38,28,34],[33,40,28,36],[34,10,29,6],[35,8,30,4],[36,8,31,4],[36,12,31,8],[37,10,32,6,"isExecutingMicrotasksQueue"],[37,36,32,32],[37,39,32,35],[37,43,32,39],[38,10,33,6],[38,15,33,11],[38,19,33,15,"index"],[38,24,33,20],[38,27,33,23],[38,28,33,24],[38,30,33,26,"index"],[38,35,33,31],[38,38,33,34,"microtasksQueue"],[38,53,33,49],[38,54,33,50,"length"],[38,60,33,56],[38,62,33,58,"index"],[38,67,33,63],[38,71,33,67],[38,72,33,68],[38,74,33,70],[39,12,34,8],[40,12,35,8,"microtasksQueue"],[40,27,35,23],[40,28,35,24,"index"],[40,33,35,29],[40,34,35,30],[40,35,35,31],[40,36,35,32],[41,10,36,6],[42,10,37,6,"microtasksQueue"],[42,25,37,21],[42,28,37,24],[42,30,37,26],[43,10,38,6,"global"],[43,16,38,12],[43,17,38,13,"_maybeFlushUIUpdatesQueue"],[43,42,38,38],[43,43,38,39],[43,44,38,40],[44,8,39,4],[44,9,39,5],[44,18,39,14],[45,10,40,6,"isExecutingMicrotasksQueue"],[45,36,40,32],[45,39,40,35],[45,44,40,40],[46,8,41,4],[47,6,42,2],[47,7,42,3],[48,4,43,0],[48,5,43,1],[49,4,43,1,"setupMicrotasks"],[49,19,43,1],[49,20,43,1,"__closure"],[49,29,43,1],[50,4,43,1,"setupMicrotasks"],[50,19,43,1],[50,20,43,1,"__workletHash"],[50,33,43,1],[51,4,43,1,"setupMicrotasks"],[51,19,43,1],[51,20,43,1,"__initData"],[51,30,43,1],[51,33,43,1,"_worklet_7711689936114_init_data"],[51,65,43,1],[52,4,43,1],[52,11,43,1,"setupMicrotasks"],[52,26,43,1],[53,2,43,1],[53,3,18,7],[54,2,18,7],[54,6,18,7,"_worklet_14401793871566_init_data"],[54,39,18,7],[55,4,18,7,"code"],[55,8,18,7],[56,2,18,7],[57,2,18,7],[57,6,18,7,"callMicrotasksOnUIThread"],[57,30,18,7],[57,33,45,0],[58,4,45,0],[58,8,45,0,"callMicrotasksOnUIThread"],[58,32,45,0],[58,44,45,0,"callMicrotasksOnUIThread"],[58,45,45,0],[58,47,45,36],[59,6,47,2,"global"],[59,12,47,8],[59,13,47,9,"__callMicrotasks"],[59,29,47,25],[59,30,47,26],[59,31,47,27],[60,4,48,0],[60,5,48,1],[61,4,48,1,"callMicrotasksOnUIThread"],[61,28,48,1],[61,29,48,1,"__closure"],[61,38,48,1],[62,4,48,1,"callMicrotasksOnUIThread"],[62,28,48,1],[62,29,48,1,"__workletHash"],[62,42,48,1],[63,4,48,1,"callMicrotasksOnUIThread"],[63,28,48,1],[63,29,48,1,"__initData"],[63,39,48,1],[63,42,48,1,"_worklet_14401793871566_init_data"],[63,75,48,1],[64,4,48,1],[64,11,48,1,"callMicrotasksOnUIThread"],[64,35,48,1],[65,2,48,1],[65,3,45,0],[66,2,50,7],[66,6,50,13,"callMicrotasks"],[66,20,50,27],[66,23,50,27,"exports"],[66,30,50,27],[66,31,50,27,"callMicrotasks"],[66,45,50,27],[66,48,50,30,"SHOULD_BE_USE_WEB"],[66,65,50,47],[66,68,51,4],[66,74,51,10],[67,4,52,6],[68,2,52,6],[68,3,53,5],[68,6,54,4,"callMicrotasksOnUIThread"],[68,30,54,28],[70,2,56,0],[71,0,57,0],[72,0,58,0],[73,0,59,0],[74,0,60,0],[75,0,61,0],[76,0,62,0],[77,0,63,0],[78,0,64,0],[79,0,65,0],[80,0,66,0],[81,0,67,0],[82,0,68,0],[83,0,69,0],[84,0,70,0],[85,0,71,0],[86,0,72,0],[87,0,73,0],[88,0,74,0],[89,2,75,0],[90,2,76,0],[91,2,76,0],[91,6,76,0,"_worklet_17427314962164_init_data"],[91,39,76,0],[92,4,76,0,"code"],[92,8,76,0],[93,2,76,0],[94,2,76,0],[94,6,76,0,"_worklet_13504428753407_init_data"],[94,39,76,0],[95,4,76,0,"code"],[95,8,76,0],[96,2,76,0],[97,2,76,0],[97,6,76,0,"_worklet_12268532644971_init_data"],[97,39,76,0],[98,4,76,0,"code"],[98,8,76,0],[99,2,76,0],[100,2,76,0],[100,6,76,0,"runOnUI"],[100,13,76,0],[100,16,76,0,"exports"],[100,23,76,0],[100,24,76,0,"runOnUI"],[100,31,76,0],[100,34,81,7],[101,4,81,7],[101,8,81,7,"runOnUI"],[101,15,81,7],[101,27,81,7,"runOnUI"],[101,28,82,2,"worklet"],[101,35,82,45],[101,37,83,27],[102,6,93,2],[102,13,93,9],[102,25,93,22],[103,8,93,22],[103,17,93,22,"_len"],[103,21,93,22],[103,24,93,22,"arguments"],[103,33,93,22],[103,34,93,22,"length"],[103,40,93,22],[103,42,93,13,"args"],[103,46,93,17],[103,53,93,17,"Array"],[103,58,93,17],[103,59,93,17,"_len"],[103,63,93,17],[103,66,93,17,"_key"],[103,70,93,17],[103,76,93,17,"_key"],[103,80,93,17],[103,83,93,17,"_len"],[103,87,93,17],[103,89,93,17,"_key"],[103,93,93,17],[104,10,93,13,"args"],[104,14,93,17],[104,15,93,17,"_key"],[104,19,93,17],[104,23,93,17,"arguments"],[104,32,93,17],[104,33,93,17,"_key"],[104,37,93,17],[105,8,93,17],[106,8,94,4],[106,12,94,8,"IS_JEST"],[106,19,94,15],[106,21,94,17],[107,10,95,6],[108,10,96,6],[109,10,97,6],[110,10,98,6],[111,10,99,6],[112,10,100,6],[113,10,101,6],[114,10,102,6],[115,10,103,6],[116,10,104,6,"ReanimatedModule"],[116,44,104,22],[116,45,104,23,"scheduleOnUI"],[116,57,104,35],[116,58,105,8],[116,62,105,8,"makeShareableCloneRecursive"],[116,101,105,35],[116,103,105,36],[117,12,105,36],[117,16,105,36,"reactNativeReanimated_threadsTs4"],[117,48,105,36],[117,60,105,36,"reactNativeReanimated_threadsTs4"],[117,61,105,36],[117,63,105,42],[118,14,107,10,"worklet"],[118,21,107,17],[118,22,107,18],[118,25,107,21,"args"],[118,29,107,25],[118,30,107,26],[119,12,108,8],[119,13,108,9],[120,12,108,9,"reactNativeReanimated_threadsTs4"],[120,44,108,9],[120,45,108,9,"__closure"],[120,54,108,9],[121,14,108,9,"worklet"],[121,21,108,9],[122,14,108,9,"args"],[123,12,108,9],[124,12,108,9,"reactNativeReanimated_threadsTs4"],[124,44,108,9],[124,45,108,9,"__workletHash"],[124,58,108,9],[125,12,108,9,"reactNativeReanimated_threadsTs4"],[125,44,108,9],[125,45,108,9,"__initData"],[125,55,108,9],[125,58,108,9,"_worklet_13504428753407_init_data"],[125,91,108,9],[126,12,108,9],[126,19,108,9,"reactNativeReanimated_threadsTs4"],[126,51,108,9],[127,10,108,9],[127,11,105,36],[127,13,108,9],[127,14,109,6],[127,15,109,7],[128,10,110,6],[129,8,111,4],[130,8,121,4,"_runOnUIQueue"],[130,21,121,17],[130,22,121,18,"push"],[130,26,121,22],[130,27,121,23],[130,28,121,24,"worklet"],[130,35,121,31],[130,37,121,52,"args"],[130,41,121,56],[130,42,121,57],[130,43,121,58],[131,8,122,4],[131,12,122,8,"_runOnUIQueue"],[131,25,122,21],[131,26,122,22,"length"],[131,32,122,28],[131,37,122,33],[131,38,122,34],[131,40,122,36],[132,10,123,6,"queueMicrotask"],[132,24,123,20],[132,25,123,21],[132,31,123,27],[133,12,124,8],[133,16,124,14,"queue"],[133,21,124,19],[133,24,124,22,"_runOnUIQueue"],[133,37,124,35],[134,12,125,8,"_runOnUIQueue"],[134,25,125,21],[134,28,125,24],[134,30,125,26],[135,12,126,8,"ReanimatedModule"],[135,46,126,24],[135,47,126,25,"scheduleOnUI"],[135,59,126,37],[135,60,127,10],[135,64,127,10,"makeShareableCloneRecursive"],[135,103,127,37],[135,105,127,38],[136,14,127,38],[136,18,127,38,"reactNativeReanimated_threadsTs5"],[136,50,127,38],[136,62,127,38,"reactNativeReanimated_threadsTs5"],[136,63,127,38],[136,65,127,44],[137,16,129,12],[138,16,130,12,"queue"],[138,21,130,17],[138,22,130,18,"forEach"],[138,29,130,25],[138,30,130,26,"_ref"],[138,34,130,26],[138,38,130,47],[139,18,130,47],[139,22,130,47,"_ref2"],[139,27,130,47],[139,34,130,47,"_slicedToArray2"],[139,49,130,47],[139,50,130,47,"default"],[139,57,130,47],[139,59,130,47,"_ref"],[139,63,130,47],[140,20,130,28,"worklet"],[140,27,130,35],[140,30,130,35,"_ref2"],[140,35,130,35],[141,20,130,37,"args"],[141,24,130,41],[141,27,130,41,"_ref2"],[141,32,130,41],[142,18,131,14,"worklet"],[142,25,131,21],[142,26,131,22],[142,29,131,25,"args"],[142,33,131,29],[142,34,131,30],[143,16,132,12],[143,17,132,13],[143,18,132,14],[144,16,133,12,"callMicrotasks"],[144,30,133,26],[144,31,133,27],[144,32,133,28],[145,14,134,10],[145,15,134,11],[146,14,134,11,"reactNativeReanimated_threadsTs5"],[146,46,134,11],[146,47,134,11,"__closure"],[146,56,134,11],[147,16,134,11,"queue"],[147,21,134,11],[148,16,134,11,"callMicrotasks"],[149,14,134,11],[150,14,134,11,"reactNativeReanimated_threadsTs5"],[150,46,134,11],[150,47,134,11,"__workletHash"],[150,60,134,11],[151,14,134,11,"reactNativeReanimated_threadsTs5"],[151,46,134,11],[151,47,134,11,"__initData"],[151,57,134,11],[151,60,134,11,"_worklet_12268532644971_init_data"],[151,93,134,11],[152,14,134,11],[152,21,134,11,"reactNativeReanimated_threadsTs5"],[152,53,134,11],[153,12,134,11],[153,13,127,38],[153,15,134,11],[153,16,135,8],[153,17,135,9],[154,10,136,6],[154,11,136,7],[154,12,136,8],[155,8,137,4],[156,6,138,2],[156,7,138,3],[157,4,139,0],[157,5,139,1],[158,4,139,1,"runOnUI"],[158,11,139,1],[158,12,139,1,"__closure"],[158,21,139,1],[159,6,139,1,"__DEV__"],[159,13,139,1],[160,6,139,1,"SHOULD_BE_USE_WEB"],[160,23,139,1],[161,6,139,1,"isWorkletFunction"],[161,23,139,1],[161,25,90,40,"isWorkletFunction"],[161,55,90,57],[162,6,90,57,"IS_JEST"],[162,13,90,57],[163,6,90,57,"ReanimatedModule"],[163,22,90,57],[163,24,104,6,"ReanimatedModule"],[163,58,104,22],[164,6,104,22,"makeShareableCloneRecursive"],[164,33,104,22],[164,35,105,8,"makeShareableCloneRecursive"],[164,74,105,35],[165,6,105,35,"callMicrotasks"],[166,4,105,35],[167,4,105,35,"runOnUI"],[167,11,105,35],[167,12,105,35,"__workletHash"],[167,25,105,35],[168,4,105,35,"runOnUI"],[168,11,105,35],[168,12,105,35,"__initData"],[168,22,105,35],[168,25,105,35,"_worklet_17427314962164_init_data"],[168,58,105,35],[169,4,105,35],[169,11,105,35,"runOnUI"],[169,18,105,35],[170,2,105,35],[170,3,81,7],[170,7,141,0],[171,2,141,0],[171,6,141,0,"_worklet_14569325233849_init_data"],[171,39,141,0],[172,4,141,0,"code"],[172,8,141,0],[173,2,141,0],[174,2,146,7],[174,11,146,16,"executeOnUIRuntimeSync"],[174,33,146,38,"executeOnUIRuntimeSync"],[174,34,147,2,"worklet"],[174,41,147,45],[174,43,148,34],[175,4,149,2],[175,11,149,9],[175,23,149,22],[176,6,149,22],[176,15,149,22,"_len2"],[176,20,149,22],[176,23,149,22,"arguments"],[176,32,149,22],[176,33,149,22,"length"],[176,39,149,22],[176,41,149,13,"args"],[176,45,149,17],[176,52,149,17,"Array"],[176,57,149,17],[176,58,149,17,"_len2"],[176,63,149,17],[176,66,149,17,"_key2"],[176,71,149,17],[176,77,149,17,"_key2"],[176,82,149,17],[176,85,149,17,"_len2"],[176,90,149,17],[176,92,149,17,"_key2"],[176,97,149,17],[177,8,149,13,"args"],[177,12,149,17],[177,13,149,17,"_key2"],[177,18,149,17],[177,22,149,17,"arguments"],[177,31,149,17],[177,32,149,17,"_key2"],[177,37,149,17],[178,6,149,17],[179,6,150,4],[179,13,150,11,"ReanimatedModule"],[179,47,150,27],[179,48,150,28,"executeOnUIRuntimeSync"],[179,70,150,50],[179,71,151,6],[179,75,151,6,"makeShareableCloneRecursive"],[179,114,151,33],[179,116,151,34],[180,8,151,34],[180,12,151,34,"reactNativeReanimated_threadsTs6"],[180,44,151,34],[180,56,151,34,"reactNativeReanimated_threadsTs6"],[180,57,151,34],[180,59,151,40],[181,10,153,8],[181,14,153,14,"result"],[181,20,153,20],[181,23,153,23,"worklet"],[181,30,153,30],[181,31,153,31],[181,34,153,34,"args"],[181,38,153,38],[181,39,153,39],[182,10,154,8],[182,17,154,15],[182,21,154,15,"makeShareableCloneOnUIRecursive"],[182,64,154,46],[182,66,154,47,"result"],[182,72,154,53],[182,73,154,54],[183,8,155,6],[183,9,155,7],[184,8,155,7,"reactNativeReanimated_threadsTs6"],[184,40,155,7],[184,41,155,7,"__closure"],[184,50,155,7],[185,10,155,7,"worklet"],[185,17,155,7],[186,10,155,7,"args"],[186,14,155,7],[187,10,155,7,"makeShareableCloneOnUIRecursive"],[187,41,155,7],[187,43,154,15,"makeShareableCloneOnUIRecursive"],[188,8,154,46],[189,8,154,46,"reactNativeReanimated_threadsTs6"],[189,40,154,46],[189,41,154,46,"__workletHash"],[189,54,154,46],[190,8,154,46,"reactNativeReanimated_threadsTs6"],[190,40,154,46],[190,41,154,46,"__initData"],[190,51,154,46],[190,54,154,46,"_worklet_14569325233849_init_data"],[190,87,154,46],[191,8,154,46],[191,15,154,46,"reactNativeReanimated_threadsTs6"],[191,47,154,46],[192,6,154,46],[192,7,151,34],[192,9,155,7],[192,10,156,4],[192,11,156,5],[193,4,157,2],[193,5,157,3],[194,2,158,0],[196,2,160,0],[197,2,160,0],[197,6,160,0,"_worklet_13660892204182_init_data"],[197,39,160,0],[198,4,160,0,"code"],[198,8,160,0],[199,2,160,0],[200,2,160,0],[200,6,160,0,"_worklet_15785581667315_init_data"],[200,39,160,0],[201,4,160,0,"code"],[201,8,160,0],[202,2,160,0],[203,2,164,0],[204,2,164,0],[204,6,164,0,"runOnUIImmediately"],[204,24,164,0],[204,27,164,0,"exports"],[204,34,164,0],[204,35,164,0,"runOnUIImmediately"],[204,53,164,0],[204,56,165,7],[205,4,165,7],[205,8,165,7,"runOnUIImmediately"],[205,26,165,7],[205,38,165,7,"runOnUIImmediately"],[205,39,166,2,"worklet"],[205,46,166,45],[205,48,167,27],[206,6,179,2],[206,13,179,9],[206,25,179,22],[207,8,179,22],[207,17,179,22,"_len3"],[207,22,179,22],[207,25,179,22,"arguments"],[207,34,179,22],[207,35,179,22,"length"],[207,41,179,22],[207,43,179,13,"args"],[207,47,179,17],[207,54,179,17,"Array"],[207,59,179,17],[207,60,179,17,"_len3"],[207,65,179,17],[207,68,179,17,"_key3"],[207,73,179,17],[207,79,179,17,"_key3"],[207,84,179,17],[207,87,179,17,"_len3"],[207,92,179,17],[207,94,179,17,"_key3"],[207,99,179,17],[208,10,179,13,"args"],[208,14,179,17],[208,15,179,17,"_key3"],[208,20,179,17],[208,24,179,17,"arguments"],[208,33,179,17],[208,34,179,17,"_key3"],[208,39,179,17],[209,8,179,17],[210,8,180,4,"ReanimatedModule"],[210,42,180,20],[210,43,180,21,"scheduleOnUI"],[210,55,180,33],[210,56,181,6],[210,60,181,6,"makeShareableCloneRecursive"],[210,99,181,33],[210,101,181,34],[211,10,181,34],[211,14,181,34,"reactNativeReanimated_threadsTs8"],[211,46,181,34],[211,58,181,34,"reactNativeReanimated_threadsTs8"],[211,59,181,34],[211,61,181,40],[212,12,183,8,"worklet"],[212,19,183,15],[212,20,183,16],[212,23,183,19,"args"],[212,27,183,23],[212,28,183,24],[213,10,184,6],[213,11,184,7],[214,10,184,7,"reactNativeReanimated_threadsTs8"],[214,42,184,7],[214,43,184,7,"__closure"],[214,52,184,7],[215,12,184,7,"worklet"],[215,19,184,7],[216,12,184,7,"args"],[217,10,184,7],[218,10,184,7,"reactNativeReanimated_threadsTs8"],[218,42,184,7],[218,43,184,7,"__workletHash"],[218,56,184,7],[219,10,184,7,"reactNativeReanimated_threadsTs8"],[219,42,184,7],[219,43,184,7,"__initData"],[219,53,184,7],[219,56,184,7,"_worklet_15785581667315_init_data"],[219,89,184,7],[220,10,184,7],[220,17,184,7,"reactNativeReanimated_threadsTs8"],[220,49,184,7],[221,8,184,7],[221,9,181,34],[221,11,184,7],[221,12,185,4],[221,13,185,5],[222,6,186,2],[222,7,186,3],[223,4,187,0],[223,5,187,1],[224,4,187,1,"runOnUIImmediately"],[224,22,187,1],[224,23,187,1,"__closure"],[224,32,187,1],[225,6,187,1,"__DEV__"],[225,13,187,1],[226,6,187,1,"SHOULD_BE_USE_WEB"],[226,23,187,1],[227,6,187,1,"isWorkletFunction"],[227,23,187,1],[227,25,174,40,"isWorkletFunction"],[227,55,174,57],[228,6,174,57,"ReanimatedModule"],[228,22,174,57],[228,24,180,4,"ReanimatedModule"],[228,58,180,20],[229,6,180,20,"makeShareableCloneRecursive"],[229,33,180,20],[229,35,181,6,"makeShareableCloneRecursive"],[230,4,181,33],[231,4,181,33,"runOnUIImmediately"],[231,22,181,33],[231,23,181,33,"__workletHash"],[231,36,181,33],[232,4,181,33,"runOnUIImmediately"],[232,22,181,33],[232,23,181,33,"__initData"],[232,33,181,33],[232,36,181,33,"_worklet_13660892204182_init_data"],[232,69,181,33],[233,4,181,33],[233,11,181,33,"runOnUIImmediately"],[233,29,181,33],[234,2,181,33],[234,3,165,7],[235,2,201,0],[235,11,201,9,"runWorkletOnJS"],[235,25,201,23,"runWorkletOnJS"],[235,26,202,2,"worklet"],[235,33,202,45],[235,35,204,8],[236,4,204,8],[236,13,204,8,"_len4"],[236,18,204,8],[236,21,204,8,"arguments"],[236,30,204,8],[236,31,204,8,"length"],[236,37,204,8],[236,39,203,5,"args"],[236,43,203,9],[236,50,203,9,"Array"],[236,55,203,9],[236,56,203,9,"_len4"],[236,61,203,9],[236,68,203,9,"_len4"],[236,73,203,9],[236,84,203,9,"_key4"],[236,89,203,9],[236,95,203,9,"_key4"],[236,100,203,9],[236,103,203,9,"_len4"],[236,108,203,9],[236,110,203,9,"_key4"],[236,115,203,9],[237,6,203,5,"args"],[237,10,203,9],[237,11,203,9,"_key4"],[237,16,203,9],[237,24,203,9,"arguments"],[237,33,203,9],[237,34,203,9,"_key4"],[237,39,203,9],[238,4,203,9],[239,4,205,2],[240,4,206,2,"worklet"],[240,11,206,9],[240,12,206,10],[240,15,206,13,"args"],[240,19,206,17],[240,20,206,18],[241,2,207,0],[243,2,209,0],[244,0,210,0],[245,0,211,0],[246,0,212,0],[247,0,213,0],[248,0,214,0],[249,0,215,0],[250,0,216,0],[251,0,217,0],[252,0,218,0],[253,0,219,0],[254,0,220,0],[255,0,221,0],[256,0,222,0],[257,2,209,0],[257,6,209,0,"_worklet_7462027857001_init_data"],[257,38,209,0],[258,4,209,0,"code"],[258,8,209,0],[259,2,209,0],[260,2,209,0],[260,6,209,0,"runOnJS"],[260,13,209,0],[260,16,209,0,"exports"],[260,23,209,0],[260,24,209,0,"runOnJS"],[260,31,209,0],[260,34,223,7],[261,4,223,7],[261,8,223,7,"runOnJS"],[261,15,223,7],[261,27,223,7,"runOnJS"],[261,28,224,2,"fun"],[261,31,227,40],[261,33,228,27],[262,6,231,2],[262,10,231,6,"SHOULD_BE_USE_WEB"],[262,27,231,23],[262,31,231,27],[262,32,231,28,"_WORKLET"],[262,40,231,36],[262,42,231,38],[263,8,232,4],[264,8,233,4],[264,15,233,11],[265,10,233,11],[265,19,233,11,"_len5"],[265,24,233,11],[265,27,233,11,"arguments"],[265,36,233,11],[265,37,233,11,"length"],[265,43,233,11],[265,45,233,15,"args"],[265,49,233,19],[265,56,233,19,"Array"],[265,61,233,19],[265,62,233,19,"_len5"],[265,67,233,19],[265,70,233,19,"_key5"],[265,75,233,19],[265,81,233,19,"_key5"],[265,86,233,19],[265,89,233,19,"_len5"],[265,94,233,19],[265,96,233,19,"_key5"],[265,101,233,19],[266,12,233,15,"args"],[266,16,233,19],[266,17,233,19,"_key5"],[266,22,233,19],[266,26,233,19,"arguments"],[266,35,233,19],[266,36,233,19,"_key5"],[266,41,233,19],[267,10,233,19],[268,10,233,19],[268,17,234,6,"queueMicrotask"],[268,31,234,20],[268,32,235,8,"args"],[268,36,235,12],[268,37,235,13,"length"],[268,43,235,19],[268,46,236,12],[268,52,236,19,"fun"],[268,55,236,22],[268,56,236,58],[268,59,236,61,"args"],[268,63,236,65],[268,64,236,66],[268,67,237,13,"fun"],[268,70,238,6],[268,71,238,7],[269,8,238,7],[270,6,239,2],[271,6,240,2],[271,10,240,6],[271,14,240,6,"isWorkletFunction"],[271,44,240,23],[271,46,240,43,"fun"],[271,49,240,46],[271,50,240,47],[271,52,240,49],[272,8,241,4],[273,8,242,4],[275,8,244,4],[275,15,244,11],[276,10,244,11],[276,19,244,11,"_len6"],[276,24,244,11],[276,27,244,11,"arguments"],[276,36,244,11],[276,37,244,11,"length"],[276,43,244,11],[276,45,244,15,"args"],[276,49,244,19],[276,56,244,19,"Array"],[276,61,244,19],[276,62,244,19,"_len6"],[276,67,244,19],[276,70,244,19,"_key6"],[276,75,244,19],[276,81,244,19,"_key6"],[276,86,244,19],[276,89,244,19,"_len6"],[276,94,244,19],[276,96,244,19,"_key6"],[276,101,244,19],[277,12,244,15,"args"],[277,16,244,19],[277,17,244,19,"_key6"],[277,22,244,19],[277,26,244,19,"arguments"],[277,35,244,19],[277,36,244,19,"_key6"],[277,41,244,19],[278,10,244,19],[279,10,244,19],[279,17,245,6,"runOnJS"],[279,24,245,13],[279,25,245,14,"runWorkletOnJS"],[279,39,245,47],[279,40,245,48],[279,41,246,8,"fun"],[279,44,246,11],[279,46,247,8],[279,49,247,11,"args"],[279,53,248,6],[279,54,248,7],[280,8,248,7],[281,6,249,2],[282,6,250,2],[282,10,250,7,"fun"],[282,13,250,10],[282,14,250,28,"__remoteFunction"],[282,30,250,44],[282,32,250,46],[283,8,251,4],[284,8,252,4],[285,8,253,4],[286,8,254,4],[287,8,255,4,"fun"],[287,11,255,7],[287,14,255,11,"fun"],[287,17,255,14],[287,18,255,32,"__remoteFunction"],[287,34,255,48],[288,6,256,2],[289,6,258,2],[289,10,258,8,"scheduleOnJS"],[289,22,258,20],[289,25,259,4],[289,32,259,11,"fun"],[289,35,259,14],[289,40,259,19],[289,50,259,29],[289,53,260,8,"global"],[289,59,260,14],[289,60,260,15,"_scheduleHostFunctionOnJS"],[289,85,260,40],[289,88,261,8,"global"],[289,94,261,14],[289,95,261,15,"_scheduleRemoteFunctionOnJS"],[289,122,261,42],[290,6,263,2],[290,13,263,9],[290,25,263,22],[291,8,263,22],[291,17,263,22,"_len7"],[291,22,263,22],[291,25,263,22,"arguments"],[291,34,263,22],[291,35,263,22,"length"],[291,41,263,22],[291,43,263,13,"args"],[291,47,263,17],[291,54,263,17,"Array"],[291,59,263,17],[291,60,263,17,"_len7"],[291,65,263,17],[291,68,263,17,"_key7"],[291,73,263,17],[291,79,263,17,"_key7"],[291,84,263,17],[291,87,263,17,"_len7"],[291,92,263,17],[291,94,263,17,"_key7"],[291,99,263,17],[292,10,263,13,"args"],[292,14,263,17],[292,15,263,17,"_key7"],[292,20,263,17],[292,24,263,17,"arguments"],[292,33,263,17],[292,34,263,17,"_key7"],[292,39,263,17],[293,8,263,17],[294,8,264,4,"scheduleOnJS"],[294,20,264,16],[294,21,265,6,"fun"],[294,24,265,9],[294,26,268,6,"args"],[294,30,268,10],[294,31,268,11,"length"],[294,37,268,17],[294,40,268,20],[294,41,268,21],[295,8,269,10],[296,8,270,11],[296,12,270,11,"makeShareableCloneOnUIRecursive"],[296,55,270,42],[296,57,270,43,"args"],[296,61,270,47],[296,62,270,48],[296,65,271,10,"undefined"],[296,74,272,4],[296,75,272,5],[297,6,273,2],[297,7,273,3],[298,4,274,0],[298,5,274,1],[299,4,274,1,"runOnJS"],[299,11,274,1],[299,12,274,1,"__closure"],[299,21,274,1],[300,6,274,1,"SHOULD_BE_USE_WEB"],[300,23,274,1],[301,6,274,1,"isWorkletFunction"],[301,23,274,1],[301,25,240,6,"isWorkletFunction"],[301,55,240,23],[302,6,240,23,"runWorkletOnJS"],[302,20,240,23],[303,6,240,23,"makeShareableCloneOnUIRecursive"],[303,37,240,23],[303,39,270,11,"makeShareableCloneOnUIRecursive"],[304,4,270,42],[305,4,270,42,"runOnJS"],[305,11,270,42],[305,12,270,42,"__workletHash"],[305,25,270,42],[306,4,270,42,"runOnJS"],[306,11,270,42],[306,12,270,42,"__initData"],[306,22,270,42],[306,25,270,42,"_worklet_7462027857001_init_data"],[306,57,270,42],[307,4,270,42],[307,11,270,42,"runOnJS"],[307,18,270,42],[308,2,270,42],[308,3,223,7],[309,0,223,7],[309,3]],"functionMap":{"names":["<global>","setupMicrotasks","global.queueMicrotask","global.__callMicrotasks","callMicrotasksOnUIThread","<anonymous>","runOnUI","makeShareableCloneRecursive$argument_0","queueMicrotask$argument_0","queue.forEach$argument_0","executeOnUIRuntimeSync","runOnUIImmediately","runWorkletOnJS","runOnJS"],"mappings":"AAA;OCiB;0BCK;GDE;4BEE;GFe;CDC;AIE;CJG;IKG;KLE;OM4B;SDY;oCEY;SFG;qBGe;sCDI;0BEG;aFE;WCE;OHE;GCE;CNC;OUO;SLG;kCEE;OFI;GKE;CVC;OWO;SNc;kCEE;OFG;GME;CXC;AYc;CZM;OagB;WRU;OQK;WRM;OQI;SRe;GQU;CbC"}},"type":"js/module"}]}