{"dependencies":[{"name":"./util","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":186},"end":{"line":10,"column":70,"index":256}}],"key":"1+hZBLc/k6i18AZJ4yHV73uDZHQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.withDelay = undefined;\n  var _util = require(_dependencyMap[0]);\n  // TODO TYPESCRIPT This is a temporary type to get rid of .d.ts file.\n  var _worklet_15976907666864_init_data = {\n    code: \"function reactNativeReanimated_delayTs1(delayMs,_nextAnimation,reduceMotion){const{defineAnimation,getReduceMotionForAnimation}=this.__closure;return defineAnimation(_nextAnimation,function(){'worklet';const nextAnimation=typeof _nextAnimation==='function'?_nextAnimation():_nextAnimation;function delay(animation,now){const{startTime:startTime,started:started,previousAnimation:previousAnimation}=animation;const current=animation.current;if(now-startTime>=delayMs||animation.reduceMotion){if(!started){nextAnimation.onStart(nextAnimation,current,now,previousAnimation);animation.previousAnimation=null;animation.started=true;}const finished=nextAnimation.onFrame(nextAnimation,now);animation.current=nextAnimation.current;return finished;}else if(previousAnimation){const finished=previousAnimation.finished||previousAnimation.onFrame(previousAnimation,now);animation.current=previousAnimation.current;if(finished){animation.previousAnimation=null;}}return false;}function onStart(animation,value,now,previousAnimation){animation.startTime=now;animation.started=false;animation.current=value;if(previousAnimation===animation){animation.previousAnimation=previousAnimation.previousAnimation;}else{animation.previousAnimation=previousAnimation;}if(nextAnimation.reduceMotion===undefined){nextAnimation.reduceMotion=animation.reduceMotion;}}const callback=function(finished){if(nextAnimation.callback){nextAnimation.callback(finished);}};return{isHigherOrder:true,onFrame:delay,onStart:onStart,current:nextAnimation.current,callback:callback,previousAnimation:null,startTime:0,started:false,reduceMotion:getReduceMotionForAnimation(reduceMotion)};});}\"\n  };\n  var _worklet_7709183711075_init_data = {\n    code: \"function reactNativeReanimated_delayTs2(){const{_nextAnimation,delayMs,getReduceMotionForAnimation,reduceMotion}=this.__closure;const nextAnimation=typeof _nextAnimation==='function'?_nextAnimation():_nextAnimation;function delay(animation,now){const{startTime:startTime,started:started,previousAnimation:previousAnimation}=animation;const current=animation.current;if(now-startTime>=delayMs||animation.reduceMotion){if(!started){nextAnimation.onStart(nextAnimation,current,now,previousAnimation);animation.previousAnimation=null;animation.started=true;}const finished=nextAnimation.onFrame(nextAnimation,now);animation.current=nextAnimation.current;return finished;}else if(previousAnimation){const finished=previousAnimation.finished||previousAnimation.onFrame(previousAnimation,now);animation.current=previousAnimation.current;if(finished){animation.previousAnimation=null;}}return false;}function onStart(animation,value,now,previousAnimation){animation.startTime=now;animation.started=false;animation.current=value;if(previousAnimation===animation){animation.previousAnimation=previousAnimation.previousAnimation;}else{animation.previousAnimation=previousAnimation;}if(nextAnimation.reduceMotion===undefined){nextAnimation.reduceMotion=animation.reduceMotion;}}const callback=function(finished){if(nextAnimation.callback){nextAnimation.callback(finished);}};return{isHigherOrder:true,onFrame:delay,onStart:onStart,current:nextAnimation.current,callback:callback,previousAnimation:null,startTime:0,started:false,reduceMotion:getReduceMotionForAnimation(reduceMotion)};}\"\n  };\n  /**\n   * An animation modifier that lets you start an animation with a delay.\n   *\n   * @param delayMs - Duration (in milliseconds) before the animation starts.\n   * @param nextAnimation - The animation to delay.\n   * @param reduceMotion - Determines how the animation responds to the device's\n   *   reduced motion accessibility setting. Default to `ReduceMotion.System` -\n   *   {@link ReduceMotion}.\n   * @returns An [animation\n   *   object](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animation-object)\n   *   which holds the current state of the animation.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/animations/withDelay\n   */\n  var withDelay = exports.withDelay = function () {\n    var reactNativeReanimated_delayTs1 = function (delayMs, _nextAnimation, reduceMotion) {\n      return (0, _util.defineAnimation)(_nextAnimation, function () {\n        var reactNativeReanimated_delayTs2 = function () {\n          var nextAnimation = typeof _nextAnimation === 'function' ? _nextAnimation() : _nextAnimation;\n          function delay(animation, now) {\n            var startTime = animation.startTime,\n              started = animation.started,\n              previousAnimation = animation.previousAnimation;\n            var current = animation.current;\n            if (now - startTime >= delayMs || animation.reduceMotion) {\n              if (!started) {\n                nextAnimation.onStart(nextAnimation, current, now, previousAnimation);\n                animation.previousAnimation = null;\n                animation.started = true;\n              }\n              var finished = nextAnimation.onFrame(nextAnimation, now);\n              animation.current = nextAnimation.current;\n              return finished;\n            } else if (previousAnimation) {\n              var _finished = previousAnimation.finished || previousAnimation.onFrame(previousAnimation, now);\n              animation.current = previousAnimation.current;\n              if (_finished) {\n                animation.previousAnimation = null;\n              }\n            }\n            return false;\n          }\n          function onStart(animation, value, now, previousAnimation) {\n            animation.startTime = now;\n            animation.started = false;\n            animation.current = value;\n            if (previousAnimation === animation) {\n              animation.previousAnimation = previousAnimation.previousAnimation;\n            } else {\n              animation.previousAnimation = previousAnimation;\n            }\n\n            // child animations inherit the setting, unless they already have it defined\n            // they will have it defined only if the user used the `reduceMotion` prop\n            if (nextAnimation.reduceMotion === undefined) {\n              nextAnimation.reduceMotion = animation.reduceMotion;\n            }\n          }\n          var callback = finished => {\n            if (nextAnimation.callback) {\n              nextAnimation.callback(finished);\n            }\n          };\n          return {\n            isHigherOrder: true,\n            onFrame: delay,\n            onStart,\n            current: nextAnimation.current,\n            callback,\n            previousAnimation: null,\n            startTime: 0,\n            started: false,\n            reduceMotion: (0, _util.getReduceMotionForAnimation)(reduceMotion)\n          };\n        };\n        reactNativeReanimated_delayTs2.__closure = {\n          _nextAnimation,\n          delayMs,\n          getReduceMotionForAnimation: _util.getReduceMotionForAnimation,\n          reduceMotion\n        };\n        reactNativeReanimated_delayTs2.__workletHash = 7709183711075;\n        reactNativeReanimated_delayTs2.__initData = _worklet_7709183711075_init_data;\n        return reactNativeReanimated_delayTs2;\n      }());\n    };\n    reactNativeReanimated_delayTs1.__closure = {\n      defineAnimation: _util.defineAnimation,\n      getReduceMotionForAnimation: _util.getReduceMotionForAnimation\n    };\n    reactNativeReanimated_delayTs1.__workletHash = 15976907666864;\n    reactNativeReanimated_delayTs1.__initData = _worklet_15976907666864_init_data;\n    return reactNativeReanimated_delayTs1;\n  }();\n});","lineCount":109,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"withDelay"],[7,19,1,13],[7,22,1,13,"undefined"],[7,31,1,13],[8,2,10,0],[8,6,10,0,"_util"],[8,11,10,0],[8,14,10,0,"require"],[8,21,10,0],[8,22,10,0,"_dependencyMap"],[8,36,10,0],[9,2,12,0],[10,2,12,0],[10,6,12,0,"_worklet_15976907666864_init_data"],[10,39,12,0],[11,4,12,0,"code"],[11,8,12,0],[12,2,12,0],[13,2,12,0],[13,6,12,0,"_worklet_7709183711075_init_data"],[13,38,12,0],[14,4,12,0,"code"],[14,8,12,0],[15,2,12,0],[16,2,19,0],[17,0,20,0],[18,0,21,0],[19,0,22,0],[20,0,23,0],[21,0,24,0],[22,0,25,0],[23,0,26,0],[24,0,27,0],[25,0,28,0],[26,0,29,0],[27,0,30,0],[28,0,31,0],[29,2,32,7],[29,6,32,13,"withDelay"],[29,15,32,22],[29,18,32,22,"exports"],[29,25,32,22],[29,26,32,22,"withDelay"],[29,35,32,22],[29,38,32,25],[30,4,32,25],[30,8,32,25,"reactNativeReanimated_delayTs1"],[30,38,32,25],[30,50,32,25,"reactNativeReanimated_delayTs1"],[30,51,33,2,"delayMs"],[30,58,33,17],[30,60,34,2,"_nextAnimation"],[30,74,34,31],[30,76,35,2,"reduceMotion"],[30,88,35,29],[30,90,36,29],[31,6,38,2],[31,13,38,9],[31,17,38,9,"defineAnimation"],[31,38,38,24],[31,40,39,4,"_nextAnimation"],[31,54,39,18],[31,56,40,4],[32,8,40,4],[32,12,40,4,"reactNativeReanimated_delayTs2"],[32,42,40,4],[32,54,40,4,"reactNativeReanimated_delayTs2"],[32,55,40,4],[32,57,40,26],[33,10,42,6],[33,14,42,12,"nextAnimation"],[33,27,42,25],[33,30,43,8],[33,37,43,15,"_nextAnimation"],[33,51,43,29],[33,56,43,34],[33,66,43,44],[33,69,44,12,"_nextAnimation"],[33,83,44,26],[33,84,44,27],[33,85,44,28],[33,88,45,12,"_nextAnimation"],[33,102,45,26],[34,10,47,6],[34,19,47,15,"delay"],[34,24,47,20,"delay"],[34,25,47,21,"animation"],[34,34,47,46],[34,36,47,48,"now"],[34,39,47,62],[34,41,47,73],[35,12,48,8],[35,16,48,16,"startTime"],[35,25,48,25],[35,28,48,58,"animation"],[35,37,48,67],[35,38,48,16,"startTime"],[35,47,48,25],[36,14,48,27,"started"],[36,21,48,34],[36,24,48,58,"animation"],[36,33,48,67],[36,34,48,27,"started"],[36,41,48,34],[37,14,48,36,"previousAnimation"],[37,31,48,53],[37,34,48,58,"animation"],[37,43,48,67],[37,44,48,36,"previousAnimation"],[37,61,48,53],[38,12,49,8],[38,16,49,14,"current"],[38,23,49,38],[38,26,49,41,"animation"],[38,35,49,50],[38,36,49,51,"current"],[38,43,49,58],[39,12,50,8],[39,16,50,12,"now"],[39,19,50,15],[39,22,50,18,"startTime"],[39,31,50,27],[39,35,50,31,"delayMs"],[39,42,50,38],[39,46,50,42,"animation"],[39,55,50,51],[39,56,50,52,"reduceMotion"],[39,68,50,64],[39,70,50,66],[40,14,51,10],[40,18,51,14],[40,19,51,15,"started"],[40,26,51,22],[40,28,51,24],[41,16,52,12,"nextAnimation"],[41,29,52,25],[41,30,52,26,"onStart"],[41,37,52,33],[41,38,53,14,"nextAnimation"],[41,51,53,27],[41,53,54,14,"current"],[41,60,54,21],[41,62,55,14,"now"],[41,65,55,17],[41,67,56,14,"previousAnimation"],[41,84,57,12],[41,85,57,13],[42,16,58,12,"animation"],[42,25,58,21],[42,26,58,22,"previousAnimation"],[42,43,58,39],[42,46,58,42],[42,50,58,46],[43,16,59,12,"animation"],[43,25,59,21],[43,26,59,22,"started"],[43,33,59,29],[43,36,59,32],[43,40,59,36],[44,14,60,10],[45,14,61,10],[45,18,61,16,"finished"],[45,26,61,24],[45,29,61,27,"nextAnimation"],[45,42,61,40],[45,43,61,41,"onFrame"],[45,50,61,48],[45,51,61,49,"nextAnimation"],[45,64,61,62],[45,66,61,64,"now"],[45,69,61,67],[45,70,61,68],[46,14,62,10,"animation"],[46,23,62,19],[46,24,62,20,"current"],[46,31,62,27],[46,34,62,30,"nextAnimation"],[46,47,62,43],[46,48,62,44,"current"],[46,55,62,52],[47,14,63,10],[47,21,63,17,"finished"],[47,29,63,25],[48,12,64,8],[48,13,64,9],[48,19,64,15],[48,23,64,19,"previousAnimation"],[48,40,64,36],[48,42,64,38],[49,14,65,10],[49,18,65,16,"finished"],[49,27,65,24],[49,30,66,12,"previousAnimation"],[49,47,66,29],[49,48,66,30,"finished"],[49,56,66,38],[49,60,67,12,"previousAnimation"],[49,77,67,29],[49,78,67,30,"onFrame"],[49,85,67,37],[49,86,67,38,"previousAnimation"],[49,103,67,55],[49,105,67,57,"now"],[49,108,67,60],[49,109,67,61],[50,14,68,10,"animation"],[50,23,68,19],[50,24,68,20,"current"],[50,31,68,27],[50,34,68,30,"previousAnimation"],[50,51,68,47],[50,52,68,48,"current"],[50,59,68,55],[51,14,69,10],[51,18,69,14,"finished"],[51,27,69,22],[51,29,69,24],[52,16,70,12,"animation"],[52,25,70,21],[52,26,70,22,"previousAnimation"],[52,43,70,39],[52,46,70,42],[52,50,70,46],[53,14,71,10],[54,12,72,8],[55,12,73,8],[55,19,73,15],[55,24,73,20],[56,10,74,6],[57,10,76,6],[57,19,76,15,"onStart"],[57,26,76,22,"onStart"],[57,27,77,8,"animation"],[57,36,77,33],[57,38,78,8,"value"],[57,43,78,30],[57,45,79,8,"now"],[57,48,79,22],[57,50,80,8,"previousAnimation"],[57,67,80,48],[57,69,81,14],[58,12,82,8,"animation"],[58,21,82,17],[58,22,82,18,"startTime"],[58,31,82,27],[58,34,82,30,"now"],[58,37,82,33],[59,12,83,8,"animation"],[59,21,83,17],[59,22,83,18,"started"],[59,29,83,25],[59,32,83,28],[59,37,83,33],[60,12,84,8,"animation"],[60,21,84,17],[60,22,84,18,"current"],[60,29,84,25],[60,32,84,28,"value"],[60,37,84,33],[61,12,85,8],[61,16,85,12,"previousAnimation"],[61,33,85,29],[61,38,85,34,"animation"],[61,47,85,43],[61,49,85,45],[62,14,86,10,"animation"],[62,23,86,19],[62,24,86,20,"previousAnimation"],[62,41,86,37],[62,44,86,40,"previousAnimation"],[62,61,86,57],[62,62,86,58,"previousAnimation"],[62,79,86,75],[63,12,87,8],[63,13,87,9],[63,19,87,15],[64,14,88,10,"animation"],[64,23,88,19],[64,24,88,20,"previousAnimation"],[64,41,88,37],[64,44,88,40,"previousAnimation"],[64,61,88,57],[65,12,89,8],[67,12,91,8],[68,12,92,8],[69,12,93,8],[69,16,93,12,"nextAnimation"],[69,29,93,25],[69,30,93,26,"reduceMotion"],[69,42,93,38],[69,47,93,43,"undefined"],[69,56,93,52],[69,58,93,54],[70,14,94,10,"nextAnimation"],[70,27,94,23],[70,28,94,24,"reduceMotion"],[70,40,94,36],[70,43,94,39,"animation"],[70,52,94,48],[70,53,94,49,"reduceMotion"],[70,65,94,61],[71,12,95,8],[72,10,96,6],[73,10,98,6],[73,14,98,12,"callback"],[73,22,98,20],[73,25,98,24,"finished"],[73,33,98,42],[73,37,98,53],[74,12,99,8],[74,16,99,12,"nextAnimation"],[74,29,99,25],[74,30,99,26,"callback"],[74,38,99,34],[74,40,99,36],[75,14,100,10,"nextAnimation"],[75,27,100,23],[75,28,100,24,"callback"],[75,36,100,32],[75,37,100,33,"finished"],[75,45,100,41],[75,46,100,42],[76,12,101,8],[77,10,102,6],[77,11,102,7],[78,10,104,6],[78,17,104,13],[79,12,105,8,"isHigherOrder"],[79,25,105,21],[79,27,105,23],[79,31,105,27],[80,12,106,8,"onFrame"],[80,19,106,15],[80,21,106,17,"delay"],[80,26,106,22],[81,12,107,8,"onStart"],[81,19,107,15],[82,12,108,8,"current"],[82,19,108,15],[82,21,108,17,"nextAnimation"],[82,34,108,30],[82,35,108,31,"current"],[82,42,108,39],[83,12,109,8,"callback"],[83,20,109,16],[84,12,110,8,"previousAnimation"],[84,29,110,25],[84,31,110,27],[84,35,110,31],[85,12,111,8,"startTime"],[85,21,111,17],[85,23,111,19],[85,24,111,20],[86,12,112,8,"started"],[86,19,112,15],[86,21,112,17],[86,26,112,22],[87,12,113,8,"reduceMotion"],[87,24,113,20],[87,26,113,22],[87,30,113,22,"getReduceMotionForAnimation"],[87,63,113,49],[87,65,113,50,"reduceMotion"],[87,77,113,62],[88,10,114,6],[88,11,114,7],[89,8,115,4],[89,9,115,5],[90,8,115,5,"reactNativeReanimated_delayTs2"],[90,38,115,5],[90,39,115,5,"__closure"],[90,48,115,5],[91,10,115,5,"_nextAnimation"],[91,24,115,5],[92,10,115,5,"delayMs"],[92,17,115,5],[93,10,115,5,"getReduceMotionForAnimation"],[93,37,115,5],[93,39,113,22,"getReduceMotionForAnimation"],[93,72,113,49],[94,10,113,49,"reduceMotion"],[95,8,113,49],[96,8,113,49,"reactNativeReanimated_delayTs2"],[96,38,113,49],[96,39,113,49,"__workletHash"],[96,52,113,49],[97,8,113,49,"reactNativeReanimated_delayTs2"],[97,38,113,49],[97,39,113,49,"__initData"],[97,49,113,49],[97,52,113,49,"_worklet_7709183711075_init_data"],[97,84,113,49],[98,8,113,49],[98,15,113,49,"reactNativeReanimated_delayTs2"],[98,45,113,49],[99,6,113,49],[99,7,40,4],[99,9,116,2],[99,10,116,3],[100,4,117,0],[100,5,117,1],[101,4,117,1,"reactNativeReanimated_delayTs1"],[101,34,117,1],[101,35,117,1,"__closure"],[101,44,117,1],[102,6,117,1,"defineAnimation"],[102,21,117,1],[102,23,38,9,"defineAnimation"],[102,44,38,24],[103,6,38,24,"getReduceMotionForAnimation"],[103,33,38,24],[103,35,113,22,"getReduceMotionForAnimation"],[104,4,113,49],[105,4,113,49,"reactNativeReanimated_delayTs1"],[105,34,113,49],[105,35,113,49,"__workletHash"],[105,48,113,49],[106,4,113,49,"reactNativeReanimated_delayTs1"],[106,34,113,49],[106,35,113,49,"__initData"],[106,45,113,49],[106,48,113,49,"_worklet_15976907666864_init_data"],[106,81,113,49],[107,4,113,49],[107,11,113,49,"reactNativeReanimated_delayTs1"],[107,41,113,49],[108,2,113,49],[108,3,32,25],[108,5,117,18],[109,0,117,19],[109,3]],"functionMap":{"names":["<global>","<anonymous>","defineAnimation$argument_1","delay","onStart","callback"],"mappings":"AAA;yBC+B;ICQ;MCO;OD2B;MEE;OFoB;uBGE;OHI;KDa;CDE"}},"type":"js/module"}]}