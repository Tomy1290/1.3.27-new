{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0=","exportNames":["*"]}},{"name":"@react-navigation/routers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":58,"index":73}}],"key":"TumjUqgKkj40CL5/as2VxzLfO54=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":74},"end":{"line":4,"column":31,"index":105}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-is","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":106},"end":{"line":5,"column":46,"index":152}}],"key":"nMRUu046PLZz3vjxw7Fgw3UH3xY=","exportNames":["*"]}},{"name":"use-latest-callback","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":153},"end":{"line":6,"column":52,"index":205}}],"key":"2ER/r3Agt+5SFwaFR8HXg24Rpu4=","exportNames":["*"]}},{"name":"./deepFreeze.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":206},"end":{"line":7,"column":45,"index":251}}],"key":"rNxrvQaXjK4/vUvPksJpbMJ5u+4=","exportNames":["*"]}},{"name":"./Group.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":252},"end":{"line":8,"column":35,"index":287}}],"key":"81XLedmR1ugWwxXMAacEe45V43M=","exportNames":["*"]}},{"name":"./isArrayEqual.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":288},"end":{"line":9,"column":49,"index":337}}],"key":"0Xv+Jf6vWjo3/vKyf7CxgrGRylo=","exportNames":["*"]}},{"name":"./isRecordEqual.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":338},"end":{"line":10,"column":51,"index":389}}],"key":"E5lU3h554k94C0V5puhR219BWnU=","exportNames":["*"]}},{"name":"./NavigationHelpersContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":390},"end":{"line":11,"column":73,"index":463}}],"key":"UPnefzBCahUrTRoOWw51hXJ7z+A=","exportNames":["*"]}},{"name":"./NavigationRouteContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":464},"end":{"line":12,"column":69,"index":533}}],"key":"AWXnpGNA5UkH1qQUM7hLv2L9KzI=","exportNames":["*"]}},{"name":"./NavigationStateContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":534},"end":{"line":13,"column":69,"index":603}}],"key":"vPXNy6i2DuFIp7nHtHgSOvNmS+U=","exportNames":["*"]}},{"name":"./PreventRemoveProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":604},"end":{"line":14,"column":67,"index":671}}],"key":"A/nq9Y/xSFBE06OzxjBtNMD9uQU=","exportNames":["*"]}},{"name":"./Screen.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":672},"end":{"line":15,"column":37,"index":709}}],"key":"YbGte4vf40k4Yjb9DRJvUiBpPUk=","exportNames":["*"]}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":710},"end":{"line":16,"column":47,"index":757}}],"key":"yJvqu7zVoaSgx/LOxsKU/6eppkQ=","exportNames":["*"]}},{"name":"./useChildListeners.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":758},"end":{"line":17,"column":59,"index":817}}],"key":"+uLQCjZF6jwjpLbZFDGLy8MVJhc=","exportNames":["*"]}},{"name":"./useClientLayoutEffect.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":818},"end":{"line":18,"column":67,"index":885}}],"key":"LhoNk5P88pw/w9+MH8FRVAlr+OQ=","exportNames":["*"]}},{"name":"./useComponent.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":886},"end":{"line":19,"column":49,"index":935}}],"key":"b66LKsk9Jf3uaP2v5j6OCNwoJlU=","exportNames":["*"]}},{"name":"./useCurrentRender.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":936},"end":{"line":20,"column":57,"index":993}}],"key":"McuG59KD5h0BHxEULOXCoLs/e2E=","exportNames":["*"]}},{"name":"./useDescriptors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0,"index":994},"end":{"line":21,"column":53,"index":1047}}],"key":"G1CfJySCSkhPC7rH5rQhaqLaTI0=","exportNames":["*"]}},{"name":"./useEventEmitter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0,"index":1048},"end":{"line":22,"column":55,"index":1103}}],"key":"f/gs/fnvuaPtRHedK9bCgn238kE=","exportNames":["*"]}},{"name":"./useFocusedListenersChildrenAdapter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":1104},"end":{"line":23,"column":93,"index":1197}}],"key":"OygHMRn4bEenld73jIuOxQ+gu9U=","exportNames":["*"]}},{"name":"./useFocusEvents.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":1198},"end":{"line":24,"column":53,"index":1251}}],"key":"8zqWYqMNSd/k9LIqrmfq1M3LrQU=","exportNames":["*"]}},{"name":"./useKeyedChildListeners.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":25,"column":0,"index":1252},"end":{"line":25,"column":69,"index":1321}}],"key":"uvEgxGYPcoeW+RryvJ51Glj8+aw=","exportNames":["*"]}},{"name":"./useLazyValue.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":26,"column":0,"index":1322},"end":{"line":26,"column":49,"index":1371}}],"key":"4aMiFZmnD/ZJbzJTaYI7ECYTV2s=","exportNames":["*"]}},{"name":"./useNavigationHelpers.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":27,"column":0,"index":1372},"end":{"line":27,"column":65,"index":1437}}],"key":"c9g7geoBBHpEed2xjMQ2EV7DCFE=","exportNames":["*"]}},{"name":"./useNavigationState.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":28,"column":0,"index":1438},"end":{"line":28,"column":74,"index":1512}}],"key":"YLzO6pWqOUYOyLCSKhbq1BFmhy0=","exportNames":["*"]}},{"name":"./useOnAction.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":29,"column":0,"index":1513},"end":{"line":29,"column":47,"index":1560}}],"key":"oVCZ93YyJFpAvJlQLQH3T1CuCCk=","exportNames":["*"]}},{"name":"./useOnGetState.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":30,"column":0,"index":1561},"end":{"line":30,"column":51,"index":1612}}],"key":"/XMjJjmKD4ejBJNDiIDjXKDJRFk=","exportNames":["*"]}},{"name":"./useOnRouteFocus.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":31,"column":0,"index":1613},"end":{"line":31,"column":55,"index":1668}}],"key":"5V4g0kBeeaIrUwTen4o2q6oj60U=","exportNames":["*"]}},{"name":"./useRegisterNavigator.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":32,"column":0,"index":1669},"end":{"line":32,"column":65,"index":1734}}],"key":"KZzTt58Kkr/mzgiCdvRDRowLya8=","exportNames":["*"]}},{"name":"./useScheduleUpdate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":1735},"end":{"line":33,"column":59,"index":1794}}],"key":"FnFZL3NH40gExc7dikLfREzDCec=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":37,"column":0,"index":1910},"end":{"line":37,"column":48,"index":1958}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useNavigationBuilder = useNavigationBuilder;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _objectWithoutProperties2 = _interopRequireDefault(require(_dependencyMap[2]));\n  var _routers = require(_dependencyMap[3]);\n  var React = _interopRequireWildcard(require(_dependencyMap[4]));\n  var _reactIs = require(_dependencyMap[5]);\n  var _useLatestCallback = _interopRequireDefault(require(_dependencyMap[6]));\n  var _deepFreeze = require(_dependencyMap[7]);\n  var _Group = require(_dependencyMap[8]);\n  var _isArrayEqual = require(_dependencyMap[9]);\n  var _isRecordEqual = require(_dependencyMap[10]);\n  var _NavigationHelpersContext = require(_dependencyMap[11]);\n  var _NavigationRouteContext = require(_dependencyMap[12]);\n  var _NavigationStateContext = require(_dependencyMap[13]);\n  var _PreventRemoveProvider = require(_dependencyMap[14]);\n  var _Screen = require(_dependencyMap[15]);\n  var _types = require(_dependencyMap[16]);\n  var _useChildListeners2 = require(_dependencyMap[17]);\n  var _useClientLayoutEffect = require(_dependencyMap[18]);\n  var _useComponent = require(_dependencyMap[19]);\n  var _useCurrentRender = require(_dependencyMap[20]);\n  var _useDescriptors2 = require(_dependencyMap[21]);\n  var _useEventEmitter = require(_dependencyMap[22]);\n  var _useFocusedListenersChildrenAdapter = require(_dependencyMap[23]);\n  var _useFocusEvents = require(_dependencyMap[24]);\n  var _useKeyedChildListeners = require(_dependencyMap[25]);\n  var _useLazyValue = require(_dependencyMap[26]);\n  var _useNavigationHelpers = require(_dependencyMap[27]);\n  var _useNavigationState = require(_dependencyMap[28]);\n  var _useOnAction = require(_dependencyMap[29]);\n  var _useOnGetState = require(_dependencyMap[30]);\n  var _useOnRouteFocus = require(_dependencyMap[31]);\n  var _useRegisterNavigator = require(_dependencyMap[32]);\n  var _useScheduleUpdate = require(_dependencyMap[33]);\n  var _jsxRuntime = require(_dependencyMap[34]);\n  var _excluded = [\"children\", \"layout\", \"screenOptions\", \"screenLayout\", \"screenListeners\", \"UNSTABLE_router\"]; // This is to make TypeScript compiler happy\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  _types.PrivateValueStore;\n  var isScreen = child => {\n    return child.type === _Screen.Screen;\n  };\n  var isGroup = child => {\n    return child.type === React.Fragment || child.type === _Group.Group;\n  };\n  var isValidKey = key => key === undefined || typeof key === 'string' && key !== '';\n\n  /**\n   * Extract route config object from React children elements.\n   *\n   * @param children React Elements to extract the config from.\n   */\n  var getRouteConfigsFromChildren = (children, groupKey, groupOptions, groupLayout) => {\n    var configs = React.Children.toArray(children).reduce((acc, child) => {\n      if (/*#__PURE__*/React.isValidElement(child)) {\n        if (isScreen(child)) {\n          // We can only extract the config from `Screen` elements\n          // If something else was rendered, it's probably a bug\n\n          if (typeof child.props !== 'object' || child.props === null) {\n            throw new Error(`Got an invalid element for screen.`);\n          }\n          if (typeof child.props.name !== 'string' || child.props.name === '') {\n            throw new Error(`Got an invalid name (${JSON.stringify(child.props.name)}) for the screen. It must be a non-empty string.`);\n          }\n          if (child.props.navigationKey !== undefined && (typeof child.props.navigationKey !== 'string' || child.props.navigationKey === '')) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the screen '${child.props.name}'. It must be a non-empty string or 'undefined'.`);\n          }\n          acc.push({\n            keys: [groupKey, child.props.navigationKey],\n            options: groupOptions,\n            layout: groupLayout,\n            props: child.props\n          });\n          return acc;\n        }\n        if (isGroup(child)) {\n          if (!isValidKey(child.props.navigationKey)) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the group. It must be a non-empty string or 'undefined'.`);\n          }\n\n          // When we encounter a fragment or group, we need to dive into its children to extract the configs\n          // This is handy to conditionally define a group of screens\n          acc.push(...getRouteConfigsFromChildren(child.props.children, child.props.navigationKey,\n          // FIXME\n          // @ts-expect-error: add validation\n          child.type !== _Group.Group ? groupOptions : groupOptions != null ? [...groupOptions, child.props.screenOptions] : [child.props.screenOptions], typeof child.props.screenLayout === 'function' ? child.props.screenLayout : groupLayout));\n          return acc;\n        }\n      }\n      throw new Error(`A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${/*#__PURE__*/ /*#__PURE__*/React.isValidElement(child) ? `'${typeof child.type === 'string' ? child.type : child.type?.name}'${child.props != null && typeof child.props === 'object' && 'name' in child.props && child.props?.name ? ` for the screen '${child.props.name}'` : ''}` : typeof child === 'object' ? JSON.stringify(child) : `'${String(child)}'`}). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`);\n    }, []);\n    return configs;\n  };\n\n  /**\n   * Hook for building navigators.\n   *\n   * @param createRouter Factory method which returns router object.\n   * @param options Options object containing `children` and additional options for the router.\n   * @returns An object containing `state`, `navigation`, `descriptors` objects.\n   */\n  function useNavigationBuilder(createRouter, options) {\n    var navigatorKey = (0, _useRegisterNavigator.useRegisterNavigator)();\n    var route = React.useContext(_NavigationRouteContext.NavigationRouteContext);\n    var children = options.children,\n      layout = options.layout,\n      screenOptions = options.screenOptions,\n      screenLayout = options.screenLayout,\n      screenListeners = options.screenListeners,\n      UNSTABLE_router = options.UNSTABLE_router,\n      rest = (0, _objectWithoutProperties2.default)(options, _excluded);\n    var routeConfigs = getRouteConfigsFromChildren(children);\n    var router = (0, _useLazyValue.useLazyValue)(() => {\n      if (rest.initialRouteName != null && routeConfigs.every(config => config.props.name !== rest.initialRouteName)) {\n        throw new Error(`Couldn't find a screen named '${rest.initialRouteName}' to use as 'initialRouteName'.`);\n      }\n      var original = createRouter(rest);\n      if (UNSTABLE_router != null) {\n        var overrides = UNSTABLE_router(original);\n        return {\n          ...original,\n          ...overrides\n        };\n      }\n      return original;\n    });\n    var screens = routeConfigs.reduce((acc, config) => {\n      if (config.props.name in acc) {\n        throw new Error(`A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`);\n      }\n      acc[config.props.name] = config;\n      return acc;\n    }, {});\n    var routeNames = routeConfigs.map(config => config.props.name);\n    var routeKeyList = routeNames.reduce((acc, curr) => {\n      acc[curr] = screens[curr].keys.map(key => key ?? '').join(':');\n      return acc;\n    }, {});\n    var routeParamList = routeNames.reduce((acc, curr) => {\n      var initialParams = screens[curr].props.initialParams;\n      acc[curr] = initialParams;\n      return acc;\n    }, {});\n    var routeGetIdList = routeNames.reduce((acc, curr) => Object.assign(acc, {\n      [curr]: screens[curr].props.getId\n    }), {});\n    if (!routeNames.length) {\n      throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");\n    }\n    var isStateValid = React.useCallback(state => state.type === undefined || state.type === router.type, [router.type]);\n    var isStateInitialized = React.useCallback(state => state !== undefined && state.stale === false && isStateValid(state), [isStateValid]);\n    var _React$useContext = React.useContext(_NavigationStateContext.NavigationStateContext),\n      currentState = _React$useContext.state,\n      getCurrentState = _React$useContext.getState,\n      setCurrentState = _React$useContext.setState,\n      setKey = _React$useContext.setKey,\n      getKey = _React$useContext.getKey,\n      getIsInitial = _React$useContext.getIsInitial;\n    var stateCleanedUp = React.useRef(false);\n    var setState = (0, _useLatestCallback.default)(state => {\n      if (stateCleanedUp.current) {\n        // State might have been already cleaned up due to unmount\n        // We do not want to expose API allowing to override this\n        // This would lead to old data preservation on main navigator unmount\n        return;\n      }\n      setCurrentState(state);\n    });\n    var _React$useMemo = React.useMemo(() => {\n        var initialRouteParamList = routeNames.reduce((acc, curr) => {\n          var initialParams = screens[curr].props.initialParams;\n          var initialParamsFromParams = route?.params?.state == null && route?.params?.initial !== false && route?.params?.screen === curr ? route.params.params : undefined;\n          acc[curr] = initialParams !== undefined || initialParamsFromParams !== undefined ? {\n            ...initialParams,\n            ...initialParamsFromParams\n          } : undefined;\n          return acc;\n        }, {});\n\n        // If the current state isn't initialized on first render, we initialize it\n        // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n        // Otherwise assume that the state was provided as initial state\n        // So we need to rehydrate it to make it usable\n        if ((currentState === undefined || !isStateValid(currentState)) && route?.params?.state == null && !(typeof route?.params?.screen === 'string' && route?.params?.initial !== false)) {\n          return [router.getInitialState({\n            routeNames,\n            routeParamList: initialRouteParamList,\n            routeGetIdList\n          }), true];\n        } else {\n          var stateFromParams;\n          if (route?.params?.state != null) {\n            stateFromParams = route.params.state;\n          } else if (typeof route?.params?.screen === 'string' && route?.params?.initial !== false) {\n            stateFromParams = {\n              index: 0,\n              routes: [{\n                name: route.params.screen,\n                params: route.params.params,\n                path: route.params.path\n              }]\n            };\n          }\n          return [router.getRehydratedState(stateFromParams ?? currentState, {\n            routeNames,\n            routeParamList: initialRouteParamList,\n            routeGetIdList\n          }), false];\n        }\n        // We explicitly don't include routeNames, route.params etc. in the dep list\n        // below. We want to avoid forcing a new state to be calculated in those cases\n        // Instead, we handle changes to these in the nextState code below. Note\n        // that some changes to routeConfigs are explicitly ignored, such as changes\n        // to initialParams\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [currentState, router, isStateValid]),\n      _React$useMemo2 = (0, _slicedToArray2.default)(_React$useMemo, 2),\n      initializedState = _React$useMemo2[0],\n      isFirstStateInitialization = _React$useMemo2[1];\n    var previousRouteKeyListRef = React.useRef(routeKeyList);\n    React.useEffect(() => {\n      previousRouteKeyListRef.current = routeKeyList;\n    });\n    var previousRouteKeyList = previousRouteKeyListRef.current;\n    var state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initialized locally\n    // So it'll be `undefined` or stale until the first navigation event happens\n    isStateInitialized(currentState) ? currentState : initializedState;\n    var nextState = state;\n    if (!(0, _isArrayEqual.isArrayEqual)(state.routeNames, routeNames) || !(0, _isRecordEqual.isRecordEqual)(routeKeyList, previousRouteKeyList)) {\n      // When the list of route names change, the router should handle it to remove invalid routes\n      nextState = router.getStateForRouteNamesChange(state, {\n        routeNames,\n        routeParamList,\n        routeGetIdList,\n        routeKeyChanges: Object.keys(routeKeyList).filter(name => name in previousRouteKeyList && routeKeyList[name] !== previousRouteKeyList[name])\n      });\n    }\n    var previousNestedParamsRef = React.useRef(route?.params);\n    React.useEffect(() => {\n      previousNestedParamsRef.current = route?.params;\n    }, [route?.params]);\n    if (route?.params) {\n      var previousParams = previousNestedParamsRef.current;\n      var action;\n      if (typeof route.params.state === 'object' && route.params.state != null && route.params !== previousParams) {\n        // If the route was updated with new state, we should reset to it\n        action = _routers.CommonActions.reset(route.params.state);\n      } else if (typeof route.params.screen === 'string' && (route.params.initial === false && isFirstStateInitialization || route.params !== previousParams)) {\n        // If the route was updated with new screen name and/or params, we should navigate there\n        action = _routers.CommonActions.navigate({\n          name: route.params.screen,\n          params: route.params.params,\n          path: route.params.path,\n          merge: route.params.merge,\n          pop: route.params.pop\n        });\n      }\n\n      // The update should be limited to current navigator only, so we call the router manually\n      var updatedState = action ? router.getStateForAction(nextState, action, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : null;\n      nextState = updatedState !== null ? router.getRehydratedState(updatedState, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : nextState;\n    }\n    var shouldUpdate = state !== nextState;\n    (0, _useScheduleUpdate.useScheduleUpdate)(() => {\n      if (shouldUpdate) {\n        // If the state needs to be updated, we'll schedule an update\n        setState(nextState);\n      }\n    });\n\n    // The up-to-date state will come in next render, but we don't need to wait for it\n    // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n    // So we override the state object we return to use the latest state as soon as possible\n    state = nextState;\n    React.useEffect(() => {\n      // In strict mode, React will double-invoke effects.\n      // So we need to reset the flag if component was not unmounted\n      stateCleanedUp.current = false;\n      setKey(navigatorKey);\n      if (!getIsInitial()) {\n        // If it's not initial render, we need to update the state\n        // This will make sure that our container gets notifier of state changes due to new mounts\n        // This is necessary for proper screen tracking, URL updates etc.\n        setState(nextState);\n      }\n      return () => {\n        // We need to clean up state for this navigator on unmount\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          setCurrentState(undefined);\n          stateCleanedUp.current = true;\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // In some cases (e.g. route names change), internal state might have changed\n    // But it hasn't been committed yet, so hasn't propagated to the sync external store\n    // During this time, we need to return the internal state in `getState`\n    // Otherwise it can result in inconsistent state during render in children\n    // To avoid this, we use a ref for render phase, and immediately clear it on commit\n    var stateRef = React.useRef(state);\n    stateRef.current = state;\n    (0, _useClientLayoutEffect.useClientLayoutEffect)(() => {\n      stateRef.current = null;\n    });\n    var getState = (0, _useLatestCallback.default)(() => {\n      var currentState = getCurrentState();\n      return (0, _deepFreeze.deepFreeze)(isStateInitialized(currentState) ? currentState : initializedState);\n    });\n    var emitter = (0, _useEventEmitter.useEventEmitter)(e => {\n      var routeNames = [];\n      var route;\n      if (e.target) {\n        route = state.routes.find(route => route.key === e.target);\n        if (route?.name) {\n          routeNames.push(route.name);\n        }\n      } else {\n        route = state.routes[state.index];\n        routeNames.push(...Object.keys(screens).filter(name => route?.name === name));\n      }\n      if (route == null) {\n        return;\n      }\n      var navigation = descriptors[route.key].navigation;\n      var listeners = [].concat(\n      // Get an array of listeners for all screens + common listeners on navigator\n      ...[screenListeners, ...routeNames.map(name => {\n        var listeners = screens[name].props.listeners;\n        return listeners;\n      })].map(listeners => {\n        var map = typeof listeners === 'function' ? listeners({\n          route: route,\n          navigation\n        }) : listeners;\n        return map ? Object.keys(map).filter(type => type === e.type).map(type => map?.[type]) : undefined;\n      }))\n      // We don't want same listener to be called multiple times for same event\n      // So we remove any duplicate functions from the array\n      .filter((cb, i, self) => cb && self.lastIndexOf(cb) === i);\n      listeners.forEach(listener => listener?.(e));\n    });\n    (0, _useFocusEvents.useFocusEvents)({\n      state,\n      emitter\n    });\n    React.useEffect(() => {\n      emitter.emit({\n        type: 'state',\n        data: {\n          state\n        }\n      });\n    }, [emitter, state]);\n    var _useChildListeners = (0, _useChildListeners2.useChildListeners)(),\n      childListeners = _useChildListeners.listeners,\n      addListener = _useChildListeners.addListener;\n    var _useKeyedChildListene = (0, _useKeyedChildListeners.useKeyedChildListeners)(),\n      keyedListeners = _useKeyedChildListene.keyedListeners,\n      addKeyedListener = _useKeyedChildListene.addKeyedListener;\n    var onAction = (0, _useOnAction.useOnAction)({\n      router,\n      getState,\n      setState,\n      key: route?.key,\n      actionListeners: childListeners.action,\n      beforeRemoveListeners: keyedListeners.beforeRemove,\n      routerConfigOptions: {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      },\n      emitter\n    });\n    var onRouteFocus = (0, _useOnRouteFocus.useOnRouteFocus)({\n      router,\n      key: route?.key,\n      getState,\n      setState\n    });\n    var navigation = (0, _useNavigationHelpers.useNavigationHelpers)({\n      id: options.id,\n      onAction,\n      getState,\n      emitter,\n      router,\n      stateRef\n    });\n    (0, _useFocusedListenersChildrenAdapter.useFocusedListenersChildrenAdapter)({\n      navigation,\n      focusedListeners: childListeners.focus\n    });\n    (0, _useOnGetState.useOnGetState)({\n      getState,\n      getStateListeners: keyedListeners.getState\n    });\n    var _useDescriptors = (0, _useDescriptors2.useDescriptors)({\n        state,\n        screens,\n        navigation,\n        screenOptions,\n        screenLayout,\n        onAction,\n        getState,\n        setState,\n        onRouteFocus,\n        addListener,\n        addKeyedListener,\n        router,\n        // @ts-expect-error: this should have both core and custom events, but too much work right now\n        emitter\n      }),\n      describe = _useDescriptors.describe,\n      descriptors = _useDescriptors.descriptors;\n    (0, _useCurrentRender.useCurrentRender)({\n      state,\n      navigation,\n      descriptors\n    });\n    var NavigationContent = (0, _useComponent.useComponent)(children => {\n      var element = layout != null ? layout({\n        state,\n        descriptors,\n        navigation,\n        children\n      }) : children;\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_NavigationHelpersContext.NavigationHelpersContext.Provider, {\n        value: navigation,\n        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_useNavigationState.NavigationStateListenerProvider, {\n          state: state,\n          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_PreventRemoveProvider.PreventRemoveProvider, {\n            children: element\n          })\n        })\n      });\n    });\n    return {\n      state,\n      navigation,\n      describe,\n      descriptors,\n      NavigationContent\n    };\n  }\n});","lineCount":463,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"useNavigationBuilder"],[8,30,1,13],[8,33,1,13,"useNavigationBuilder"],[8,53,1,13],[9,2,1,13],[9,6,1,13,"_slicedToArray2"],[9,21,1,13],[9,24,1,13,"_interopRequireDefault"],[9,46,1,13],[9,47,1,13,"require"],[9,54,1,13],[9,55,1,13,"_dependencyMap"],[9,69,1,13],[10,2,1,13],[10,6,1,13,"_objectWithoutProperties2"],[10,31,1,13],[10,34,1,13,"_interopRequireDefault"],[10,56,1,13],[10,57,1,13,"require"],[10,64,1,13],[10,65,1,13,"_dependencyMap"],[10,79,1,13],[11,2,3,0],[11,6,3,0,"_routers"],[11,14,3,0],[11,17,3,0,"require"],[11,24,3,0],[11,25,3,0,"_dependencyMap"],[11,39,3,0],[12,2,4,0],[12,6,4,0,"React"],[12,11,4,0],[12,14,4,0,"_interopRequireWildcard"],[12,37,4,0],[12,38,4,0,"require"],[12,45,4,0],[12,46,4,0,"_dependencyMap"],[12,60,4,0],[13,2,5,0],[13,6,5,0,"_reactIs"],[13,14,5,0],[13,17,5,0,"require"],[13,24,5,0],[13,25,5,0,"_dependencyMap"],[13,39,5,0],[14,2,6,0],[14,6,6,0,"_useLatestCallback"],[14,24,6,0],[14,27,6,0,"_interopRequireDefault"],[14,49,6,0],[14,50,6,0,"require"],[14,57,6,0],[14,58,6,0,"_dependencyMap"],[14,72,6,0],[15,2,7,0],[15,6,7,0,"_deepFreeze"],[15,17,7,0],[15,20,7,0,"require"],[15,27,7,0],[15,28,7,0,"_dependencyMap"],[15,42,7,0],[16,2,8,0],[16,6,8,0,"_Group"],[16,12,8,0],[16,15,8,0,"require"],[16,22,8,0],[16,23,8,0,"_dependencyMap"],[16,37,8,0],[17,2,9,0],[17,6,9,0,"_isArrayEqual"],[17,19,9,0],[17,22,9,0,"require"],[17,29,9,0],[17,30,9,0,"_dependencyMap"],[17,44,9,0],[18,2,10,0],[18,6,10,0,"_isRecordEqual"],[18,20,10,0],[18,23,10,0,"require"],[18,30,10,0],[18,31,10,0,"_dependencyMap"],[18,45,10,0],[19,2,11,0],[19,6,11,0,"_NavigationHelpersContext"],[19,31,11,0],[19,34,11,0,"require"],[19,41,11,0],[19,42,11,0,"_dependencyMap"],[19,56,11,0],[20,2,12,0],[20,6,12,0,"_NavigationRouteContext"],[20,29,12,0],[20,32,12,0,"require"],[20,39,12,0],[20,40,12,0,"_dependencyMap"],[20,54,12,0],[21,2,13,0],[21,6,13,0,"_NavigationStateContext"],[21,29,13,0],[21,32,13,0,"require"],[21,39,13,0],[21,40,13,0,"_dependencyMap"],[21,54,13,0],[22,2,14,0],[22,6,14,0,"_PreventRemoveProvider"],[22,28,14,0],[22,31,14,0,"require"],[22,38,14,0],[22,39,14,0,"_dependencyMap"],[22,53,14,0],[23,2,15,0],[23,6,15,0,"_Screen"],[23,13,15,0],[23,16,15,0,"require"],[23,23,15,0],[23,24,15,0,"_dependencyMap"],[23,38,15,0],[24,2,16,0],[24,6,16,0,"_types"],[24,12,16,0],[24,15,16,0,"require"],[24,22,16,0],[24,23,16,0,"_dependencyMap"],[24,37,16,0],[25,2,17,0],[25,6,17,0,"_useChildListeners2"],[25,25,17,0],[25,28,17,0,"require"],[25,35,17,0],[25,36,17,0,"_dependencyMap"],[25,50,17,0],[26,2,18,0],[26,6,18,0,"_useClientLayoutEffect"],[26,28,18,0],[26,31,18,0,"require"],[26,38,18,0],[26,39,18,0,"_dependencyMap"],[26,53,18,0],[27,2,19,0],[27,6,19,0,"_useComponent"],[27,19,19,0],[27,22,19,0,"require"],[27,29,19,0],[27,30,19,0,"_dependencyMap"],[27,44,19,0],[28,2,20,0],[28,6,20,0,"_useCurrentRender"],[28,23,20,0],[28,26,20,0,"require"],[28,33,20,0],[28,34,20,0,"_dependencyMap"],[28,48,20,0],[29,2,21,0],[29,6,21,0,"_useDescriptors2"],[29,22,21,0],[29,25,21,0,"require"],[29,32,21,0],[29,33,21,0,"_dependencyMap"],[29,47,21,0],[30,2,22,0],[30,6,22,0,"_useEventEmitter"],[30,22,22,0],[30,25,22,0,"require"],[30,32,22,0],[30,33,22,0,"_dependencyMap"],[30,47,22,0],[31,2,23,0],[31,6,23,0,"_useFocusedListenersChildrenAdapter"],[31,41,23,0],[31,44,23,0,"require"],[31,51,23,0],[31,52,23,0,"_dependencyMap"],[31,66,23,0],[32,2,24,0],[32,6,24,0,"_useFocusEvents"],[32,21,24,0],[32,24,24,0,"require"],[32,31,24,0],[32,32,24,0,"_dependencyMap"],[32,46,24,0],[33,2,25,0],[33,6,25,0,"_useKeyedChildListeners"],[33,29,25,0],[33,32,25,0,"require"],[33,39,25,0],[33,40,25,0,"_dependencyMap"],[33,54,25,0],[34,2,26,0],[34,6,26,0,"_useLazyValue"],[34,19,26,0],[34,22,26,0,"require"],[34,29,26,0],[34,30,26,0,"_dependencyMap"],[34,44,26,0],[35,2,27,0],[35,6,27,0,"_useNavigationHelpers"],[35,27,27,0],[35,30,27,0,"require"],[35,37,27,0],[35,38,27,0,"_dependencyMap"],[35,52,27,0],[36,2,28,0],[36,6,28,0,"_useNavigationState"],[36,25,28,0],[36,28,28,0,"require"],[36,35,28,0],[36,36,28,0,"_dependencyMap"],[36,50,28,0],[37,2,29,0],[37,6,29,0,"_useOnAction"],[37,18,29,0],[37,21,29,0,"require"],[37,28,29,0],[37,29,29,0,"_dependencyMap"],[37,43,29,0],[38,2,30,0],[38,6,30,0,"_useOnGetState"],[38,20,30,0],[38,23,30,0,"require"],[38,30,30,0],[38,31,30,0,"_dependencyMap"],[38,45,30,0],[39,2,31,0],[39,6,31,0,"_useOnRouteFocus"],[39,22,31,0],[39,25,31,0,"require"],[39,32,31,0],[39,33,31,0,"_dependencyMap"],[39,47,31,0],[40,2,32,0],[40,6,32,0,"_useRegisterNavigator"],[40,27,32,0],[40,30,32,0,"require"],[40,37,32,0],[40,38,32,0,"_dependencyMap"],[40,52,32,0],[41,2,33,0],[41,6,33,0,"_useScheduleUpdate"],[41,24,33,0],[41,27,33,0,"require"],[41,34,33,0],[41,35,33,0,"_dependencyMap"],[41,49,33,0],[42,2,37,0],[42,6,37,0,"_jsxRuntime"],[42,17,37,0],[42,20,37,0,"require"],[42,27,37,0],[42,28,37,0,"_dependencyMap"],[42,42,37,0],[43,2,37,48],[43,6,37,48,"_excluded"],[43,15,37,48],[43,113,35,0],[44,2,36,0],[45,2,36,0],[45,11,36,0,"_interopRequireWildcard"],[45,35,36,0,"e"],[45,36,36,0],[45,38,36,0,"t"],[45,39,36,0],[45,68,36,0,"WeakMap"],[45,75,36,0],[45,81,36,0,"r"],[45,82,36,0],[45,89,36,0,"WeakMap"],[45,96,36,0],[45,100,36,0,"n"],[45,101,36,0],[45,108,36,0,"WeakMap"],[45,115,36,0],[45,127,36,0,"_interopRequireWildcard"],[45,150,36,0],[45,162,36,0,"_interopRequireWildcard"],[45,163,36,0,"e"],[45,164,36,0],[45,166,36,0,"t"],[45,167,36,0],[45,176,36,0,"t"],[45,177,36,0],[45,181,36,0,"e"],[45,182,36,0],[45,186,36,0,"e"],[45,187,36,0],[45,188,36,0,"__esModule"],[45,198,36,0],[45,207,36,0,"e"],[45,208,36,0],[45,214,36,0,"o"],[45,215,36,0],[45,217,36,0,"i"],[45,218,36,0],[45,220,36,0,"f"],[45,221,36,0],[45,226,36,0,"__proto__"],[45,235,36,0],[45,243,36,0,"default"],[45,250,36,0],[45,252,36,0,"e"],[45,253,36,0],[45,270,36,0,"e"],[45,271,36,0],[45,294,36,0,"e"],[45,295,36,0],[45,320,36,0,"e"],[45,321,36,0],[45,330,36,0,"f"],[45,331,36,0],[45,337,36,0,"o"],[45,338,36,0],[45,341,36,0,"t"],[45,342,36,0],[45,345,36,0,"n"],[45,346,36,0],[45,349,36,0,"r"],[45,350,36,0],[45,358,36,0,"o"],[45,359,36,0],[45,360,36,0,"has"],[45,363,36,0],[45,364,36,0,"e"],[45,365,36,0],[45,375,36,0,"o"],[45,376,36,0],[45,377,36,0,"get"],[45,380,36,0],[45,381,36,0,"e"],[45,382,36,0],[45,385,36,0,"o"],[45,386,36,0],[45,387,36,0,"set"],[45,390,36,0],[45,391,36,0,"e"],[45,392,36,0],[45,394,36,0,"f"],[45,395,36,0],[45,409,36,0,"_t"],[45,411,36,0],[45,415,36,0,"e"],[45,416,36,0],[45,432,36,0,"_t"],[45,434,36,0],[45,441,36,0,"hasOwnProperty"],[45,455,36,0],[45,456,36,0,"call"],[45,460,36,0],[45,461,36,0,"e"],[45,462,36,0],[45,464,36,0,"_t"],[45,466,36,0],[45,473,36,0,"i"],[45,474,36,0],[45,478,36,0,"o"],[45,479,36,0],[45,482,36,0,"Object"],[45,488,36,0],[45,489,36,0,"defineProperty"],[45,503,36,0],[45,508,36,0,"Object"],[45,514,36,0],[45,515,36,0,"getOwnPropertyDescriptor"],[45,539,36,0],[45,540,36,0,"e"],[45,541,36,0],[45,543,36,0,"_t"],[45,545,36,0],[45,552,36,0,"i"],[45,553,36,0],[45,554,36,0,"get"],[45,557,36,0],[45,561,36,0,"i"],[45,562,36,0],[45,563,36,0,"set"],[45,566,36,0],[45,570,36,0,"o"],[45,571,36,0],[45,572,36,0,"f"],[45,573,36,0],[45,575,36,0,"_t"],[45,577,36,0],[45,579,36,0,"i"],[45,580,36,0],[45,584,36,0,"f"],[45,585,36,0],[45,586,36,0,"_t"],[45,588,36,0],[45,592,36,0,"e"],[45,593,36,0],[45,594,36,0,"_t"],[45,596,36,0],[45,607,36,0,"f"],[45,608,36,0],[45,613,36,0,"e"],[45,614,36,0],[45,616,36,0,"t"],[45,617,36,0],[46,2,38,0,"PrivateValueStore"],[46,26,38,17],[47,2,39,0],[47,6,39,6,"isScreen"],[47,14,39,14],[47,17,39,17,"child"],[47,22,39,22],[47,26,39,26],[48,4,40,2],[48,11,40,9,"child"],[48,16,40,14],[48,17,40,15,"type"],[48,21,40,19],[48,26,40,24,"Screen"],[48,40,40,30],[49,2,41,0],[49,3,41,1],[50,2,42,0],[50,6,42,6,"isGroup"],[50,13,42,13],[50,16,42,16,"child"],[50,21,42,21],[50,25,42,25],[51,4,43,2],[51,11,43,9,"child"],[51,16,43,14],[51,17,43,15,"type"],[51,21,43,19],[51,26,43,24,"React"],[51,31,43,29],[51,32,43,30,"Fragment"],[51,40,43,38],[51,44,43,42,"child"],[51,49,43,47],[51,50,43,48,"type"],[51,54,43,52],[51,59,43,57,"Group"],[51,71,43,62],[52,2,44,0],[52,3,44,1],[53,2,45,0],[53,6,45,6,"isValidKey"],[53,16,45,16],[53,19,45,19,"key"],[53,22,45,22],[53,26,45,26,"key"],[53,29,45,29],[53,34,45,34,"undefined"],[53,43,45,43],[53,47,45,47],[53,54,45,54,"key"],[53,57,45,57],[53,62,45,62],[53,70,45,70],[53,74,45,74,"key"],[53,77,45,77],[53,82,45,82],[53,84,45,84],[55,2,47,0],[56,0,48,0],[57,0,49,0],[58,0,50,0],[59,0,51,0],[60,2,52,0],[60,6,52,6,"getRouteConfigsFromChildren"],[60,33,52,33],[60,36,52,36,"getRouteConfigsFromChildren"],[60,37,52,37,"children"],[60,45,52,45],[60,47,52,47,"groupKey"],[60,55,52,55],[60,57,52,57,"groupOptions"],[60,69,52,69],[60,71,52,71,"groupLayout"],[60,82,52,82],[60,87,52,87],[61,4,53,2],[61,8,53,8,"configs"],[61,15,53,15],[61,18,53,18,"React"],[61,23,53,23],[61,24,53,24,"Children"],[61,32,53,32],[61,33,53,33,"toArray"],[61,40,53,40],[61,41,53,41,"children"],[61,49,53,49],[61,50,53,50],[61,51,53,51,"reduce"],[61,57,53,57],[61,58,53,58],[61,59,53,59,"acc"],[61,62,53,62],[61,64,53,64,"child"],[61,69,53,69],[61,74,53,74],[62,6,54,4],[62,10,54,8],[62,23,54,21,"React"],[62,28,54,26],[62,29,54,27,"isValidElement"],[62,43,54,41],[62,44,54,42,"child"],[62,49,54,47],[62,50,54,48],[62,52,54,50],[63,8,55,6],[63,12,55,10,"isScreen"],[63,20,55,18],[63,21,55,19,"child"],[63,26,55,24],[63,27,55,25],[63,29,55,27],[64,10,56,8],[65,10,57,8],[67,10,59,8],[67,14,59,12],[67,21,59,19,"child"],[67,26,59,24],[67,27,59,25,"props"],[67,32,59,30],[67,37,59,35],[67,45,59,43],[67,49,59,47,"child"],[67,54,59,52],[67,55,59,53,"props"],[67,60,59,58],[67,65,59,63],[67,69,59,67],[67,71,59,69],[68,12,60,10],[68,18,60,16],[68,22,60,20,"Error"],[68,27,60,25],[68,28,60,26],[68,64,60,62],[68,65,60,63],[69,10,61,8],[70,10,62,8],[70,14,62,12],[70,21,62,19,"child"],[70,26,62,24],[70,27,62,25,"props"],[70,32,62,30],[70,33,62,31,"name"],[70,37,62,35],[70,42,62,40],[70,50,62,48],[70,54,62,52,"child"],[70,59,62,57],[70,60,62,58,"props"],[70,65,62,63],[70,66,62,64,"name"],[70,70,62,68],[70,75,62,73],[70,77,62,75],[70,79,62,77],[71,12,63,10],[71,18,63,16],[71,22,63,20,"Error"],[71,27,63,25],[71,28,63,26],[71,52,63,50,"JSON"],[71,56,63,54],[71,57,63,55,"stringify"],[71,66,63,64],[71,67,63,65,"child"],[71,72,63,70],[71,73,63,71,"props"],[71,78,63,76],[71,79,63,77,"name"],[71,83,63,81],[71,84,63,82],[71,134,63,132],[71,135,63,133],[72,10,64,8],[73,10,65,8],[73,14,65,12,"child"],[73,19,65,17],[73,20,65,18,"props"],[73,25,65,23],[73,26,65,24,"navigationKey"],[73,39,65,37],[73,44,65,42,"undefined"],[73,53,65,51],[73,58,65,56],[73,65,65,63,"child"],[73,70,65,68],[73,71,65,69,"props"],[73,76,65,74],[73,77,65,75,"navigationKey"],[73,90,65,88],[73,95,65,93],[73,103,65,101],[73,107,65,105,"child"],[73,112,65,110],[73,113,65,111,"props"],[73,118,65,116],[73,119,65,117,"navigationKey"],[73,132,65,130],[73,137,65,135],[73,139,65,137],[73,140,65,138],[73,142,65,140],[74,12,66,10],[74,18,66,16],[74,22,66,20,"Error"],[74,27,66,25],[74,28,66,26],[74,68,66,66,"JSON"],[74,72,66,70],[74,73,66,71,"stringify"],[74,82,66,80],[74,83,66,81,"child"],[74,88,66,86],[74,89,66,87,"props"],[74,94,66,92],[74,95,66,93,"navigationKey"],[74,108,66,106],[74,109,66,107],[74,130,66,128,"child"],[74,135,66,133],[74,136,66,134,"props"],[74,141,66,139],[74,142,66,140,"name"],[74,146,66,144],[74,196,66,194],[74,197,66,195],[75,10,67,8],[76,10,68,8,"acc"],[76,13,68,11],[76,14,68,12,"push"],[76,18,68,16],[76,19,68,17],[77,12,69,10,"keys"],[77,16,69,14],[77,18,69,16],[77,19,69,17,"groupKey"],[77,27,69,25],[77,29,69,27,"child"],[77,34,69,32],[77,35,69,33,"props"],[77,40,69,38],[77,41,69,39,"navigationKey"],[77,54,69,52],[77,55,69,53],[78,12,70,10,"options"],[78,19,70,17],[78,21,70,19,"groupOptions"],[78,33,70,31],[79,12,71,10,"layout"],[79,18,71,16],[79,20,71,18,"groupLayout"],[79,31,71,29],[80,12,72,10,"props"],[80,17,72,15],[80,19,72,17,"child"],[80,24,72,22],[80,25,72,23,"props"],[81,10,73,8],[81,11,73,9],[81,12,73,10],[82,10,74,8],[82,17,74,15,"acc"],[82,20,74,18],[83,8,75,6],[84,8,76,6],[84,12,76,10,"isGroup"],[84,19,76,17],[84,20,76,18,"child"],[84,25,76,23],[84,26,76,24],[84,28,76,26],[85,10,77,8],[85,14,77,12],[85,15,77,13,"isValidKey"],[85,25,77,23],[85,26,77,24,"child"],[85,31,77,29],[85,32,77,30,"props"],[85,37,77,35],[85,38,77,36,"navigationKey"],[85,51,77,49],[85,52,77,50],[85,54,77,52],[86,12,78,10],[86,18,78,16],[86,22,78,20,"Error"],[86,27,78,25],[86,28,78,26],[86,68,78,66,"JSON"],[86,72,78,70],[86,73,78,71,"stringify"],[86,82,78,80],[86,83,78,81,"child"],[86,88,78,86],[86,89,78,87,"props"],[86,94,78,92],[86,95,78,93,"navigationKey"],[86,108,78,106],[86,109,78,107],[86,173,78,171],[86,174,78,172],[87,10,79,8],[89,10,81,8],[90,10,82,8],[91,10,83,8,"acc"],[91,13,83,11],[91,14,83,12,"push"],[91,18,83,16],[91,19,83,17],[91,22,83,20,"getRouteConfigsFromChildren"],[91,49,83,47],[91,50,83,48,"child"],[91,55,83,53],[91,56,83,54,"props"],[91,61,83,59],[91,62,83,60,"children"],[91,70,83,68],[91,72,83,70,"child"],[91,77,83,75],[91,78,83,76,"props"],[91,83,83,81],[91,84,83,82,"navigationKey"],[91,97,83,95],[92,10,84,8],[93,10,85,8],[94,10,86,8,"child"],[94,15,86,13],[94,16,86,14,"type"],[94,20,86,18],[94,25,86,23,"Group"],[94,37,86,28],[94,40,86,31,"groupOptions"],[94,52,86,43],[94,55,86,46,"groupOptions"],[94,67,86,58],[94,71,86,62],[94,75,86,66],[94,78,86,69],[94,79,86,70],[94,82,86,73,"groupOptions"],[94,94,86,85],[94,96,86,87,"child"],[94,101,86,92],[94,102,86,93,"props"],[94,107,86,98],[94,108,86,99,"screenOptions"],[94,121,86,112],[94,122,86,113],[94,125,86,116],[94,126,86,117,"child"],[94,131,86,122],[94,132,86,123,"props"],[94,137,86,128],[94,138,86,129,"screenOptions"],[94,151,86,142],[94,152,86,143],[94,154,86,145],[94,161,86,152,"child"],[94,166,86,157],[94,167,86,158,"props"],[94,172,86,163],[94,173,86,164,"screenLayout"],[94,185,86,176],[94,190,86,181],[94,200,86,191],[94,203,86,194,"child"],[94,208,86,199],[94,209,86,200,"props"],[94,214,86,205],[94,215,86,206,"screenLayout"],[94,227,86,218],[94,230,86,221,"groupLayout"],[94,241,86,232],[94,242,86,233],[94,243,86,234],[95,10,87,8],[95,17,87,15,"acc"],[95,20,87,18],[96,8,88,6],[97,6,89,4],[98,6,90,4],[98,12,90,10],[98,16,90,14,"Error"],[98,21,90,19],[98,22,90,20],[98,122,90,120],[98,135,90,133],[98,149,90,133,"React"],[98,154,90,138],[98,155,90,139,"isValidElement"],[98,169,90,153],[98,170,90,154,"child"],[98,175,90,159],[98,176,90,160],[98,179,90,163],[98,183,90,167],[98,190,90,174,"child"],[98,195,90,179],[98,196,90,180,"type"],[98,200,90,184],[98,205,90,189],[98,213,90,197],[98,216,90,200,"child"],[98,221,90,205],[98,222,90,206,"type"],[98,226,90,210],[98,229,90,213,"child"],[98,234,90,218],[98,235,90,219,"type"],[98,239,90,223],[98,241,90,225,"name"],[98,245,90,229],[98,249,90,233,"child"],[98,254,90,238],[98,255,90,239,"props"],[98,260,90,244],[98,264,90,248],[98,268,90,252],[98,272,90,256],[98,279,90,263,"child"],[98,284,90,268],[98,285,90,269,"props"],[98,290,90,274],[98,295,90,279],[98,303,90,287],[98,307,90,291],[98,313,90,297],[98,317,90,301,"child"],[98,322,90,306],[98,323,90,307,"props"],[98,328,90,312],[98,332,90,316,"child"],[98,337,90,321],[98,338,90,322,"props"],[98,343,90,327],[98,345,90,329,"name"],[98,349,90,333],[98,352,90,336],[98,372,90,356,"child"],[98,377,90,361],[98,378,90,362,"props"],[98,383,90,367],[98,384,90,368,"name"],[98,388,90,372],[98,391,90,375],[98,394,90,378],[98,396,90,380],[98,398,90,382],[98,401,90,385],[98,408,90,392,"child"],[98,413,90,397],[98,418,90,402],[98,426,90,410],[98,429,90,413,"JSON"],[98,433,90,417],[98,434,90,418,"stringify"],[98,443,90,427],[98,444,90,428,"child"],[98,449,90,433],[98,450,90,434],[98,453,90,437],[98,457,90,441,"String"],[98,463,90,447],[98,464,90,448,"child"],[98,469,90,453],[98,470,90,454],[98,473,90,457],[98,565,90,549],[98,566,90,550],[99,4,91,2],[99,5,91,3],[99,7,91,5],[99,9,91,7],[99,10,91,8],[100,4,134,2],[100,11,134,9,"configs"],[100,18,134,16],[101,2,135,0],[101,3,135,1],[103,2,137,0],[104,0,138,0],[105,0,139,0],[106,0,140,0],[107,0,141,0],[108,0,142,0],[109,0,143,0],[110,2,144,7],[110,11,144,16,"useNavigationBuilder"],[110,31,144,36,"useNavigationBuilder"],[110,32,144,37,"createRouter"],[110,44,144,49],[110,46,144,51,"options"],[110,53,144,58],[110,55,144,60],[111,4,145,2],[111,8,145,8,"navigatorKey"],[111,20,145,20],[111,23,145,23],[111,27,145,23,"useRegisterNavigator"],[111,69,145,43],[111,71,145,44],[111,72,145,45],[112,4,146,2],[112,8,146,8,"route"],[112,13,146,13],[112,16,146,16,"React"],[112,21,146,21],[112,22,146,22,"useContext"],[112,32,146,32],[112,33,146,33,"NavigationRouteContext"],[112,79,146,55],[112,80,146,56],[113,4,147,2],[113,8,148,4,"children"],[113,16,148,12],[113,19,155,6,"options"],[113,26,155,13],[113,27,148,4,"children"],[113,35,148,12],[114,6,149,4,"layout"],[114,12,149,10],[114,15,155,6,"options"],[114,22,155,13],[114,23,149,4,"layout"],[114,29,149,10],[115,6,150,4,"screenOptions"],[115,19,150,17],[115,22,155,6,"options"],[115,29,155,13],[115,30,150,4,"screenOptions"],[115,43,150,17],[116,6,151,4,"screenLayout"],[116,18,151,16],[116,21,155,6,"options"],[116,28,155,13],[116,29,151,4,"screenLayout"],[116,41,151,16],[117,6,152,4,"screenListeners"],[117,21,152,19],[117,24,155,6,"options"],[117,31,155,13],[117,32,152,4,"screenListeners"],[117,47,152,19],[118,6,153,4,"UNSTABLE_router"],[118,21,153,19],[118,24,155,6,"options"],[118,31,155,13],[118,32,153,4,"UNSTABLE_router"],[118,47,153,19],[119,6,154,7,"rest"],[119,10,154,11],[119,17,154,11,"_objectWithoutProperties2"],[119,42,154,11],[119,43,154,11,"default"],[119,50,154,11],[119,52,155,6,"options"],[119,59,155,13],[119,61,155,13,"_excluded"],[119,70,155,13],[120,4,156,2],[120,8,156,8,"routeConfigs"],[120,20,156,20],[120,23,156,23,"getRouteConfigsFromChildren"],[120,50,156,50],[120,51,156,51,"children"],[120,59,156,59],[120,60,156,60],[121,4,157,2],[121,8,157,8,"router"],[121,14,157,14],[121,17,157,17],[121,21,157,17,"useLazyValue"],[121,47,157,29],[121,49,157,30],[121,55,157,36],[122,6,158,4],[122,10,158,8,"rest"],[122,14,158,12],[122,15,158,13,"initialRouteName"],[122,31,158,29],[122,35,158,33],[122,39,158,37],[122,43,158,41,"routeConfigs"],[122,55,158,53],[122,56,158,54,"every"],[122,61,158,59],[122,62,158,60,"config"],[122,68,158,66],[122,72,158,70,"config"],[122,78,158,76],[122,79,158,77,"props"],[122,84,158,82],[122,85,158,83,"name"],[122,89,158,87],[122,94,158,92,"rest"],[122,98,158,96],[122,99,158,97,"initialRouteName"],[122,115,158,113],[122,116,158,114],[122,118,158,116],[123,8,159,6],[123,14,159,12],[123,18,159,16,"Error"],[123,23,159,21],[123,24,159,22],[123,57,159,55,"rest"],[123,61,159,59],[123,62,159,60,"initialRouteName"],[123,78,159,76],[123,111,159,109],[123,112,159,110],[124,6,160,4],[125,6,161,4],[125,10,161,10,"original"],[125,18,161,18],[125,21,161,21,"createRouter"],[125,33,161,33],[125,34,161,34,"rest"],[125,38,161,38],[125,39,161,39],[126,6,162,4],[126,10,162,8,"UNSTABLE_router"],[126,25,162,23],[126,29,162,27],[126,33,162,31],[126,35,162,33],[127,8,163,6],[127,12,163,12,"overrides"],[127,21,163,21],[127,24,163,24,"UNSTABLE_router"],[127,39,163,39],[127,40,163,40,"original"],[127,48,163,48],[127,49,163,49],[128,8,164,6],[128,15,164,13],[129,10,165,8],[129,13,165,11,"original"],[129,21,165,19],[130,10,166,8],[130,13,166,11,"overrides"],[131,8,167,6],[131,9,167,7],[132,6,168,4],[133,6,169,4],[133,13,169,11,"original"],[133,21,169,19],[134,4,170,2],[134,5,170,3],[134,6,170,4],[135,4,171,2],[135,8,171,8,"screens"],[135,15,171,15],[135,18,171,18,"routeConfigs"],[135,30,171,30],[135,31,171,31,"reduce"],[135,37,171,37],[135,38,171,38],[135,39,171,39,"acc"],[135,42,171,42],[135,44,171,44,"config"],[135,50,171,50],[135,55,171,55],[136,6,172,4],[136,10,172,8,"config"],[136,16,172,14],[136,17,172,15,"props"],[136,22,172,20],[136,23,172,21,"name"],[136,27,172,25],[136,31,172,29,"acc"],[136,34,172,32],[136,36,172,34],[137,8,173,6],[137,14,173,12],[137,18,173,16,"Error"],[137,23,173,21],[137,24,173,22],[137,133,173,131,"config"],[137,139,173,137],[137,140,173,138,"props"],[137,145,173,143],[137,146,173,144,"name"],[137,150,173,148],[137,154,173,152],[137,155,173,153],[138,6,174,4],[139,6,175,4,"acc"],[139,9,175,7],[139,10,175,8,"config"],[139,16,175,14],[139,17,175,15,"props"],[139,22,175,20],[139,23,175,21,"name"],[139,27,175,25],[139,28,175,26],[139,31,175,29,"config"],[139,37,175,35],[140,6,176,4],[140,13,176,11,"acc"],[140,16,176,14],[141,4,177,2],[141,5,177,3],[141,7,177,5],[141,8,177,6],[141,9,177,7],[141,10,177,8],[142,4,178,2],[142,8,178,8,"routeNames"],[142,18,178,18],[142,21,178,21,"routeConfigs"],[142,33,178,33],[142,34,178,34,"map"],[142,37,178,37],[142,38,178,38,"config"],[142,44,178,44],[142,48,178,48,"config"],[142,54,178,54],[142,55,178,55,"props"],[142,60,178,60],[142,61,178,61,"name"],[142,65,178,65],[142,66,178,66],[143,4,179,2],[143,8,179,8,"routeKeyList"],[143,20,179,20],[143,23,179,23,"routeNames"],[143,33,179,33],[143,34,179,34,"reduce"],[143,40,179,40],[143,41,179,41],[143,42,179,42,"acc"],[143,45,179,45],[143,47,179,47,"curr"],[143,51,179,51],[143,56,179,56],[144,6,180,4,"acc"],[144,9,180,7],[144,10,180,8,"curr"],[144,14,180,12],[144,15,180,13],[144,18,180,16,"screens"],[144,25,180,23],[144,26,180,24,"curr"],[144,30,180,28],[144,31,180,29],[144,32,180,30,"keys"],[144,36,180,34],[144,37,180,35,"map"],[144,40,180,38],[144,41,180,39,"key"],[144,44,180,42],[144,48,180,46,"key"],[144,51,180,49],[144,55,180,53],[144,57,180,55],[144,58,180,56],[144,59,180,57,"join"],[144,63,180,61],[144,64,180,62],[144,67,180,65],[144,68,180,66],[145,6,181,4],[145,13,181,11,"acc"],[145,16,181,14],[146,4,182,2],[146,5,182,3],[146,7,182,5],[146,8,182,6],[146,9,182,7],[146,10,182,8],[147,4,183,2],[147,8,183,8,"routeParamList"],[147,22,183,22],[147,25,183,25,"routeNames"],[147,35,183,35],[147,36,183,36,"reduce"],[147,42,183,42],[147,43,183,43],[147,44,183,44,"acc"],[147,47,183,47],[147,49,183,49,"curr"],[147,53,183,53],[147,58,183,58],[148,6,184,4],[148,10,185,6,"initialParams"],[148,23,185,19],[148,26,186,8,"screens"],[148,33,186,15],[148,34,186,16,"curr"],[148,38,186,20],[148,39,186,21],[148,40,186,22,"props"],[148,45,186,27],[148,46,185,6,"initialParams"],[148,59,185,19],[149,6,187,4,"acc"],[149,9,187,7],[149,10,187,8,"curr"],[149,14,187,12],[149,15,187,13],[149,18,187,16,"initialParams"],[149,31,187,29],[150,6,188,4],[150,13,188,11,"acc"],[150,16,188,14],[151,4,189,2],[151,5,189,3],[151,7,189,5],[151,8,189,6],[151,9,189,7],[151,10,189,8],[152,4,190,2],[152,8,190,8,"routeGetIdList"],[152,22,190,22],[152,25,190,25,"routeNames"],[152,35,190,35],[152,36,190,36,"reduce"],[152,42,190,42],[152,43,190,43],[152,44,190,44,"acc"],[152,47,190,47],[152,49,190,49,"curr"],[152,53,190,53],[152,58,190,58,"Object"],[152,64,190,64],[152,65,190,65,"assign"],[152,71,190,71],[152,72,190,72,"acc"],[152,75,190,75],[152,77,190,77],[153,6,191,4],[153,7,191,5,"curr"],[153,11,191,9],[153,14,191,12,"screens"],[153,21,191,19],[153,22,191,20,"curr"],[153,26,191,24],[153,27,191,25],[153,28,191,26,"props"],[153,33,191,31],[153,34,191,32,"getId"],[154,4,192,2],[154,5,192,3],[154,6,192,4],[154,8,192,6],[154,9,192,7],[154,10,192,8],[154,11,192,9],[155,4,193,2],[155,8,193,6],[155,9,193,7,"routeNames"],[155,19,193,17],[155,20,193,18,"length"],[155,26,193,24],[155,28,193,26],[156,6,194,4],[156,12,194,10],[156,16,194,14,"Error"],[156,21,194,19],[156,22,194,20],[156,114,194,112],[156,115,194,113],[157,4,195,2],[158,4,196,2],[158,8,196,8,"isStateValid"],[158,20,196,20],[158,23,196,23,"React"],[158,28,196,28],[158,29,196,29,"useCallback"],[158,40,196,40],[158,41,196,41,"state"],[158,46,196,46],[158,50,196,50,"state"],[158,55,196,55],[158,56,196,56,"type"],[158,60,196,60],[158,65,196,65,"undefined"],[158,74,196,74],[158,78,196,78,"state"],[158,83,196,83],[158,84,196,84,"type"],[158,88,196,88],[158,93,196,93,"router"],[158,99,196,99],[158,100,196,100,"type"],[158,104,196,104],[158,106,196,106],[158,107,196,107,"router"],[158,113,196,113],[158,114,196,114,"type"],[158,118,196,118],[158,119,196,119],[158,120,196,120],[159,4,197,2],[159,8,197,8,"isStateInitialized"],[159,26,197,26],[159,29,197,29,"React"],[159,34,197,34],[159,35,197,35,"useCallback"],[159,46,197,46],[159,47,197,47,"state"],[159,52,197,52],[159,56,197,56,"state"],[159,61,197,61],[159,66,197,66,"undefined"],[159,75,197,75],[159,79,197,79,"state"],[159,84,197,84],[159,85,197,85,"stale"],[159,90,197,90],[159,95,197,95],[159,100,197,100],[159,104,197,104,"isStateValid"],[159,116,197,116],[159,117,197,117,"state"],[159,122,197,122],[159,123,197,123],[159,125,197,125],[159,126,197,126,"isStateValid"],[159,138,197,138],[159,139,197,139],[159,140,197,140],[160,4,198,2],[160,8,198,2,"_React$useContext"],[160,25,198,2],[160,28,205,6,"React"],[160,33,205,11],[160,34,205,12,"useContext"],[160,44,205,22],[160,45,205,23,"NavigationStateContext"],[160,91,205,45],[160,92,205,46],[161,6,199,11,"currentState"],[161,18,199,23],[161,21,199,23,"_React$useContext"],[161,38,199,23],[161,39,199,4,"state"],[161,44,199,9],[162,6,200,14,"getCurrentState"],[162,21,200,29],[162,24,200,29,"_React$useContext"],[162,41,200,29],[162,42,200,4,"getState"],[162,50,200,12],[163,6,201,14,"setCurrentState"],[163,21,201,29],[163,24,201,29,"_React$useContext"],[163,41,201,29],[163,42,201,4,"setState"],[163,50,201,12],[164,6,202,4,"setKey"],[164,12,202,10],[164,15,202,10,"_React$useContext"],[164,32,202,10],[164,33,202,4,"setKey"],[164,39,202,10],[165,6,203,4,"getKey"],[165,12,203,10],[165,15,203,10,"_React$useContext"],[165,32,203,10],[165,33,203,4,"getKey"],[165,39,203,10],[166,6,204,4,"getIsInitial"],[166,18,204,16],[166,21,204,16,"_React$useContext"],[166,38,204,16],[166,39,204,4,"getIsInitial"],[166,51,204,16],[167,4,206,2],[167,8,206,8,"stateCleanedUp"],[167,22,206,22],[167,25,206,25,"React"],[167,30,206,30],[167,31,206,31,"useRef"],[167,37,206,37],[167,38,206,38],[167,43,206,43],[167,44,206,44],[168,4,207,2],[168,8,207,8,"setState"],[168,16,207,16],[168,19,207,19],[168,23,207,19,"useLatestCallback"],[168,49,207,36],[168,51,207,37,"state"],[168,56,207,42],[168,60,207,46],[169,6,208,4],[169,10,208,8,"stateCleanedUp"],[169,24,208,22],[169,25,208,23,"current"],[169,32,208,30],[169,34,208,32],[170,8,209,6],[171,8,210,6],[172,8,211,6],[173,8,212,6],[174,6,213,4],[175,6,214,4,"setCurrentState"],[175,21,214,19],[175,22,214,20,"state"],[175,27,214,25],[175,28,214,26],[176,4,215,2],[176,5,215,3],[176,6,215,4],[177,4,216,2],[177,8,216,2,"_React$useMemo"],[177,22,216,2],[177,25,216,57,"React"],[177,30,216,62],[177,31,216,63,"useMemo"],[177,38,216,70],[177,39,216,71],[177,45,216,77],[178,8,217,4],[178,12,217,10,"initialRouteParamList"],[178,33,217,31],[178,36,217,34,"routeNames"],[178,46,217,44],[178,47,217,45,"reduce"],[178,53,217,51],[178,54,217,52],[178,55,217,53,"acc"],[178,58,217,56],[178,60,217,58,"curr"],[178,64,217,62],[178,69,217,67],[179,10,218,6],[179,14,219,8,"initialParams"],[179,27,219,21],[179,30,220,10,"screens"],[179,37,220,17],[179,38,220,18,"curr"],[179,42,220,22],[179,43,220,23],[179,44,220,24,"props"],[179,49,220,29],[179,50,219,8,"initialParams"],[179,63,219,21],[180,10,221,6],[180,14,221,12,"initialParamsFromParams"],[180,37,221,35],[180,40,221,38,"route"],[180,45,221,43],[180,47,221,45,"params"],[180,53,221,51],[180,55,221,53,"state"],[180,60,221,58],[180,64,221,62],[180,68,221,66],[180,72,221,70,"route"],[180,77,221,75],[180,79,221,77,"params"],[180,85,221,83],[180,87,221,85,"initial"],[180,94,221,92],[180,99,221,97],[180,104,221,102],[180,108,221,106,"route"],[180,113,221,111],[180,115,221,113,"params"],[180,121,221,119],[180,123,221,121,"screen"],[180,129,221,127],[180,134,221,132,"curr"],[180,138,221,136],[180,141,221,139,"route"],[180,146,221,144],[180,147,221,145,"params"],[180,153,221,151],[180,154,221,152,"params"],[180,160,221,158],[180,163,221,161,"undefined"],[180,172,221,170],[181,10,222,6,"acc"],[181,13,222,9],[181,14,222,10,"curr"],[181,18,222,14],[181,19,222,15],[181,22,222,18,"initialParams"],[181,35,222,31],[181,40,222,36,"undefined"],[181,49,222,45],[181,53,222,49,"initialParamsFromParams"],[181,76,222,72],[181,81,222,77,"undefined"],[181,90,222,86],[181,93,222,89],[182,12,223,8],[182,15,223,11,"initialParams"],[182,28,223,24],[183,12,224,8],[183,15,224,11,"initialParamsFromParams"],[184,10,225,6],[184,11,225,7],[184,14,225,10,"undefined"],[184,23,225,19],[185,10,226,6],[185,17,226,13,"acc"],[185,20,226,16],[186,8,227,4],[186,9,227,5],[186,11,227,7],[186,12,227,8],[186,13,227,9],[186,14,227,10],[188,8,229,4],[189,8,230,4],[190,8,231,4],[191,8,232,4],[192,8,233,4],[192,12,233,8],[192,13,233,9,"currentState"],[192,25,233,21],[192,30,233,26,"undefined"],[192,39,233,35],[192,43,233,39],[192,44,233,40,"isStateValid"],[192,56,233,52],[192,57,233,53,"currentState"],[192,69,233,65],[192,70,233,66],[192,75,233,71,"route"],[192,80,233,76],[192,82,233,78,"params"],[192,88,233,84],[192,90,233,86,"state"],[192,95,233,91],[192,99,233,95],[192,103,233,99],[192,107,233,103],[192,109,233,105],[192,116,233,112,"route"],[192,121,233,117],[192,123,233,119,"params"],[192,129,233,125],[192,131,233,127,"screen"],[192,137,233,133],[192,142,233,138],[192,150,233,146],[192,154,233,150,"route"],[192,159,233,155],[192,161,233,157,"params"],[192,167,233,163],[192,169,233,165,"initial"],[192,176,233,172],[192,181,233,177],[192,186,233,182],[192,187,233,183],[192,189,233,185],[193,10,234,6],[193,17,234,13],[193,18,234,14,"router"],[193,24,234,20],[193,25,234,21,"getInitialState"],[193,40,234,36],[193,41,234,37],[194,12,235,8,"routeNames"],[194,22,235,18],[195,12,236,8,"routeParamList"],[195,26,236,22],[195,28,236,24,"initialRouteParamList"],[195,49,236,45],[196,12,237,8,"routeGetIdList"],[197,10,238,6],[197,11,238,7],[197,12,238,8],[197,14,238,10],[197,18,238,14],[197,19,238,15],[198,8,239,4],[198,9,239,5],[198,15,239,11],[199,10,240,6],[199,14,240,10,"stateFromParams"],[199,29,240,25],[200,10,241,6],[200,14,241,10,"route"],[200,19,241,15],[200,21,241,17,"params"],[200,27,241,23],[200,29,241,25,"state"],[200,34,241,30],[200,38,241,34],[200,42,241,38],[200,44,241,40],[201,12,242,8,"stateFromParams"],[201,27,242,23],[201,30,242,26,"route"],[201,35,242,31],[201,36,242,32,"params"],[201,42,242,38],[201,43,242,39,"state"],[201,48,242,44],[202,10,243,6],[202,11,243,7],[202,17,243,13],[202,21,243,17],[202,28,243,24,"route"],[202,33,243,29],[202,35,243,31,"params"],[202,41,243,37],[202,43,243,39,"screen"],[202,49,243,45],[202,54,243,50],[202,62,243,58],[202,66,243,62,"route"],[202,71,243,67],[202,73,243,69,"params"],[202,79,243,75],[202,81,243,77,"initial"],[202,88,243,84],[202,93,243,89],[202,98,243,94],[202,100,243,96],[203,12,244,8,"stateFromParams"],[203,27,244,23],[203,30,244,26],[204,14,245,10,"index"],[204,19,245,15],[204,21,245,17],[204,22,245,18],[205,14,246,10,"routes"],[205,20,246,16],[205,22,246,18],[205,23,246,19],[206,16,247,12,"name"],[206,20,247,16],[206,22,247,18,"route"],[206,27,247,23],[206,28,247,24,"params"],[206,34,247,30],[206,35,247,31,"screen"],[206,41,247,37],[207,16,248,12,"params"],[207,22,248,18],[207,24,248,20,"route"],[207,29,248,25],[207,30,248,26,"params"],[207,36,248,32],[207,37,248,33,"params"],[207,43,248,39],[208,16,249,12,"path"],[208,20,249,16],[208,22,249,18,"route"],[208,27,249,23],[208,28,249,24,"params"],[208,34,249,30],[208,35,249,31,"path"],[209,14,250,10],[209,15,250,11],[210,12,251,8],[210,13,251,9],[211,10,252,6],[212,10,253,6],[212,17,253,13],[212,18,253,14,"router"],[212,24,253,20],[212,25,253,21,"getRehydratedState"],[212,43,253,39],[212,44,253,40,"stateFromParams"],[212,59,253,55],[212,63,253,59,"currentState"],[212,75,253,71],[212,77,253,73],[213,12,254,8,"routeNames"],[213,22,254,18],[214,12,255,8,"routeParamList"],[214,26,255,22],[214,28,255,24,"initialRouteParamList"],[214,49,255,45],[215,12,256,8,"routeGetIdList"],[216,10,257,6],[216,11,257,7],[216,12,257,8],[216,14,257,10],[216,19,257,15],[216,20,257,16],[217,8,258,4],[218,8,259,4],[219,8,260,4],[220,8,261,4],[221,8,262,4],[222,8,263,4],[223,8,264,4],[224,6,265,2],[224,7,265,3],[224,9,265,5],[224,10,265,6,"currentState"],[224,22,265,18],[224,24,265,20,"router"],[224,30,265,26],[224,32,265,28,"isStateValid"],[224,44,265,40],[224,45,265,41],[224,46,265,42],[225,6,265,42,"_React$useMemo2"],[225,21,265,42],[225,28,265,42,"_slicedToArray2"],[225,43,265,42],[225,44,265,42,"default"],[225,51,265,42],[225,53,265,42,"_React$useMemo"],[225,67,265,42],[226,6,216,9,"initializedState"],[226,22,216,25],[226,25,216,25,"_React$useMemo2"],[226,40,216,25],[227,6,216,27,"isFirstStateInitialization"],[227,32,216,53],[227,35,216,53,"_React$useMemo2"],[227,50,216,53],[228,4,266,2],[228,8,266,8,"previousRouteKeyListRef"],[228,31,266,31],[228,34,266,34,"React"],[228,39,266,39],[228,40,266,40,"useRef"],[228,46,266,46],[228,47,266,47,"routeKeyList"],[228,59,266,59],[228,60,266,60],[229,4,267,2,"React"],[229,9,267,7],[229,10,267,8,"useEffect"],[229,19,267,17],[229,20,267,18],[229,26,267,24],[230,6,268,4,"previousRouteKeyListRef"],[230,29,268,27],[230,30,268,28,"current"],[230,37,268,35],[230,40,268,38,"routeKeyList"],[230,52,268,50],[231,4,269,2],[231,5,269,3],[231,6,269,4],[232,4,270,2],[232,8,270,8,"previousRouteKeyList"],[232,28,270,28],[232,31,270,31,"previousRouteKeyListRef"],[232,54,270,54],[232,55,270,55,"current"],[232,62,270,62],[233,4,271,2],[233,8,271,6,"state"],[233,13,271,11],[234,4,272,2],[235,4,273,2],[236,4,274,2],[237,4,275,2,"isStateInitialized"],[237,22,275,20],[237,23,275,21,"currentState"],[237,35,275,33],[237,36,275,34],[237,39,275,37,"currentState"],[237,51,275,49],[237,54,275,52,"initializedState"],[237,70,275,68],[238,4,276,2],[238,8,276,6,"nextState"],[238,17,276,15],[238,20,276,18,"state"],[238,25,276,23],[239,4,277,2],[239,8,277,6],[239,9,277,7],[239,13,277,7,"isArrayEqual"],[239,39,277,19],[239,41,277,20,"state"],[239,46,277,25],[239,47,277,26,"routeNames"],[239,57,277,36],[239,59,277,38,"routeNames"],[239,69,277,48],[239,70,277,49],[239,74,277,53],[239,75,277,54],[239,79,277,54,"isRecordEqual"],[239,107,277,67],[239,109,277,68,"routeKeyList"],[239,121,277,80],[239,123,277,82,"previousRouteKeyList"],[239,143,277,102],[239,144,277,103],[239,146,277,105],[240,6,278,4],[241,6,279,4,"nextState"],[241,15,279,13],[241,18,279,16,"router"],[241,24,279,22],[241,25,279,23,"getStateForRouteNamesChange"],[241,52,279,50],[241,53,279,51,"state"],[241,58,279,56],[241,60,279,58],[242,8,280,6,"routeNames"],[242,18,280,16],[243,8,281,6,"routeParamList"],[243,22,281,20],[244,8,282,6,"routeGetIdList"],[244,22,282,20],[245,8,283,6,"routeKeyChanges"],[245,23,283,21],[245,25,283,23,"Object"],[245,31,283,29],[245,32,283,30,"keys"],[245,36,283,34],[245,37,283,35,"routeKeyList"],[245,49,283,47],[245,50,283,48],[245,51,283,49,"filter"],[245,57,283,55],[245,58,283,56,"name"],[245,62,283,60],[245,66,283,64,"name"],[245,70,283,68],[245,74,283,72,"previousRouteKeyList"],[245,94,283,92],[245,98,283,96,"routeKeyList"],[245,110,283,108],[245,111,283,109,"name"],[245,115,283,113],[245,116,283,114],[245,121,283,119,"previousRouteKeyList"],[245,141,283,139],[245,142,283,140,"name"],[245,146,283,144],[245,147,283,145],[246,6,284,4],[246,7,284,5],[246,8,284,6],[247,4,285,2],[248,4,286,2],[248,8,286,8,"previousNestedParamsRef"],[248,31,286,31],[248,34,286,34,"React"],[248,39,286,39],[248,40,286,40,"useRef"],[248,46,286,46],[248,47,286,47,"route"],[248,52,286,52],[248,54,286,54,"params"],[248,60,286,60],[248,61,286,61],[249,4,287,2,"React"],[249,9,287,7],[249,10,287,8,"useEffect"],[249,19,287,17],[249,20,287,18],[249,26,287,24],[250,6,288,4,"previousNestedParamsRef"],[250,29,288,27],[250,30,288,28,"current"],[250,37,288,35],[250,40,288,38,"route"],[250,45,288,43],[250,47,288,45,"params"],[250,53,288,51],[251,4,289,2],[251,5,289,3],[251,7,289,5],[251,8,289,6,"route"],[251,13,289,11],[251,15,289,13,"params"],[251,21,289,19],[251,22,289,20],[251,23,289,21],[252,4,290,2],[252,8,290,6,"route"],[252,13,290,11],[252,15,290,13,"params"],[252,21,290,19],[252,23,290,21],[253,6,291,4],[253,10,291,10,"previousParams"],[253,24,291,24],[253,27,291,27,"previousNestedParamsRef"],[253,50,291,50],[253,51,291,51,"current"],[253,58,291,58],[254,6,292,4],[254,10,292,8,"action"],[254,16,292,14],[255,6,293,4],[255,10,293,8],[255,17,293,15,"route"],[255,22,293,20],[255,23,293,21,"params"],[255,29,293,27],[255,30,293,28,"state"],[255,35,293,33],[255,40,293,38],[255,48,293,46],[255,52,293,50,"route"],[255,57,293,55],[255,58,293,56,"params"],[255,64,293,62],[255,65,293,63,"state"],[255,70,293,68],[255,74,293,72],[255,78,293,76],[255,82,293,80,"route"],[255,87,293,85],[255,88,293,86,"params"],[255,94,293,92],[255,99,293,97,"previousParams"],[255,113,293,111],[255,115,293,113],[256,8,294,6],[257,8,295,6,"action"],[257,14,295,12],[257,17,295,15,"CommonActions"],[257,39,295,28],[257,40,295,29,"reset"],[257,45,295,34],[257,46,295,35,"route"],[257,51,295,40],[257,52,295,41,"params"],[257,58,295,47],[257,59,295,48,"state"],[257,64,295,53],[257,65,295,54],[258,6,296,4],[258,7,296,5],[258,13,296,11],[258,17,296,15],[258,24,296,22,"route"],[258,29,296,27],[258,30,296,28,"params"],[258,36,296,34],[258,37,296,35,"screen"],[258,43,296,41],[258,48,296,46],[258,56,296,54],[258,61,296,59,"route"],[258,66,296,64],[258,67,296,65,"params"],[258,73,296,71],[258,74,296,72,"initial"],[258,81,296,79],[258,86,296,84],[258,91,296,89],[258,95,296,93,"isFirstStateInitialization"],[258,121,296,119],[258,125,296,123,"route"],[258,130,296,128],[258,131,296,129,"params"],[258,137,296,135],[258,142,296,140,"previousParams"],[258,156,296,154],[258,157,296,155],[258,159,296,157],[259,8,297,6],[260,8,298,6,"action"],[260,14,298,12],[260,17,298,15,"CommonActions"],[260,39,298,28],[260,40,298,29,"navigate"],[260,48,298,37],[260,49,298,38],[261,10,299,8,"name"],[261,14,299,12],[261,16,299,14,"route"],[261,21,299,19],[261,22,299,20,"params"],[261,28,299,26],[261,29,299,27,"screen"],[261,35,299,33],[262,10,300,8,"params"],[262,16,300,14],[262,18,300,16,"route"],[262,23,300,21],[262,24,300,22,"params"],[262,30,300,28],[262,31,300,29,"params"],[262,37,300,35],[263,10,301,8,"path"],[263,14,301,12],[263,16,301,14,"route"],[263,21,301,19],[263,22,301,20,"params"],[263,28,301,26],[263,29,301,27,"path"],[263,33,301,31],[264,10,302,8,"merge"],[264,15,302,13],[264,17,302,15,"route"],[264,22,302,20],[264,23,302,21,"params"],[264,29,302,27],[264,30,302,28,"merge"],[264,35,302,33],[265,10,303,8,"pop"],[265,13,303,11],[265,15,303,13,"route"],[265,20,303,18],[265,21,303,19,"params"],[265,27,303,25],[265,28,303,26,"pop"],[266,8,304,6],[266,9,304,7],[266,10,304,8],[267,6,305,4],[269,6,307,4],[270,6,308,4],[270,10,308,10,"updatedState"],[270,22,308,22],[270,25,308,25,"action"],[270,31,308,31],[270,34,308,34,"router"],[270,40,308,40],[270,41,308,41,"getStateForAction"],[270,58,308,58],[270,59,308,59,"nextState"],[270,68,308,68],[270,70,308,70,"action"],[270,76,308,76],[270,78,308,78],[271,8,309,6,"routeNames"],[271,18,309,16],[272,8,310,6,"routeParamList"],[272,22,310,20],[273,8,311,6,"routeGetIdList"],[274,6,312,4],[274,7,312,5],[274,8,312,6],[274,11,312,9],[274,15,312,13],[275,6,313,4,"nextState"],[275,15,313,13],[275,18,313,16,"updatedState"],[275,30,313,28],[275,35,313,33],[275,39,313,37],[275,42,313,40,"router"],[275,48,313,46],[275,49,313,47,"getRehydratedState"],[275,67,313,65],[275,68,313,66,"updatedState"],[275,80,313,78],[275,82,313,80],[276,8,314,6,"routeNames"],[276,18,314,16],[277,8,315,6,"routeParamList"],[277,22,315,20],[278,8,316,6,"routeGetIdList"],[279,6,317,4],[279,7,317,5],[279,8,317,6],[279,11,317,9,"nextState"],[279,20,317,18],[280,4,318,2],[281,4,319,2],[281,8,319,8,"shouldUpdate"],[281,20,319,20],[281,23,319,23,"state"],[281,28,319,28],[281,33,319,33,"nextState"],[281,42,319,42],[282,4,320,2],[282,8,320,2,"useScheduleUpdate"],[282,44,320,19],[282,46,320,20],[282,52,320,26],[283,6,321,4],[283,10,321,8,"shouldUpdate"],[283,22,321,20],[283,24,321,22],[284,8,322,6],[285,8,323,6,"setState"],[285,16,323,14],[285,17,323,15,"nextState"],[285,26,323,24],[285,27,323,25],[286,6,324,4],[287,4,325,2],[287,5,325,3],[287,6,325,4],[289,4,327,2],[290,4,328,2],[291,4,329,2],[292,4,330,2,"state"],[292,9,330,7],[292,12,330,10,"nextState"],[292,21,330,19],[293,4,331,2,"React"],[293,9,331,7],[293,10,331,8,"useEffect"],[293,19,331,17],[293,20,331,18],[293,26,331,24],[294,6,332,4],[295,6,333,4],[296,6,334,4,"stateCleanedUp"],[296,20,334,18],[296,21,334,19,"current"],[296,28,334,26],[296,31,334,29],[296,36,334,34],[297,6,335,4,"setKey"],[297,12,335,10],[297,13,335,11,"navigatorKey"],[297,25,335,23],[297,26,335,24],[298,6,336,4],[298,10,336,8],[298,11,336,9,"getIsInitial"],[298,23,336,21],[298,24,336,22],[298,25,336,23],[298,27,336,25],[299,8,337,6],[300,8,338,6],[301,8,339,6],[302,8,340,6,"setState"],[302,16,340,14],[302,17,340,15,"nextState"],[302,26,340,24],[302,27,340,25],[303,6,341,4],[304,6,342,4],[304,13,342,11],[304,19,342,17],[305,8,343,6],[306,8,344,6],[306,12,344,10,"getCurrentState"],[306,27,344,25],[306,28,344,26],[306,29,344,27],[306,34,344,32,"undefined"],[306,43,344,41],[306,47,344,45,"getKey"],[306,53,344,51],[306,54,344,52],[306,55,344,53],[306,60,344,58,"navigatorKey"],[306,72,344,70],[306,74,344,72],[307,10,345,8,"setCurrentState"],[307,25,345,23],[307,26,345,24,"undefined"],[307,35,345,33],[307,36,345,34],[308,10,346,8,"stateCleanedUp"],[308,24,346,22],[308,25,346,23,"current"],[308,32,346,30],[308,35,346,33],[308,39,346,37],[309,8,347,6],[310,6,348,4],[310,7,348,5],[311,6,349,4],[312,4,350,2],[312,5,350,3],[312,7,350,5],[312,9,350,7],[312,10,350,8],[314,4,352,2],[315,4,353,2],[316,4,354,2],[317,4,355,2],[318,4,356,2],[319,4,357,2],[319,8,357,8,"stateRef"],[319,16,357,16],[319,19,357,19,"React"],[319,24,357,24],[319,25,357,25,"useRef"],[319,31,357,31],[319,32,357,32,"state"],[319,37,357,37],[319,38,357,38],[320,4,358,2,"stateRef"],[320,12,358,10],[320,13,358,11,"current"],[320,20,358,18],[320,23,358,21,"state"],[320,28,358,26],[321,4,359,2],[321,8,359,2,"useClientLayoutEffect"],[321,52,359,23],[321,54,359,24],[321,60,359,30],[322,6,360,4,"stateRef"],[322,14,360,12],[322,15,360,13,"current"],[322,22,360,20],[322,25,360,23],[322,29,360,27],[323,4,361,2],[323,5,361,3],[323,6,361,4],[324,4,362,2],[324,8,362,8,"getState"],[324,16,362,16],[324,19,362,19],[324,23,362,19,"useLatestCallback"],[324,49,362,36],[324,51,362,37],[324,57,362,43],[325,6,363,4],[325,10,363,10,"currentState"],[325,22,363,22],[325,25,363,25,"getCurrentState"],[325,40,363,40],[325,41,363,41],[325,42,363,42],[326,6,364,4],[326,13,364,11],[326,17,364,11,"deepFreeze"],[326,39,364,21],[326,41,364,22,"isStateInitialized"],[326,59,364,40],[326,60,364,41,"currentState"],[326,72,364,53],[326,73,364,54],[326,76,364,57,"currentState"],[326,88,364,69],[326,91,364,72,"initializedState"],[326,107,364,88],[326,108,364,89],[327,4,365,2],[327,5,365,3],[327,6,365,4],[328,4,366,2],[328,8,366,8,"emitter"],[328,15,366,15],[328,18,366,18],[328,22,366,18,"useEventEmitter"],[328,54,366,33],[328,56,366,34,"e"],[328,57,366,35],[328,61,366,39],[329,6,367,4],[329,10,367,10,"routeNames"],[329,20,367,20],[329,23,367,23],[329,25,367,25],[330,6,368,4],[330,10,368,8,"route"],[330,15,368,13],[331,6,369,4],[331,10,369,8,"e"],[331,11,369,9],[331,12,369,10,"target"],[331,18,369,16],[331,20,369,18],[332,8,370,6,"route"],[332,13,370,11],[332,16,370,14,"state"],[332,21,370,19],[332,22,370,20,"routes"],[332,28,370,26],[332,29,370,27,"find"],[332,33,370,31],[332,34,370,32,"route"],[332,39,370,37],[332,43,370,41,"route"],[332,48,370,46],[332,49,370,47,"key"],[332,52,370,50],[332,57,370,55,"e"],[332,58,370,56],[332,59,370,57,"target"],[332,65,370,63],[332,66,370,64],[333,8,371,6],[333,12,371,10,"route"],[333,17,371,15],[333,19,371,17,"name"],[333,23,371,21],[333,25,371,23],[334,10,372,8,"routeNames"],[334,20,372,18],[334,21,372,19,"push"],[334,25,372,23],[334,26,372,24,"route"],[334,31,372,29],[334,32,372,30,"name"],[334,36,372,34],[334,37,372,35],[335,8,373,6],[336,6,374,4],[336,7,374,5],[336,13,374,11],[337,8,375,6,"route"],[337,13,375,11],[337,16,375,14,"state"],[337,21,375,19],[337,22,375,20,"routes"],[337,28,375,26],[337,29,375,27,"state"],[337,34,375,32],[337,35,375,33,"index"],[337,40,375,38],[337,41,375,39],[338,8,376,6,"routeNames"],[338,18,376,16],[338,19,376,17,"push"],[338,23,376,21],[338,24,376,22],[338,27,376,25,"Object"],[338,33,376,31],[338,34,376,32,"keys"],[338,38,376,36],[338,39,376,37,"screens"],[338,46,376,44],[338,47,376,45],[338,48,376,46,"filter"],[338,54,376,52],[338,55,376,53,"name"],[338,59,376,57],[338,63,376,61,"route"],[338,68,376,66],[338,70,376,68,"name"],[338,74,376,72],[338,79,376,77,"name"],[338,83,376,81],[338,84,376,82],[338,85,376,83],[339,6,377,4],[340,6,378,4],[340,10,378,8,"route"],[340,15,378,13],[340,19,378,17],[340,23,378,21],[340,25,378,23],[341,8,379,6],[342,6,380,4],[343,6,381,4],[343,10,381,10,"navigation"],[343,20,381,20],[343,23,381,23,"descriptors"],[343,34,381,34],[343,35,381,35,"route"],[343,40,381,40],[343,41,381,41,"key"],[343,44,381,44],[343,45,381,45],[343,46,381,46,"navigation"],[343,56,381,56],[344,6,382,4],[344,10,382,10,"listeners"],[344,19,382,19],[344,22,382,22],[344,24,382,24],[344,25,382,25,"concat"],[344,31,382,31],[345,6,383,4],[346,6,384,4],[346,9,384,7],[346,10,384,8,"screenListeners"],[346,25,384,23],[346,27,384,25],[346,30,384,28,"routeNames"],[346,40,384,38],[346,41,384,39,"map"],[346,44,384,42],[346,45,384,43,"name"],[346,49,384,47],[346,53,384,51],[347,8,385,6],[347,12,386,8,"listeners"],[347,21,386,17],[347,24,387,10,"screens"],[347,31,387,17],[347,32,387,18,"name"],[347,36,387,22],[347,37,387,23],[347,38,387,24,"props"],[347,43,387,29],[347,44,386,8,"listeners"],[347,53,386,17],[348,8,388,6],[348,15,388,13,"listeners"],[348,24,388,22],[349,6,389,4],[349,7,389,5],[349,8,389,6],[349,9,389,7],[349,10,389,8,"map"],[349,13,389,11],[349,14,389,12,"listeners"],[349,23,389,21],[349,27,389,25],[350,8,390,6],[350,12,390,12,"map"],[350,15,390,15],[350,18,390,18],[350,25,390,25,"listeners"],[350,34,390,34],[350,39,390,39],[350,49,390,49],[350,52,390,52,"listeners"],[350,61,390,61],[350,62,390,62],[351,10,391,8,"route"],[351,15,391,13],[351,17,391,15,"route"],[351,22,391,20],[352,10,392,8,"navigation"],[353,8,393,6],[353,9,393,7],[353,10,393,8],[353,13,393,11,"listeners"],[353,22,393,20],[354,8,394,6],[354,15,394,13,"map"],[354,18,394,16],[354,21,394,19,"Object"],[354,27,394,25],[354,28,394,26,"keys"],[354,32,394,30],[354,33,394,31,"map"],[354,36,394,34],[354,37,394,35],[354,38,394,36,"filter"],[354,44,394,42],[354,45,394,43,"type"],[354,49,394,47],[354,53,394,51,"type"],[354,57,394,55],[354,62,394,60,"e"],[354,63,394,61],[354,64,394,62,"type"],[354,68,394,66],[354,69,394,67],[354,70,394,68,"map"],[354,73,394,71],[354,74,394,72,"type"],[354,78,394,76],[354,82,394,80,"map"],[354,85,394,83],[354,88,394,86,"type"],[354,92,394,90],[354,93,394,91],[354,94,394,92],[354,97,394,95,"undefined"],[354,106,394,104],[355,6,395,4],[355,7,395,5],[355,8,395,6],[356,6,396,4],[357,6,397,4],[358,6,397,4],[358,7,398,5,"filter"],[358,13,398,11],[358,14,398,12],[358,15,398,13,"cb"],[358,17,398,15],[358,19,398,17,"i"],[358,20,398,18],[358,22,398,20,"self"],[358,26,398,24],[358,31,398,29,"cb"],[358,33,398,31],[358,37,398,35,"self"],[358,41,398,39],[358,42,398,40,"lastIndexOf"],[358,53,398,51],[358,54,398,52,"cb"],[358,56,398,54],[358,57,398,55],[358,62,398,60,"i"],[358,63,398,61],[358,64,398,62],[359,6,399,4,"listeners"],[359,15,399,13],[359,16,399,14,"forEach"],[359,23,399,21],[359,24,399,22,"listener"],[359,32,399,30],[359,36,399,34,"listener"],[359,44,399,42],[359,47,399,45,"e"],[359,48,399,46],[359,49,399,47],[359,50,399,48],[360,4,400,2],[360,5,400,3],[360,6,400,4],[361,4,401,2],[361,8,401,2,"useFocusEvents"],[361,38,401,16],[361,40,401,17],[362,6,402,4,"state"],[362,11,402,9],[363,6,403,4,"emitter"],[364,4,404,2],[364,5,404,3],[364,6,404,4],[365,4,405,2,"React"],[365,9,405,7],[365,10,405,8,"useEffect"],[365,19,405,17],[365,20,405,18],[365,26,405,24],[366,6,406,4,"emitter"],[366,13,406,11],[366,14,406,12,"emit"],[366,18,406,16],[366,19,406,17],[367,8,407,6,"type"],[367,12,407,10],[367,14,407,12],[367,21,407,19],[368,8,408,6,"data"],[368,12,408,10],[368,14,408,12],[369,10,409,8,"state"],[370,8,410,6],[371,6,411,4],[371,7,411,5],[371,8,411,6],[372,4,412,2],[372,5,412,3],[372,7,412,5],[372,8,412,6,"emitter"],[372,15,412,13],[372,17,412,15,"state"],[372,22,412,20],[372,23,412,21],[372,24,412,22],[373,4,413,2],[373,8,413,2,"_useChildListeners"],[373,26,413,2],[373,29,416,6],[373,33,416,6,"useChildListeners"],[373,70,416,23],[373,72,416,24],[373,73,416,25],[374,6,414,15,"childListeners"],[374,20,414,29],[374,23,414,29,"_useChildListeners"],[374,41,414,29],[374,42,414,4,"listeners"],[374,51,414,13],[375,6,415,4,"addListener"],[375,17,415,15],[375,20,415,15,"_useChildListeners"],[375,38,415,15],[375,39,415,4,"addListener"],[375,50,415,15],[376,4,417,2],[376,8,417,2,"_useKeyedChildListene"],[376,29,417,2],[376,32,420,6],[376,36,420,6,"useKeyedChildListeners"],[376,82,420,28],[376,84,420,29],[376,85,420,30],[377,6,418,4,"keyedListeners"],[377,20,418,18],[377,23,418,18,"_useKeyedChildListene"],[377,44,418,18],[377,45,418,4,"keyedListeners"],[377,59,418,18],[378,6,419,4,"addKeyedListener"],[378,22,419,20],[378,25,419,20,"_useKeyedChildListene"],[378,46,419,20],[378,47,419,4,"addKeyedListener"],[378,63,419,20],[379,4,421,2],[379,8,421,8,"onAction"],[379,16,421,16],[379,19,421,19],[379,23,421,19,"useOnAction"],[379,47,421,30],[379,49,421,31],[380,6,422,4,"router"],[380,12,422,10],[381,6,423,4,"getState"],[381,14,423,12],[382,6,424,4,"setState"],[382,14,424,12],[383,6,425,4,"key"],[383,9,425,7],[383,11,425,9,"route"],[383,16,425,14],[383,18,425,16,"key"],[383,21,425,19],[384,6,426,4,"actionListeners"],[384,21,426,19],[384,23,426,21,"childListeners"],[384,37,426,35],[384,38,426,36,"action"],[384,44,426,42],[385,6,427,4,"beforeRemoveListeners"],[385,27,427,25],[385,29,427,27,"keyedListeners"],[385,43,427,41],[385,44,427,42,"beforeRemove"],[385,56,427,54],[386,6,428,4,"routerConfigOptions"],[386,25,428,23],[386,27,428,25],[387,8,429,6,"routeNames"],[387,18,429,16],[388,8,430,6,"routeParamList"],[388,22,430,20],[389,8,431,6,"routeGetIdList"],[390,6,432,4],[390,7,432,5],[391,6,433,4,"emitter"],[392,4,434,2],[392,5,434,3],[392,6,434,4],[393,4,435,2],[393,8,435,8,"onRouteFocus"],[393,20,435,20],[393,23,435,23],[393,27,435,23,"useOnRouteFocus"],[393,59,435,38],[393,61,435,39],[394,6,436,4,"router"],[394,12,436,10],[395,6,437,4,"key"],[395,9,437,7],[395,11,437,9,"route"],[395,16,437,14],[395,18,437,16,"key"],[395,21,437,19],[396,6,438,4,"getState"],[396,14,438,12],[397,6,439,4,"setState"],[398,4,440,2],[398,5,440,3],[398,6,440,4],[399,4,441,2],[399,8,441,8,"navigation"],[399,18,441,18],[399,21,441,21],[399,25,441,21,"useNavigationHelpers"],[399,67,441,41],[399,69,441,42],[400,6,442,4,"id"],[400,8,442,6],[400,10,442,8,"options"],[400,17,442,15],[400,18,442,16,"id"],[400,20,442,18],[401,6,443,4,"onAction"],[401,14,443,12],[402,6,444,4,"getState"],[402,14,444,12],[403,6,445,4,"emitter"],[403,13,445,11],[404,6,446,4,"router"],[404,12,446,10],[405,6,447,4,"stateRef"],[406,4,448,2],[406,5,448,3],[406,6,448,4],[407,4,449,2],[407,8,449,2,"useFocusedListenersChildrenAdapter"],[407,78,449,36],[407,80,449,37],[408,6,450,4,"navigation"],[408,16,450,14],[409,6,451,4,"focusedListeners"],[409,22,451,20],[409,24,451,22,"childListeners"],[409,38,451,36],[409,39,451,37,"focus"],[410,4,452,2],[410,5,452,3],[410,6,452,4],[411,4,453,2],[411,8,453,2,"useOnGetState"],[411,36,453,15],[411,38,453,16],[412,6,454,4,"getState"],[412,14,454,12],[413,6,455,4,"getStateListeners"],[413,23,455,21],[413,25,455,23,"keyedListeners"],[413,39,455,37],[413,40,455,38,"getState"],[414,4,456,2],[414,5,456,3],[414,6,456,4],[415,4,457,2],[415,8,457,2,"_useDescriptors"],[415,23,457,2],[415,26,460,6],[415,30,460,6,"useDescriptors"],[415,61,460,20],[415,63,460,21],[416,8,461,4,"state"],[416,13,461,9],[417,8,462,4,"screens"],[417,15,462,11],[418,8,463,4,"navigation"],[418,18,463,14],[419,8,464,4,"screenOptions"],[419,21,464,17],[420,8,465,4,"screenLayout"],[420,20,465,16],[421,8,466,4,"onAction"],[421,16,466,12],[422,8,467,4,"getState"],[422,16,467,12],[423,8,468,4,"setState"],[423,16,468,12],[424,8,469,4,"onRouteFocus"],[424,20,469,16],[425,8,470,4,"addListener"],[425,19,470,15],[426,8,471,4,"addKeyedListener"],[426,24,471,20],[427,8,472,4,"router"],[427,14,472,10],[428,8,473,4],[429,8,474,4,"emitter"],[430,6,475,2],[430,7,475,3],[430,8,475,4],[431,6,458,4,"describe"],[431,14,458,12],[431,17,458,12,"_useDescriptors"],[431,32,458,12],[431,33,458,4,"describe"],[431,41,458,12],[432,6,459,4,"descriptors"],[432,17,459,15],[432,20,459,15,"_useDescriptors"],[432,35,459,15],[432,36,459,4,"descriptors"],[432,47,459,15],[433,4,476,2],[433,8,476,2,"useCurrentRender"],[433,42,476,18],[433,44,476,19],[434,6,477,4,"state"],[434,11,477,9],[435,6,478,4,"navigation"],[435,16,478,14],[436,6,479,4,"descriptors"],[437,4,480,2],[437,5,480,3],[437,6,480,4],[438,4,481,2],[438,8,481,8,"NavigationContent"],[438,25,481,25],[438,28,481,28],[438,32,481,28,"useComponent"],[438,58,481,40],[438,60,481,41,"children"],[438,68,481,49],[438,72,481,53],[439,6,482,4],[439,10,482,10,"element"],[439,17,482,17],[439,20,482,20,"layout"],[439,26,482,26],[439,30,482,30],[439,34,482,34],[439,37,482,37,"layout"],[439,43,482,43],[439,44,482,44],[440,8,483,6,"state"],[440,13,483,11],[441,8,484,6,"descriptors"],[441,19,484,17],[442,8,485,6,"navigation"],[442,18,485,16],[443,8,486,6,"children"],[444,6,487,4],[444,7,487,5],[444,8,487,6],[444,11,487,9,"children"],[444,19,487,17],[445,6,488,4],[445,13,488,11],[445,26,488,24],[445,30,488,24,"_jsx"],[445,45,488,28],[445,47,488,29,"NavigationHelpersContext"],[445,97,488,53],[445,98,488,54,"Provider"],[445,106,488,62],[445,108,488,64],[446,8,489,6,"value"],[446,13,489,11],[446,15,489,13,"navigation"],[446,25,489,23],[447,8,490,6,"children"],[447,16,490,14],[447,18,490,16],[447,31,490,29],[447,35,490,29,"_jsx"],[447,50,490,33],[447,52,490,34,"NavigationStateListenerProvider"],[447,103,490,65],[447,105,490,67],[448,10,491,8,"state"],[448,15,491,13],[448,17,491,15,"state"],[448,22,491,20],[449,10,492,8,"children"],[449,18,492,16],[449,20,492,18],[449,33,492,31],[449,37,492,31,"_jsx"],[449,52,492,35],[449,54,492,36,"PreventRemoveProvider"],[449,98,492,57],[449,100,492,59],[450,12,493,10,"children"],[450,20,493,18],[450,22,493,20,"element"],[451,10,494,8],[451,11,494,9],[452,8,495,6],[452,9,495,7],[453,6,496,4],[453,7,496,5],[453,8,496,6],[454,4,497,2],[454,5,497,3],[454,6,497,4],[455,4,498,2],[455,11,498,9],[456,6,499,4,"state"],[456,11,499,9],[457,6,500,4,"navigation"],[457,16,500,14],[458,6,501,4,"describe"],[458,14,501,12],[459,6,502,4,"descriptors"],[459,17,502,15],[460,6,503,4,"NavigationContent"],[461,4,504,2],[461,5,504,3],[462,2,505,0],[463,0,505,1],[463,3]],"functionMap":{"names":["<global>","isScreen","isGroup","isValidKey","getRouteConfigsFromChildren","React.Children.toArray.reduce$argument_0","configs.forEach$argument_0","useNavigationBuilder","useLazyValue$argument_0","routeConfigs.every$argument_0","routeConfigs.reduce$argument_0","routeConfigs.map$argument_0","routeNames.reduce$argument_0","screens.curr.keys.map$argument_0","isStateValid","isStateInitialized","useLatestCallback$argument_0","React.useMemo$argument_0","React.useEffect$argument_0","Object.keys.filter$argument_0","useScheduleUpdate$argument_0","<anonymous>","useClientLayoutEffect$argument_0","useEventEmitter$argument_0","state.routes.find$argument_0","routeNames.map$argument_0","map$argument_0","Object.keys.filter.map$argument_0","concat.filter$argument_0","listeners.forEach$argument_0","useComponent$argument_0"],"mappings":"AAA;iBCsC;CDE;gBEC;CFE;mBGC,iEH;oCIO;0DCC;GDsC;oBEE;KFuC;CJG;OOS;8BCa;4DCC,qDD;GDY;sCGC;GHM;sCIC,2BJ;yCKC;uCCC,gBD;GLE;2CKC;GLM;2CKC;ILE;yCOI,+DP;+CQC,4ER;qCSU;GTQ;uEUC;oDLC;KKU;GVsC;kBWE;GXE;wDYc,yFZ;kBWI;GXE;oBa+B;GbK;kBWM;WGW;KHM;GXE;wBeS;GfE;qCSC;GTG;kCgBC;gCCI,+BD;qDJM,4BI;2CEQ;KFK,OG;2CPK,uBO,MC,mBD;KHC;YKG,iDL;sBMC,yBN;GhBC;kBWK;GXO;yCuBqE;GvBgB;CPQ"}},"type":"js/module"}]}