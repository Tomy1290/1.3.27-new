{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":61},"end":{"line":3,"column":42,"index":103}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"../animation","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":105},"end":{"line":5,"column":49,"index":154}}],"key":"a6n75g9KQy+KnMEjz15YzADQ7Hw=","exportNames":["*"]}},{"name":"../commonTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":376},"end":{"line":17,"column":51,"index":427}}],"key":"dQSfS57Pf/C96+Vvd1rktbJJov4=","exportNames":["*"]}},{"name":"../core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":428},"end":{"line":18,"column":65,"index":493}}],"key":"OSA8xsmyvVLjxZOJ/QFvle2ua2I=","exportNames":["*"]}},{"name":"../errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":571},"end":{"line":20,"column":44,"index":615}}],"key":"ioSJ9iLOtXMo2uBjbVE14/NC9RQ=","exportNames":["*"]}},{"name":"../PlatformChecker","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0,"index":616},"end":{"line":21,"column":60,"index":676}}],"key":"qXble9ybAlViAQKWCIOx+hfaZjE=","exportNames":["*"]}},{"name":"../processBoxShadow","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0,"index":677},"end":{"line":22,"column":55,"index":732}}],"key":"5U9DQyIl4l2fB1WnbYtSzF+WrRQ=","exportNames":["*"]}},{"name":"../updateProps","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":733},"end":{"line":23,"column":69,"index":802}}],"key":"9+ynmbkEG/f9MdXTtZSVB+/M8dQ=","exportNames":["*"]}},{"name":"../ViewDescriptorsSet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":25,"column":0,"index":868},"end":{"line":25,"column":63,"index":931}}],"key":"s50EVKb9uOc42WX2uciUIObJnp4=","exportNames":["*"]}},{"name":"./useSharedValue","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":1068},"end":{"line":33,"column":50,"index":1118}}],"key":"6yldmc0IldDX63zJLZukWRMfHng=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":34,"column":0,"index":1119},"end":{"line":39,"column":17,"index":1222}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useAnimatedStyle = useAnimatedStyle;\n  var _react = require(_dependencyMap[0]);\n  var _animation = require(_dependencyMap[1]);\n  var _commonTypes = require(_dependencyMap[2]);\n  var _core = require(_dependencyMap[3]);\n  var _errors = require(_dependencyMap[4]);\n  var _PlatformChecker = require(_dependencyMap[5]);\n  var _processBoxShadow = require(_dependencyMap[6]);\n  var _updateProps = require(_dependencyMap[7]);\n  var _ViewDescriptorsSet = require(_dependencyMap[8]);\n  var _useSharedValue = require(_dependencyMap[9]);\n  var _utils = require(_dependencyMap[10]);\n  var SHOULD_BE_USE_WEB = (0, _PlatformChecker.shouldBeUseWeb)();\n  var _worklet_6358524786384_init_data = {\n    code: \"function prepareAnimation_reactNativeReanimated_useAnimatedStyleTs1(frameTimestamp,animatedProp,lastAnimation,lastValue){const prepareAnimation_reactNativeReanimated_useAnimatedStyleTs1=this._recur;if(Array.isArray(animatedProp)){animatedProp.forEach(function(prop,index){prepareAnimation_reactNativeReanimated_useAnimatedStyleTs1(frameTimestamp,prop,lastAnimation&&lastAnimation[index],lastValue&&lastValue[index]);});}if(typeof animatedProp==='object'&&animatedProp.onFrame){const animation=animatedProp;let value=animation.current;if(lastValue!==undefined&&lastValue!==null){if(typeof lastValue==='object'){if(lastValue.value!==undefined){value=lastValue.value;}else if(lastValue.onFrame!==undefined){if((lastAnimation===null||lastAnimation===void 0?void 0:lastAnimation.current)!==undefined){value=lastAnimation.current;}else if((lastValue===null||lastValue===void 0?void 0:lastValue.current)!==undefined){value=lastValue.current;}}}else{value=lastValue;}}animation.callStart=function(timestamp){animation.onStart(animation,value,timestamp,lastAnimation);};animation.callStart(frameTimestamp);animation.callStart=null;}else if(typeof animatedProp==='object'){Object.keys(animatedProp).forEach(function(key){return prepareAnimation_reactNativeReanimated_useAnimatedStyleTs1(frameTimestamp,animatedProp[key],lastAnimation&&lastAnimation[key],lastValue&&lastValue[key]);});}}\"\n  };\n  var prepareAnimation = function () {\n    var prepareAnimation = function (frameTimestamp, animatedProp, lastAnimation, lastValue) {\n      if (Array.isArray(animatedProp)) {\n        animatedProp.forEach((prop, index) => {\n          prepareAnimation(frameTimestamp, prop, lastAnimation && lastAnimation[index], lastValue && lastValue[index]);\n        });\n        // return animatedProp;\n      }\n      if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n        var animation = animatedProp;\n        var value = animation.current;\n        if (lastValue !== undefined && lastValue !== null) {\n          if (typeof lastValue === 'object') {\n            if (lastValue.value !== undefined) {\n              // previously it was a shared value\n              value = lastValue.value;\n            } else if (lastValue.onFrame !== undefined) {\n              if (lastAnimation?.current !== undefined) {\n                // it was an animation before, copy its state\n                value = lastAnimation.current;\n              } else if (lastValue?.current !== undefined) {\n                // it was initialized\n                value = lastValue.current;\n              }\n            }\n          } else {\n            // previously it was a plain value, just set it as starting point\n            value = lastValue;\n          }\n        }\n        animation.callStart = timestamp => {\n          animation.onStart(animation, value, timestamp, lastAnimation);\n        };\n        animation.callStart(frameTimestamp);\n        animation.callStart = null;\n      } else if (typeof animatedProp === 'object') {\n        // it is an object\n        Object.keys(animatedProp).forEach(key => prepareAnimation(frameTimestamp, animatedProp[key], lastAnimation && lastAnimation[key], lastValue && lastValue[key]));\n      }\n    };\n    prepareAnimation.__closure = {};\n    prepareAnimation.__workletHash = 6358524786384;\n    prepareAnimation.__initData = _worklet_6358524786384_init_data;\n    return prepareAnimation;\n  }();\n  var _worklet_11724700371151_init_data = {\n    code: \"function runAnimations_reactNativeReanimated_useAnimatedStyleTs2(animation,timestamp,key,result,animationsActive,forceCopyAnimation){const runAnimations_reactNativeReanimated_useAnimatedStyleTs2=this._recur;if(!animationsActive.value){return true;}if(Array.isArray(animation)){result[key]=[];let allFinished=true;forceCopyAnimation=key==='boxShadow';animation.forEach(function(entry,index){if(!runAnimations_reactNativeReanimated_useAnimatedStyleTs2(entry,timestamp,index,result[key],animationsActive,forceCopyAnimation)){allFinished=false;}});return allFinished;}else if(typeof animation==='object'&&animation.onFrame){let finished=true;if(!animation.finished){if(animation.callStart){animation.callStart(timestamp);animation.callStart=null;}finished=animation.onFrame(animation,timestamp);animation.timestamp=timestamp;if(finished){animation.finished=true;animation.callback&&animation.callback(true);}}if(forceCopyAnimation){result[key]={...animation.current};}else{result[key]=animation.current;}return finished;}else if(typeof animation==='object'){result[key]={};let allFinished=true;Object.keys(animation).forEach(function(k){if(!runAnimations_reactNativeReanimated_useAnimatedStyleTs2(animation[k],timestamp,k,result[key],animationsActive,forceCopyAnimation)){allFinished=false;}});return allFinished;}else{result[key]=animation;return true;}}\"\n  };\n  var runAnimations = function () {\n    var runAnimations = function (animation, timestamp, key, result, animationsActive, forceCopyAnimation) {\n      if (!animationsActive.value) {\n        return true;\n      }\n      if (Array.isArray(animation)) {\n        result[key] = [];\n        var allFinished = true;\n        forceCopyAnimation = key === 'boxShadow';\n        animation.forEach((entry, index) => {\n          if (!runAnimations(entry, timestamp, index, result[key], animationsActive, forceCopyAnimation)) {\n            allFinished = false;\n          }\n        });\n        return allFinished;\n      } else if (typeof animation === 'object' && animation.onFrame) {\n        var finished = true;\n        if (!animation.finished) {\n          if (animation.callStart) {\n            animation.callStart(timestamp);\n            animation.callStart = null;\n          }\n          finished = animation.onFrame(animation, timestamp);\n          animation.timestamp = timestamp;\n          if (finished) {\n            animation.finished = true;\n            animation.callback && animation.callback(true /* finished */);\n          }\n        }\n        /*\n         * If `animation.current` is a boxShadow object, spread its properties into a new object\n         * to avoid modifying the original reference. This ensures when `newValues` has a nested color prop, it stays unparsed\n         * in rgba format, allowing the animation to run correctly.\n         */\n        if (forceCopyAnimation) {\n          result[key] = {\n            ...animation.current\n          };\n        } else {\n          result[key] = animation.current;\n        }\n        return finished;\n      } else if (typeof animation === 'object') {\n        result[key] = {};\n        var _allFinished = true;\n        Object.keys(animation).forEach(k => {\n          if (!runAnimations(animation[k], timestamp, k, result[key], animationsActive, forceCopyAnimation)) {\n            _allFinished = false;\n          }\n        });\n        return _allFinished;\n      } else {\n        result[key] = animation;\n        return true;\n      }\n    };\n    runAnimations.__closure = {};\n    runAnimations.__workletHash = 11724700371151;\n    runAnimations.__initData = _worklet_11724700371151_init_data;\n    return runAnimations;\n  }();\n  var _worklet_6395962061635_init_data = {\n    code: \"function styleUpdater_reactNativeReanimated_useAnimatedStyleTs3(viewDescriptors,updater,state,animationsActive,isAnimatedProps=false){const{SHOULD_BE_USE_WEB,processBoxShadow,isAnimated,prepareAnimation,runAnimations,updateProps,shallowEqual}=this.__closure;var _state$animations,_updater;const animations=(_state$animations=state.animations)!==null&&_state$animations!==void 0?_state$animations:{};const newValues=(_updater=updater())!==null&&_updater!==void 0?_updater:{};const oldValues=state.last;const nonAnimatedNewValues={};let hasAnimations=false;let frameTimestamp;let hasNonAnimatedValues=false;if(!SHOULD_BE_USE_WEB&&newValues.boxShadow){processBoxShadow(newValues);}for(const key in newValues){const value=newValues[key];if(isAnimated(value)){frameTimestamp=global.__frameTimestamp||global._getAnimationTimestamp();prepareAnimation(frameTimestamp,value,animations[key],oldValues[key]);animations[key]=value;hasAnimations=true;}else{hasNonAnimatedValues=true;nonAnimatedNewValues[key]=value;delete animations[key];}}if(hasAnimations){const frame=function(timestamp){const{animations:animations,last:last,isAnimationCancelled:isAnimationCancelled}=state;if(isAnimationCancelled){state.isAnimationRunning=false;return;}const updates={};let allFinished=true;for(const propName in animations){const finished=runAnimations(animations[propName],timestamp,propName,updates,animationsActive);if(finished){if(Array.isArray(updates[propName])){updates[propName].forEach(function(obj){for(const prop in obj){last[propName][prop]=obj[prop];}});}else{last[propName]=updates[propName];}delete animations[propName];}else{allFinished=false;}}if(updates){updateProps(viewDescriptors,updates);}if(!allFinished){requestAnimationFrame(frame);}else{state.isAnimationRunning=false;}};state.animations=animations;if(!state.isAnimationRunning){state.isAnimationCancelled=false;state.isAnimationRunning=true;frame(frameTimestamp);}if(hasNonAnimatedValues){updateProps(viewDescriptors,nonAnimatedNewValues);}}else{state.isAnimationCancelled=true;state.animations=[];if(!shallowEqual(oldValues,newValues)){updateProps(viewDescriptors,newValues,isAnimatedProps);}}state.last=newValues;}\"\n  };\n  var styleUpdater = function () {\n    var styleUpdater = function (viewDescriptors, updater, state, animationsActive) {\n      var isAnimatedProps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var animations = state.animations ?? {};\n      var newValues = updater() ?? {};\n      var oldValues = state.last;\n      var nonAnimatedNewValues = {};\n      var hasAnimations = false;\n      var frameTimestamp;\n      var hasNonAnimatedValues = false;\n      if (!SHOULD_BE_USE_WEB && newValues.boxShadow) {\n        (0, _processBoxShadow.processBoxShadow)(newValues);\n      }\n      for (var key in newValues) {\n        var value = newValues[key];\n        if ((0, _utils.isAnimated)(value)) {\n          frameTimestamp = global.__frameTimestamp || global._getAnimationTimestamp();\n          prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n          animations[key] = value;\n          hasAnimations = true;\n        } else {\n          hasNonAnimatedValues = true;\n          nonAnimatedNewValues[key] = value;\n          delete animations[key];\n        }\n      }\n      if (hasAnimations) {\n        var frame = timestamp => {\n          // eslint-disable-next-line @typescript-eslint/no-shadow\n          var animations = state.animations,\n            last = state.last,\n            isAnimationCancelled = state.isAnimationCancelled;\n          if (isAnimationCancelled) {\n            state.isAnimationRunning = false;\n            return;\n          }\n          var updates = {};\n          var allFinished = true;\n          var _loop = function (propName) {\n            var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n            if (finished) {\n              /**\n               * If the animated prop is an array, we need to directly set each\n               * property (manually spread it). This prevents issues where the color\n               * prop might be incorrectly linked with its `toValue` and `current`\n               * states, causing abrupt transitions or 'jumps' in animation states.\n               */\n              if (Array.isArray(updates[propName])) {\n                updates[propName].forEach(obj => {\n                  for (var prop in obj) {\n                    last[propName][prop] = obj[prop];\n                  }\n                });\n              } else {\n                last[propName] = updates[propName];\n              }\n              delete animations[propName];\n            } else {\n              allFinished = false;\n            }\n          };\n          for (var propName in animations) {\n            _loop(propName);\n          }\n          if (updates) {\n            (0, _updateProps.updateProps)(viewDescriptors, updates);\n          }\n          if (!allFinished) {\n            requestAnimationFrame(frame);\n          } else {\n            state.isAnimationRunning = false;\n          }\n        };\n        state.animations = animations;\n        if (!state.isAnimationRunning) {\n          state.isAnimationCancelled = false;\n          state.isAnimationRunning = true;\n          frame(frameTimestamp);\n        }\n        if (hasNonAnimatedValues) {\n          (0, _updateProps.updateProps)(viewDescriptors, nonAnimatedNewValues);\n        }\n      } else {\n        state.isAnimationCancelled = true;\n        state.animations = [];\n        if (!(0, _utils.shallowEqual)(oldValues, newValues)) {\n          (0, _updateProps.updateProps)(viewDescriptors, newValues, isAnimatedProps);\n        }\n      }\n      state.last = newValues;\n    };\n    styleUpdater.__closure = {\n      SHOULD_BE_USE_WEB,\n      processBoxShadow: _processBoxShadow.processBoxShadow,\n      isAnimated: _utils.isAnimated,\n      prepareAnimation,\n      runAnimations,\n      updateProps: _updateProps.updateProps,\n      shallowEqual: _utils.shallowEqual\n    };\n    styleUpdater.__workletHash = 6395962061635;\n    styleUpdater.__initData = _worklet_6395962061635_init_data;\n    return styleUpdater;\n  }();\n  var _worklet_4651568536366_init_data = {\n    code: \"function jestStyleUpdater_reactNativeReanimated_useAnimatedStyleTs4(viewDescriptors,updater,state,animationsActive,animatedValues,adapters){const{isAnimated,prepareAnimation,runAnimations,updatePropsJestWrapper,shallowEqual}=this.__closure;var _state$animations,_updater;const animations=(_state$animations=state.animations)!==null&&_state$animations!==void 0?_state$animations:{};const newValues=(_updater=updater())!==null&&_updater!==void 0?_updater:{};const oldValues=state.last;let hasAnimations=false;let frameTimestamp;Object.keys(animations).forEach(function(key){const value=newValues[key];if(!isAnimated(value)){delete animations[key];}});Object.keys(newValues).forEach(function(key){const value=newValues[key];if(isAnimated(value)){frameTimestamp=global.__frameTimestamp||global._getAnimationTimestamp();prepareAnimation(frameTimestamp,value,animations[key],oldValues[key]);animations[key]=value;hasAnimations=true;}});function frame(timestamp){const{animations:animations,last:last,isAnimationCancelled:isAnimationCancelled}=state;if(isAnimationCancelled){state.isAnimationRunning=false;return;}const updates={};let allFinished=true;Object.keys(animations).forEach(function(propName){const finished=runAnimations(animations[propName],timestamp,propName,updates,animationsActive);if(finished){last[propName]=updates[propName];delete animations[propName];}else{allFinished=false;}});if(Object.keys(updates).length){updatePropsJestWrapper(viewDescriptors,updates,animatedValues,adapters);}if(!allFinished){requestAnimationFrame(frame);}else{state.isAnimationRunning=false;}}if(hasAnimations){state.animations=animations;if(!state.isAnimationRunning){state.isAnimationCancelled=false;state.isAnimationRunning=true;frame(frameTimestamp);}}else{state.isAnimationCancelled=true;state.animations=[];}state.last=newValues;if(!shallowEqual(oldValues,newValues)){updatePropsJestWrapper(viewDescriptors,newValues,animatedValues,adapters);}}\"\n  };\n  var jestStyleUpdater = function () {\n    var jestStyleUpdater = function (viewDescriptors, updater, state, animationsActive, animatedValues, adapters) {\n      var animations = state.animations ?? {};\n      var newValues = updater() ?? {};\n      var oldValues = state.last;\n\n      // extract animated props\n      var hasAnimations = false;\n      var frameTimestamp;\n      Object.keys(animations).forEach(key => {\n        var value = newValues[key];\n        if (!(0, _utils.isAnimated)(value)) {\n          delete animations[key];\n        }\n      });\n      Object.keys(newValues).forEach(key => {\n        var value = newValues[key];\n        if ((0, _utils.isAnimated)(value)) {\n          frameTimestamp = global.__frameTimestamp || global._getAnimationTimestamp();\n          prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n          animations[key] = value;\n          hasAnimations = true;\n        }\n      });\n      function frame(timestamp) {\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        var animations = state.animations,\n          last = state.last,\n          isAnimationCancelled = state.isAnimationCancelled;\n        if (isAnimationCancelled) {\n          state.isAnimationRunning = false;\n          return;\n        }\n        var updates = {};\n        var allFinished = true;\n        Object.keys(animations).forEach(propName => {\n          var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n          if (finished) {\n            last[propName] = updates[propName];\n            delete animations[propName];\n          } else {\n            allFinished = false;\n          }\n        });\n        if (Object.keys(updates).length) {\n          (0, _updateProps.updatePropsJestWrapper)(viewDescriptors, updates, animatedValues, adapters);\n        }\n        if (!allFinished) {\n          requestAnimationFrame(frame);\n        } else {\n          state.isAnimationRunning = false;\n        }\n      }\n      if (hasAnimations) {\n        state.animations = animations;\n        if (!state.isAnimationRunning) {\n          state.isAnimationCancelled = false;\n          state.isAnimationRunning = true;\n          frame(frameTimestamp);\n        }\n      } else {\n        state.isAnimationCancelled = true;\n        state.animations = [];\n      }\n\n      // calculate diff\n      state.last = newValues;\n      if (!(0, _utils.shallowEqual)(oldValues, newValues)) {\n        (0, _updateProps.updatePropsJestWrapper)(viewDescriptors, newValues, animatedValues, adapters);\n      }\n    };\n    jestStyleUpdater.__closure = {\n      isAnimated: _utils.isAnimated,\n      prepareAnimation,\n      runAnimations,\n      updatePropsJestWrapper: _updateProps.updatePropsJestWrapper,\n      shallowEqual: _utils.shallowEqual\n    };\n    jestStyleUpdater.__workletHash = 4651568536366;\n    jestStyleUpdater.__initData = _worklet_4651568536366_init_data;\n    return jestStyleUpdater;\n  }(); // check for invalid usage of shared values in returned object\n  function checkSharedValueUsage(prop, currentKey) {\n    if (Array.isArray(prop)) {\n      // if it's an array (i.ex. transform) validate all its elements\n      for (var element of prop) {\n        checkSharedValueUsage(element, currentKey);\n      }\n    } else if (typeof prop === 'object' && prop !== null && prop.value === undefined) {\n      // if it's a nested object, run validation for all its props\n      for (var key of Object.keys(prop)) {\n        checkSharedValueUsage(prop[key], key);\n      }\n    } else if (currentKey !== undefined && typeof prop === 'object' && prop !== null && prop.value !== undefined) {\n      // if shared value is passed instead of its value, throw an error\n      throw new _errors.ReanimatedError(`Invalid value passed to \\`${currentKey}\\`, maybe you forgot to use \\`.value\\`?`);\n    }\n  }\n\n  /**\n   * Lets you create a styles object, similar to StyleSheet styles, which can be\n   * animated using shared values.\n   *\n   * @param updater - A function returning an object with style properties you\n   *   want to animate.\n   * @param dependencies - An optional array of dependencies. Only relevant when\n   *   using Reanimated without the Babel plugin on the Web.\n   * @returns An animated style object which has to be passed to the `style`\n   *   property of an Animated component you want to animate.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedStyle\n   */\n  // You cannot pass Shared Values to `useAnimatedStyle` directly.\n  // @ts-expect-error This overload is required by our API.\n  var _worklet_9173457873940_init_data = {\n    code: \"function reactNativeReanimated_useAnimatedStyleTs5(){const{updater,adaptersArray}=this.__closure;const newValues=updater();adaptersArray.forEach(function(adapter){adapter(newValues);});return newValues;}\"\n  };\n  var _worklet_5314192339077_init_data = {\n    code: \"function reactNativeReanimated_useAnimatedStyleTs6(){const{jestStyleUpdater,shareableViewDescriptors,updater,remoteState,areAnimationsActive,jestAnimatedValues,adaptersArray}=this.__closure;jestStyleUpdater(shareableViewDescriptors,updater,remoteState,areAnimationsActive,jestAnimatedValues,adaptersArray);}\"\n  };\n  var _worklet_245709520516_init_data = {\n    code: \"function reactNativeReanimated_useAnimatedStyleTs7(){const{styleUpdater,shareableViewDescriptors,updaterFn,remoteState,areAnimationsActive,isAnimatedProps}=this.__closure;styleUpdater(shareableViewDescriptors,updaterFn,remoteState,areAnimationsActive,isAnimatedProps);}\"\n  };\n  function useAnimatedStyle(updater, dependencies, adapters) {\n    var isAnimatedProps = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    var animatedUpdaterData = (0, _react.useRef)(null);\n    var inputs = Object.values(updater.__closure ?? {});\n    if (SHOULD_BE_USE_WEB) {\n      if (!inputs.length && dependencies?.length) {\n        // let web work without a Babel plugin\n        inputs = dependencies;\n      }\n    }\n    var adaptersArray = adapters ? Array.isArray(adapters) ? adapters : [adapters] : [];\n    var adaptersHash = adapters ? (0, _utils.buildWorkletsHash)(adaptersArray) : null;\n    var areAnimationsActive = (0, _useSharedValue.useSharedValue)(true);\n    var jestAnimatedValues = (0, _react.useRef)({});\n\n    // build dependencies\n    if (!dependencies) {\n      dependencies = [...inputs, updater.__workletHash];\n    } else {\n      dependencies.push(updater.__workletHash);\n    }\n    adaptersHash && dependencies.push(adaptersHash);\n    if (!animatedUpdaterData.current) {\n      var initialStyle = (0, _animation.initialUpdaterRun)(updater);\n      animatedUpdaterData.current = {\n        initial: {\n          value: initialStyle,\n          updater\n        },\n        remoteState: (0, _core.makeShareable)({\n          last: initialStyle,\n          animations: {},\n          isAnimationCancelled: false,\n          isAnimationRunning: false\n        }),\n        viewDescriptors: (0, _ViewDescriptorsSet.makeViewDescriptorsSet)()\n      };\n    }\n    var _animatedUpdaterData$ = animatedUpdaterData.current,\n      initial = _animatedUpdaterData$.initial,\n      remoteState = _animatedUpdaterData$.remoteState,\n      viewDescriptors = _animatedUpdaterData$.viewDescriptors;\n    var shareableViewDescriptors = viewDescriptors.shareableViewDescriptors;\n    dependencies.push(shareableViewDescriptors);\n    (0, _react.useEffect)(() => {\n      var fun;\n      var updaterFn = updater;\n      if (adapters) {\n        updaterFn = function () {\n          var reactNativeReanimated_useAnimatedStyleTs5 = function () {\n            var newValues = updater();\n            adaptersArray.forEach(adapter => {\n              adapter(newValues);\n            });\n            return newValues;\n          };\n          reactNativeReanimated_useAnimatedStyleTs5.__closure = {\n            updater,\n            adaptersArray\n          };\n          reactNativeReanimated_useAnimatedStyleTs5.__workletHash = 9173457873940;\n          reactNativeReanimated_useAnimatedStyleTs5.__initData = _worklet_9173457873940_init_data;\n          return reactNativeReanimated_useAnimatedStyleTs5;\n        }();\n      }\n      if ((0, _PlatformChecker.isJest)()) {\n        fun = function () {\n          var reactNativeReanimated_useAnimatedStyleTs6 = function () {\n            jestStyleUpdater(shareableViewDescriptors, updater, remoteState, areAnimationsActive, jestAnimatedValues, adaptersArray);\n          };\n          reactNativeReanimated_useAnimatedStyleTs6.__closure = {\n            jestStyleUpdater,\n            shareableViewDescriptors,\n            updater,\n            remoteState,\n            areAnimationsActive,\n            jestAnimatedValues,\n            adaptersArray\n          };\n          reactNativeReanimated_useAnimatedStyleTs6.__workletHash = 5314192339077;\n          reactNativeReanimated_useAnimatedStyleTs6.__initData = _worklet_5314192339077_init_data;\n          return reactNativeReanimated_useAnimatedStyleTs6;\n        }();\n      } else {\n        fun = function () {\n          var reactNativeReanimated_useAnimatedStyleTs7 = function () {\n            styleUpdater(shareableViewDescriptors, updaterFn, remoteState, areAnimationsActive, isAnimatedProps);\n          };\n          reactNativeReanimated_useAnimatedStyleTs7.__closure = {\n            styleUpdater,\n            shareableViewDescriptors,\n            updaterFn,\n            remoteState,\n            areAnimationsActive,\n            isAnimatedProps\n          };\n          reactNativeReanimated_useAnimatedStyleTs7.__workletHash = 245709520516;\n          reactNativeReanimated_useAnimatedStyleTs7.__initData = _worklet_245709520516_init_data;\n          return reactNativeReanimated_useAnimatedStyleTs7;\n        }();\n      }\n      var mapperId = (0, _core.startMapper)(fun, inputs);\n      return () => {\n        (0, _core.stopMapper)(mapperId);\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, dependencies);\n    (0, _react.useEffect)(() => {\n      areAnimationsActive.value = true;\n      return () => {\n        areAnimationsActive.value = false;\n      };\n    }, [areAnimationsActive]);\n    checkSharedValueUsage(initial.value);\n    var animatedStyleHandle = (0, _react.useRef)(null);\n    if (!animatedStyleHandle.current) {\n      animatedStyleHandle.current = (0, _PlatformChecker.isJest)() ? {\n        viewDescriptors,\n        initial,\n        jestAnimatedValues\n      } : {\n        viewDescriptors,\n        initial\n      };\n    }\n    return animatedStyleHandle.current;\n  }\n});","lineCount":491,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"useAnimatedStyle"],[7,26,1,13],[7,29,1,13,"useAnimatedStyle"],[7,45,1,13],[8,2,3,0],[8,6,3,0,"_react"],[8,12,3,0],[8,15,3,0,"require"],[8,22,3,0],[8,23,3,0,"_dependencyMap"],[8,37,3,0],[9,2,5,0],[9,6,5,0,"_animation"],[9,16,5,0],[9,19,5,0,"require"],[9,26,5,0],[9,27,5,0,"_dependencyMap"],[9,41,5,0],[10,2,17,0],[10,6,17,0,"_commonTypes"],[10,18,17,0],[10,21,17,0,"require"],[10,28,17,0],[10,29,17,0,"_dependencyMap"],[10,43,17,0],[11,2,18,0],[11,6,18,0,"_core"],[11,11,18,0],[11,14,18,0,"require"],[11,21,18,0],[11,22,18,0,"_dependencyMap"],[11,36,18,0],[12,2,20,0],[12,6,20,0,"_errors"],[12,13,20,0],[12,16,20,0,"require"],[12,23,20,0],[12,24,20,0,"_dependencyMap"],[12,38,20,0],[13,2,21,0],[13,6,21,0,"_PlatformChecker"],[13,22,21,0],[13,25,21,0,"require"],[13,32,21,0],[13,33,21,0,"_dependencyMap"],[13,47,21,0],[14,2,22,0],[14,6,22,0,"_processBoxShadow"],[14,23,22,0],[14,26,22,0,"require"],[14,33,22,0],[14,34,22,0,"_dependencyMap"],[14,48,22,0],[15,2,23,0],[15,6,23,0,"_updateProps"],[15,18,23,0],[15,21,23,0,"require"],[15,28,23,0],[15,29,23,0,"_dependencyMap"],[15,43,23,0],[16,2,25,0],[16,6,25,0,"_ViewDescriptorsSet"],[16,25,25,0],[16,28,25,0,"require"],[16,35,25,0],[16,36,25,0,"_dependencyMap"],[16,50,25,0],[17,2,33,0],[17,6,33,0,"_useSharedValue"],[17,21,33,0],[17,24,33,0,"require"],[17,31,33,0],[17,32,33,0,"_dependencyMap"],[17,46,33,0],[18,2,34,0],[18,6,34,0,"_utils"],[18,12,34,0],[18,15,34,0,"require"],[18,22,34,0],[18,23,34,0,"_dependencyMap"],[18,37,34,0],[19,2,41,0],[19,6,41,6,"SHOULD_BE_USE_WEB"],[19,23,41,23],[19,26,41,26],[19,30,41,26,"shouldBeUseWeb"],[19,61,41,40],[19,63,41,41],[19,64,41,42],[20,2,41,43],[20,6,41,43,"_worklet_6358524786384_init_data"],[20,38,41,43],[21,4,41,43,"code"],[21,8,41,43],[22,2,41,43],[23,2,41,43],[23,6,41,43,"prepareAnimation"],[23,22,41,43],[23,25,59,0],[24,4,59,0],[24,8,59,0,"prepareAnimation"],[24,24,59,0],[24,36,59,0,"prepareAnimation"],[24,37,60,2,"frameTimestamp"],[24,51,60,24],[24,53,61,2,"animatedProp"],[24,65,61,34],[24,67,62,2,"lastAnimation"],[24,80,62,35],[24,82,63,2,"lastValue"],[24,91,63,31],[24,93,64,8],[25,6,66,2],[25,10,66,6,"Array"],[25,15,66,11],[25,16,66,12,"isArray"],[25,23,66,19],[25,24,66,20,"animatedProp"],[25,36,66,32],[25,37,66,33],[25,39,66,35],[26,8,67,4,"animatedProp"],[26,20,67,16],[26,21,67,17,"forEach"],[26,28,67,24],[26,29,67,25],[26,30,67,26,"prop"],[26,34,67,30],[26,36,67,32,"index"],[26,41,67,37],[26,46,67,42],[27,10,68,6,"prepareAnimation"],[27,26,68,22],[27,27,69,8,"frameTimestamp"],[27,41,69,22],[27,43,70,8,"prop"],[27,47,70,12],[27,49,71,8,"lastAnimation"],[27,62,71,21],[27,66,71,25,"lastAnimation"],[27,79,71,38],[27,80,71,39,"index"],[27,85,71,44],[27,86,71,45],[27,88,72,8,"lastValue"],[27,97,72,17],[27,101,72,21,"lastValue"],[27,110,72,30],[27,111,72,31,"index"],[27,116,72,36],[27,117,73,6],[27,118,73,7],[28,8,74,4],[28,9,74,5],[28,10,74,6],[29,8,75,4],[30,6,76,2],[31,6,77,2],[31,10,77,6],[31,17,77,13,"animatedProp"],[31,29,77,25],[31,34,77,30],[31,42,77,38],[31,46,77,42,"animatedProp"],[31,58,77,54],[31,59,77,55,"onFrame"],[31,66,77,62],[31,68,77,64],[32,8,78,4],[32,12,78,10,"animation"],[32,21,78,19],[32,24,78,22,"animatedProp"],[32,36,78,34],[33,8,80,4],[33,12,80,8,"value"],[33,17,80,13],[33,20,80,16,"animation"],[33,29,80,25],[33,30,80,26,"current"],[33,37,80,33],[34,8,81,4],[34,12,81,8,"lastValue"],[34,21,81,17],[34,26,81,22,"undefined"],[34,35,81,31],[34,39,81,35,"lastValue"],[34,48,81,44],[34,53,81,49],[34,57,81,53],[34,59,81,55],[35,10,82,6],[35,14,82,10],[35,21,82,17,"lastValue"],[35,30,82,26],[35,35,82,31],[35,43,82,39],[35,45,82,41],[36,12,83,8],[36,16,83,12,"lastValue"],[36,25,83,21],[36,26,83,22,"value"],[36,31,83,27],[36,36,83,32,"undefined"],[36,45,83,41],[36,47,83,43],[37,14,84,10],[38,14,85,10,"value"],[38,19,85,15],[38,22,85,18,"lastValue"],[38,31,85,27],[38,32,85,28,"value"],[38,37,85,33],[39,12,86,8],[39,13,86,9],[39,19,86,15],[39,23,86,19,"lastValue"],[39,32,86,28],[39,33,86,29,"onFrame"],[39,40,86,36],[39,45,86,41,"undefined"],[39,54,86,50],[39,56,86,52],[40,14,87,10],[40,18,87,14,"lastAnimation"],[40,31,87,27],[40,33,87,29,"current"],[40,40,87,36],[40,45,87,41,"undefined"],[40,54,87,50],[40,56,87,52],[41,16,88,12],[42,16,89,12,"value"],[42,21,89,17],[42,24,89,20,"lastAnimation"],[42,37,89,33],[42,38,89,34,"current"],[42,45,89,41],[43,14,90,10],[43,15,90,11],[43,21,90,17],[43,25,90,21,"lastValue"],[43,34,90,30],[43,36,90,32,"current"],[43,43,90,39],[43,48,90,44,"undefined"],[43,57,90,53],[43,59,90,55],[44,16,91,12],[45,16,92,12,"value"],[45,21,92,17],[45,24,92,20,"lastValue"],[45,33,92,29],[45,34,92,30,"current"],[45,41,92,37],[46,14,93,10],[47,12,94,8],[48,10,95,6],[48,11,95,7],[48,17,95,13],[49,12,96,8],[50,12,97,8,"value"],[50,17,97,13],[50,20,97,16,"lastValue"],[50,29,97,25],[51,10,98,6],[52,8,99,4],[53,8,101,4,"animation"],[53,17,101,13],[53,18,101,14,"callStart"],[53,27,101,23],[53,30,101,27,"timestamp"],[53,39,101,47],[53,43,101,52],[54,10,102,6,"animation"],[54,19,102,15],[54,20,102,16,"onStart"],[54,27,102,23],[54,28,102,24,"animation"],[54,37,102,33],[54,39,102,35,"value"],[54,44,102,40],[54,46,102,42,"timestamp"],[54,55,102,51],[54,57,102,53,"lastAnimation"],[54,70,102,66],[54,71,102,67],[55,8,103,4],[55,9,103,5],[56,8,104,4,"animation"],[56,17,104,13],[56,18,104,14,"callStart"],[56,27,104,23],[56,28,104,24,"frameTimestamp"],[56,42,104,38],[56,43,104,39],[57,8,105,4,"animation"],[57,17,105,13],[57,18,105,14,"callStart"],[57,27,105,23],[57,30,105,26],[57,34,105,30],[58,6,106,2],[58,7,106,3],[58,13,106,9],[58,17,106,13],[58,24,106,20,"animatedProp"],[58,36,106,32],[58,41,106,37],[58,49,106,45],[58,51,106,47],[59,8,107,4],[60,8,108,4,"Object"],[60,14,108,10],[60,15,108,11,"keys"],[60,19,108,15],[60,20,108,16,"animatedProp"],[60,32,108,28],[60,33,108,29],[60,34,108,30,"forEach"],[60,41,108,37],[60,42,108,39,"key"],[60,45,108,42],[60,49,109,6,"prepareAnimation"],[60,65,109,22],[60,66,110,8,"frameTimestamp"],[60,80,110,22],[60,82,111,8,"animatedProp"],[60,94,111,20],[60,95,111,21,"key"],[60,98,111,24],[60,99,111,25],[60,101,112,8,"lastAnimation"],[60,114,112,21],[60,118,112,25,"lastAnimation"],[60,131,112,38],[60,132,112,39,"key"],[60,135,112,42],[60,136,112,43],[60,138,113,8,"lastValue"],[60,147,113,17],[60,151,113,21,"lastValue"],[60,160,113,30],[60,161,113,31,"key"],[60,164,113,34],[60,165,114,6],[60,166,115,4],[60,167,115,5],[61,6,116,2],[62,4,117,0],[62,5,117,1],[63,4,117,1,"prepareAnimation"],[63,20,117,1],[63,21,117,1,"__closure"],[63,30,117,1],[64,4,117,1,"prepareAnimation"],[64,20,117,1],[64,21,117,1,"__workletHash"],[64,34,117,1],[65,4,117,1,"prepareAnimation"],[65,20,117,1],[65,21,117,1,"__initData"],[65,31,117,1],[65,34,117,1,"_worklet_6358524786384_init_data"],[65,66,117,1],[66,4,117,1],[66,11,117,1,"prepareAnimation"],[66,27,117,1],[67,2,117,1],[67,3,59,0],[68,2,59,0],[68,6,59,0,"_worklet_11724700371151_init_data"],[68,39,59,0],[69,4,59,0,"code"],[69,8,59,0],[70,2,59,0],[71,2,59,0],[71,6,59,0,"runAnimations"],[71,19,59,0],[71,22,119,0],[72,4,119,0],[72,8,119,0,"runAnimations"],[72,21,119,0],[72,33,119,0,"runAnimations"],[72,34,120,2,"animation"],[72,43,120,31],[72,45,121,2,"timestamp"],[72,54,121,22],[72,56,122,2,"key"],[72,59,122,22],[72,61,123,2,"result"],[72,67,123,28],[72,69,124,2,"animationsActive"],[72,85,124,40],[72,87,125,2,"forceCopyAnimation"],[72,105,125,30],[72,107,126,11],[73,6,128,2],[73,10,128,6],[73,11,128,7,"animationsActive"],[73,27,128,23],[73,28,128,24,"value"],[73,33,128,29],[73,35,128,31],[74,8,129,4],[74,15,129,11],[74,19,129,15],[75,6,130,2],[76,6,131,2],[76,10,131,6,"Array"],[76,15,131,11],[76,16,131,12,"isArray"],[76,23,131,19],[76,24,131,20,"animation"],[76,33,131,29],[76,34,131,30],[76,36,131,32],[77,8,132,4,"result"],[77,14,132,10],[77,15,132,11,"key"],[77,18,132,14],[77,19,132,15],[77,22,132,18],[77,24,132,20],[78,8,133,4],[78,12,133,8,"allFinished"],[78,23,133,19],[78,26,133,22],[78,30,133,26],[79,8,134,4,"forceCopyAnimation"],[79,26,134,22],[79,29,134,25,"key"],[79,32,134,28],[79,37,134,33],[79,48,134,44],[80,8,135,4,"animation"],[80,17,135,13],[80,18,135,14,"forEach"],[80,25,135,21],[80,26,135,22],[80,27,135,23,"entry"],[80,32,135,28],[80,34,135,30,"index"],[80,39,135,35],[80,44,135,40],[81,10,136,6],[81,14,137,8],[81,15,137,9,"runAnimations"],[81,28,137,22],[81,29,138,10,"entry"],[81,34,138,15],[81,36,139,10,"timestamp"],[81,45,139,19],[81,47,140,10,"index"],[81,52,140,15],[81,54,141,10,"result"],[81,60,141,16],[81,61,141,17,"key"],[81,64,141,20],[81,65,141,21],[81,67,142,10,"animationsActive"],[81,83,142,26],[81,85,143,10,"forceCopyAnimation"],[81,103,144,8],[81,104,144,9],[81,106,145,8],[82,12,146,8,"allFinished"],[82,23,146,19],[82,26,146,22],[82,31,146,27],[83,10,147,6],[84,8,148,4],[84,9,148,5],[84,10,148,6],[85,8,149,4],[85,15,149,11,"allFinished"],[85,26,149,22],[86,6,150,2],[86,7,150,3],[86,13,150,9],[86,17,150,13],[86,24,150,20,"animation"],[86,33,150,29],[86,38,150,34],[86,46,150,42],[86,50,150,46,"animation"],[86,59,150,55],[86,60,150,56,"onFrame"],[86,67,150,63],[86,69,150,65],[87,8,151,4],[87,12,151,8,"finished"],[87,20,151,16],[87,23,151,19],[87,27,151,23],[88,8,152,4],[88,12,152,8],[88,13,152,9,"animation"],[88,22,152,18],[88,23,152,19,"finished"],[88,31,152,27],[88,33,152,29],[89,10,153,6],[89,14,153,10,"animation"],[89,23,153,19],[89,24,153,20,"callStart"],[89,33,153,29],[89,35,153,31],[90,12,154,8,"animation"],[90,21,154,17],[90,22,154,18,"callStart"],[90,31,154,27],[90,32,154,28,"timestamp"],[90,41,154,37],[90,42,154,38],[91,12,155,8,"animation"],[91,21,155,17],[91,22,155,18,"callStart"],[91,31,155,27],[91,34,155,30],[91,38,155,34],[92,10,156,6],[93,10,157,6,"finished"],[93,18,157,14],[93,21,157,17,"animation"],[93,30,157,26],[93,31,157,27,"onFrame"],[93,38,157,34],[93,39,157,35,"animation"],[93,48,157,44],[93,50,157,46,"timestamp"],[93,59,157,55],[93,60,157,56],[94,10,158,6,"animation"],[94,19,158,15],[94,20,158,16,"timestamp"],[94,29,158,25],[94,32,158,28,"timestamp"],[94,41,158,37],[95,10,159,6],[95,14,159,10,"finished"],[95,22,159,18],[95,24,159,20],[96,12,160,8,"animation"],[96,21,160,17],[96,22,160,18,"finished"],[96,30,160,26],[96,33,160,29],[96,37,160,33],[97,12,161,8,"animation"],[97,21,161,17],[97,22,161,18,"callback"],[97,30,161,26],[97,34,161,30,"animation"],[97,43,161,39],[97,44,161,40,"callback"],[97,52,161,48],[97,53,161,49],[97,57,161,53],[97,58,161,54],[97,72,161,68],[97,73,161,69],[98,10,162,6],[99,8,163,4],[100,8,164,4],[101,0,165,0],[102,0,166,0],[103,0,167,0],[104,0,168,0],[105,8,169,4],[105,12,169,8,"forceCopyAnimation"],[105,30,169,26],[105,32,169,28],[106,10,170,6,"result"],[106,16,170,12],[106,17,170,13,"key"],[106,20,170,16],[106,21,170,17],[106,24,170,20],[107,12,170,22],[107,15,170,25,"animation"],[107,24,170,34],[107,25,170,35,"current"],[108,10,170,43],[108,11,170,44],[109,8,171,4],[109,9,171,5],[109,15,171,11],[110,10,172,6,"result"],[110,16,172,12],[110,17,172,13,"key"],[110,20,172,16],[110,21,172,17],[110,24,172,20,"animation"],[110,33,172,29],[110,34,172,30,"current"],[110,41,172,37],[111,8,173,4],[112,8,174,4],[112,15,174,11,"finished"],[112,23,174,19],[113,6,175,2],[113,7,175,3],[113,13,175,9],[113,17,175,13],[113,24,175,20,"animation"],[113,33,175,29],[113,38,175,34],[113,46,175,42],[113,48,175,44],[114,8,176,4,"result"],[114,14,176,10],[114,15,176,11,"key"],[114,18,176,14],[114,19,176,15],[114,22,176,18],[114,23,176,19],[114,24,176,20],[115,8,177,4],[115,12,177,8,"allFinished"],[115,24,177,19],[115,27,177,22],[115,31,177,26],[116,8,178,4,"Object"],[116,14,178,10],[116,15,178,11,"keys"],[116,19,178,15],[116,20,178,16,"animation"],[116,29,178,25],[116,30,178,26],[116,31,178,27,"forEach"],[116,38,178,34],[116,39,178,36,"k"],[116,40,178,37],[116,44,178,42],[117,10,179,6],[117,14,180,8],[117,15,180,9,"runAnimations"],[117,28,180,22],[117,29,181,10,"animation"],[117,38,181,19],[117,39,181,20,"k"],[117,40,181,21],[117,41,181,22],[117,43,182,10,"timestamp"],[117,52,182,19],[117,54,183,10,"k"],[117,55,183,11],[117,57,184,10,"result"],[117,63,184,16],[117,64,184,17,"key"],[117,67,184,20],[117,68,184,21],[117,70,185,10,"animationsActive"],[117,86,185,26],[117,88,186,10,"forceCopyAnimation"],[117,106,187,8],[117,107,187,9],[117,109,188,8],[118,12,189,8,"allFinished"],[118,24,189,19],[118,27,189,22],[118,32,189,27],[119,10,190,6],[120,8,191,4],[120,9,191,5],[120,10,191,6],[121,8,192,4],[121,15,192,11,"allFinished"],[121,27,192,22],[122,6,193,2],[122,7,193,3],[122,13,193,9],[123,8,194,4,"result"],[123,14,194,10],[123,15,194,11,"key"],[123,18,194,14],[123,19,194,15],[123,22,194,18,"animation"],[123,31,194,27],[124,8,195,4],[124,15,195,11],[124,19,195,15],[125,6,196,2],[126,4,197,0],[126,5,197,1],[127,4,197,1,"runAnimations"],[127,17,197,1],[127,18,197,1,"__closure"],[127,27,197,1],[128,4,197,1,"runAnimations"],[128,17,197,1],[128,18,197,1,"__workletHash"],[128,31,197,1],[129,4,197,1,"runAnimations"],[129,17,197,1],[129,18,197,1,"__initData"],[129,28,197,1],[129,31,197,1,"_worklet_11724700371151_init_data"],[129,64,197,1],[130,4,197,1],[130,11,197,1,"runAnimations"],[130,24,197,1],[131,2,197,1],[131,3,119,0],[132,2,119,0],[132,6,119,0,"_worklet_6395962061635_init_data"],[132,38,119,0],[133,4,119,0,"code"],[133,8,119,0],[134,2,119,0],[135,2,119,0],[135,6,119,0,"styleUpdater"],[135,18,119,0],[135,21,199,0],[136,4,199,0],[136,8,199,0,"styleUpdater"],[136,20,199,0],[136,32,199,0,"styleUpdater"],[136,33,200,2,"viewDescriptors"],[136,48,200,44],[136,50,201,2,"updater"],[136,57,201,79],[136,59,202,2,"state"],[136,64,202,22],[136,66,203,2,"animationsActive"],[136,82,203,40],[136,84,205,8],[137,6,205,8],[137,10,204,2,"isAnimatedProps"],[137,25,204,17],[137,28,204,17,"arguments"],[137,37,204,17],[137,38,204,17,"length"],[137,44,204,17],[137,52,204,17,"arguments"],[137,61,204,17],[137,69,204,17,"undefined"],[137,78,204,17],[137,81,204,17,"arguments"],[137,90,204,17],[137,96,204,20],[137,101,204,25],[138,6,207,2],[138,10,207,8,"animations"],[138,20,207,18],[138,23,207,21,"state"],[138,28,207,26],[138,29,207,27,"animations"],[138,39,207,37],[138,43,207,41],[138,44,207,42],[138,45,207,43],[139,6,208,2],[139,10,208,8,"newValues"],[139,19,208,17],[139,22,208,20,"updater"],[139,29,208,27],[139,30,208,28],[139,31,208,29],[139,35,208,33],[139,36,208,34],[139,37,208,35],[140,6,209,2],[140,10,209,8,"oldValues"],[140,19,209,17],[140,22,209,20,"state"],[140,27,209,25],[140,28,209,26,"last"],[140,32,209,30],[141,6,210,2],[141,10,210,8,"nonAnimatedNewValues"],[141,30,210,40],[141,33,210,43],[141,34,210,44],[141,35,210,45],[142,6,212,2],[142,10,212,6,"hasAnimations"],[142,23,212,19],[142,26,212,22],[142,31,212,27],[143,6,213,2],[143,10,213,6,"frameTimestamp"],[143,24,213,40],[144,6,214,2],[144,10,214,6,"hasNonAnimatedValues"],[144,30,214,26],[144,33,214,29],[144,38,214,34],[145,6,215,2],[145,10,215,6],[145,11,215,7,"SHOULD_BE_USE_WEB"],[145,28,215,24],[145,32,215,28,"newValues"],[145,41,215,37],[145,42,215,38,"boxShadow"],[145,51,215,47],[145,53,215,49],[146,8,216,4],[146,12,216,4,"processBoxShadow"],[146,46,216,20],[146,48,216,21,"newValues"],[146,57,216,30],[146,58,216,31],[147,6,217,2],[148,6,218,2],[148,11,218,7],[148,15,218,13,"key"],[148,18,218,16],[148,22,218,20,"newValues"],[148,31,218,29],[148,33,218,31],[149,8,219,4],[149,12,219,10,"value"],[149,17,219,15],[149,20,219,18,"newValues"],[149,29,219,27],[149,30,219,28,"key"],[149,33,219,31],[149,34,219,32],[150,8,220,4],[150,12,220,8],[150,16,220,8,"isAnimated"],[150,33,220,18],[150,35,220,19,"value"],[150,40,220,24],[150,41,220,25],[150,43,220,27],[151,10,221,6,"frameTimestamp"],[151,24,221,20],[151,27,222,8,"global"],[151,33,222,14],[151,34,222,15,"__frameTimestamp"],[151,50,222,31],[151,54,222,35,"global"],[151,60,222,41],[151,61,222,42,"_getAnimationTimestamp"],[151,83,222,64],[151,84,222,65],[151,85,222,66],[152,10,223,6,"prepareAnimation"],[152,26,223,22],[152,27,223,23,"frameTimestamp"],[152,41,223,37],[152,43,223,39,"value"],[152,48,223,44],[152,50,223,46,"animations"],[152,60,223,56],[152,61,223,57,"key"],[152,64,223,60],[152,65,223,61],[152,67,223,63,"oldValues"],[152,76,223,72],[152,77,223,73,"key"],[152,80,223,76],[152,81,223,77],[152,82,223,78],[153,10,224,6,"animations"],[153,20,224,16],[153,21,224,17,"key"],[153,24,224,20],[153,25,224,21],[153,28,224,24,"value"],[153,33,224,29],[154,10,225,6,"hasAnimations"],[154,23,225,19],[154,26,225,22],[154,30,225,26],[155,8,226,4],[155,9,226,5],[155,15,226,11],[156,10,227,6,"hasNonAnimatedValues"],[156,30,227,26],[156,33,227,29],[156,37,227,33],[157,10,228,6,"nonAnimatedNewValues"],[157,30,228,26],[157,31,228,27,"key"],[157,34,228,30],[157,35,228,31],[157,38,228,34,"value"],[157,43,228,39],[158,10,229,6],[158,17,229,13,"animations"],[158,27,229,23],[158,28,229,24,"key"],[158,31,229,27],[158,32,229,28],[159,8,230,4],[160,6,231,2],[161,6,233,2],[161,10,233,6,"hasAnimations"],[161,23,233,19],[161,25,233,21],[162,8,234,4],[162,12,234,10,"frame"],[162,17,234,15],[162,20,234,19,"timestamp"],[162,29,234,39],[162,33,234,44],[163,10,235,6],[164,10,236,6],[164,14,236,14,"animations"],[164,24,236,24],[164,27,236,57,"state"],[164,32,236,62],[164,33,236,14,"animations"],[164,43,236,24],[165,12,236,26,"last"],[165,16,236,30],[165,19,236,57,"state"],[165,24,236,62],[165,25,236,26,"last"],[165,29,236,30],[166,12,236,32,"isAnimationCancelled"],[166,32,236,52],[166,35,236,57,"state"],[166,40,236,62],[166,41,236,32,"isAnimationCancelled"],[166,61,236,52],[167,10,237,6],[167,14,237,10,"isAnimationCancelled"],[167,34,237,30],[167,36,237,32],[168,12,238,8,"state"],[168,17,238,13],[168,18,238,14,"isAnimationRunning"],[168,36,238,32],[168,39,238,35],[168,44,238,40],[169,12,239,8],[170,10,240,6],[171,10,242,6],[171,14,242,12,"updates"],[171,21,242,39],[171,24,242,42],[171,25,242,43],[171,26,242,44],[172,10,243,6],[172,14,243,10,"allFinished"],[172,25,243,21],[172,28,243,24],[172,32,243,28],[173,10,243,29],[173,14,243,29,"_loop"],[173,19,243,29],[173,31,243,29,"_loop"],[173,32,243,29,"propName"],[173,40,243,29],[173,42,244,41],[174,12,245,8],[174,16,245,14,"finished"],[174,24,245,22],[174,27,245,25,"runAnimations"],[174,40,245,38],[174,41,246,10,"animations"],[174,51,246,20],[174,52,246,21,"propName"],[174,60,246,29],[174,61,246,30],[174,63,247,10,"timestamp"],[174,72,247,19],[174,74,248,10,"propName"],[174,82,248,18],[174,84,249,10,"updates"],[174,91,249,17],[174,93,250,10,"animationsActive"],[174,109,251,8],[174,110,251,9],[175,12,252,8],[175,16,252,12,"finished"],[175,24,252,20],[175,26,252,22],[176,14,253,10],[177,0,254,0],[178,0,255,0],[179,0,256,0],[180,0,257,0],[181,0,258,0],[182,14,259,10],[182,18,259,14,"Array"],[182,23,259,19],[182,24,259,20,"isArray"],[182,31,259,27],[182,32,259,28,"updates"],[182,39,259,35],[182,40,259,36,"propName"],[182,48,259,44],[182,49,259,45],[182,50,259,46],[182,52,259,48],[183,16,260,12,"updates"],[183,23,260,19],[183,24,260,20,"propName"],[183,32,260,28],[183,33,260,29],[183,34,260,30,"forEach"],[183,41,260,37],[183,42,260,39,"obj"],[183,45,260,54],[183,49,260,59],[184,18,261,14],[184,23,261,19],[184,27,261,25,"prop"],[184,31,261,29],[184,35,261,33,"obj"],[184,38,261,36],[184,40,261,38],[185,20,262,16,"last"],[185,24,262,20],[185,25,262,21,"propName"],[185,33,262,29],[185,34,262,30],[185,35,262,31,"prop"],[185,39,262,35],[185,40,262,36],[185,43,262,39,"obj"],[185,46,262,42],[185,47,262,43,"prop"],[185,51,262,47],[185,52,262,48],[186,18,263,14],[187,16,264,12],[187,17,264,13],[187,18,264,14],[188,14,265,10],[188,15,265,11],[188,21,265,17],[189,16,266,12,"last"],[189,20,266,16],[189,21,266,17,"propName"],[189,29,266,25],[189,30,266,26],[189,33,266,29,"updates"],[189,40,266,36],[189,41,266,37,"propName"],[189,49,266,45],[189,50,266,46],[190,14,267,10],[191,14,268,10],[191,21,268,17,"animations"],[191,31,268,27],[191,32,268,28,"propName"],[191,40,268,36],[191,41,268,37],[192,12,269,8],[192,13,269,9],[192,19,269,15],[193,14,270,10,"allFinished"],[193,25,270,21],[193,28,270,24],[193,33,270,29],[194,12,271,8],[195,10,272,6],[195,11,272,7],[196,10,244,6],[196,15,244,11],[196,19,244,17,"propName"],[196,27,244,25],[196,31,244,29,"animations"],[196,41,244,39],[197,12,244,39,"_loop"],[197,17,244,39],[197,18,244,39,"propName"],[197,26,244,39],[198,10,244,39],[199,10,274,6],[199,14,274,10,"updates"],[199,21,274,17],[199,23,274,19],[200,12,275,8],[200,16,275,8,"updateProps"],[200,40,275,19],[200,42,275,20,"viewDescriptors"],[200,57,275,35],[200,59,275,37,"updates"],[200,66,275,44],[200,67,275,45],[201,10,276,6],[202,10,278,6],[202,14,278,10],[202,15,278,11,"allFinished"],[202,26,278,22],[202,28,278,24],[203,12,279,8,"requestAnimationFrame"],[203,33,279,29],[203,34,279,30,"frame"],[203,39,279,35],[203,40,279,36],[204,10,280,6],[204,11,280,7],[204,17,280,13],[205,12,281,8,"state"],[205,17,281,13],[205,18,281,14,"isAnimationRunning"],[205,36,281,32],[205,39,281,35],[205,44,281,40],[206,10,282,6],[207,8,283,4],[207,9,283,5],[208,8,285,4,"state"],[208,13,285,9],[208,14,285,10,"animations"],[208,24,285,20],[208,27,285,23,"animations"],[208,37,285,33],[209,8,286,4],[209,12,286,8],[209,13,286,9,"state"],[209,18,286,14],[209,19,286,15,"isAnimationRunning"],[209,37,286,33],[209,39,286,35],[210,10,287,6,"state"],[210,15,287,11],[210,16,287,12,"isAnimationCancelled"],[210,36,287,32],[210,39,287,35],[210,44,287,40],[211,10,288,6,"state"],[211,15,288,11],[211,16,288,12,"isAnimationRunning"],[211,34,288,30],[211,37,288,33],[211,41,288,37],[212,10,289,6,"frame"],[212,15,289,11],[212,16,289,12,"frameTimestamp"],[212,30,289,27],[212,31,289,28],[213,8,290,4],[214,8,292,4],[214,12,292,8,"hasNonAnimatedValues"],[214,32,292,28],[214,34,292,30],[215,10,293,6],[215,14,293,6,"updateProps"],[215,38,293,17],[215,40,293,18,"viewDescriptors"],[215,55,293,33],[215,57,293,35,"nonAnimatedNewValues"],[215,77,293,55],[215,78,293,56],[216,8,294,4],[217,6,295,2],[217,7,295,3],[217,13,295,9],[218,8,296,4,"state"],[218,13,296,9],[218,14,296,10,"isAnimationCancelled"],[218,34,296,30],[218,37,296,33],[218,41,296,37],[219,8,297,4,"state"],[219,13,297,9],[219,14,297,10,"animations"],[219,24,297,20],[219,27,297,23],[219,29,297,25],[220,8,299,4],[220,12,299,8],[220,13,299,9],[220,17,299,9,"shallowEqual"],[220,36,299,21],[220,38,299,22,"oldValues"],[220,47,299,31],[220,49,299,33,"newValues"],[220,58,299,42],[220,59,299,43],[220,61,299,45],[221,10,300,6],[221,14,300,6,"updateProps"],[221,38,300,17],[221,40,300,18,"viewDescriptors"],[221,55,300,33],[221,57,300,35,"newValues"],[221,66,300,44],[221,68,300,46,"isAnimatedProps"],[221,83,300,61],[221,84,300,62],[222,8,301,4],[223,6,302,2],[224,6,303,2,"state"],[224,11,303,7],[224,12,303,8,"last"],[224,16,303,12],[224,19,303,15,"newValues"],[224,28,303,24],[225,4,304,0],[225,5,304,1],[226,4,304,1,"styleUpdater"],[226,16,304,1],[226,17,304,1,"__closure"],[226,26,304,1],[227,6,304,1,"SHOULD_BE_USE_WEB"],[227,23,304,1],[228,6,304,1,"processBoxShadow"],[228,22,304,1],[228,24,216,4,"processBoxShadow"],[228,58,216,20],[229,6,216,20,"isAnimated"],[229,16,216,20],[229,18,220,8,"isAnimated"],[229,35,220,18],[230,6,220,18,"prepareAnimation"],[230,22,220,18],[231,6,220,18,"runAnimations"],[231,19,220,18],[232,6,220,18,"updateProps"],[232,17,220,18],[232,19,275,8,"updateProps"],[232,43,275,19],[233,6,275,19,"shallowEqual"],[233,18,275,19],[233,20,299,9,"shallowEqual"],[234,4,299,21],[235,4,299,21,"styleUpdater"],[235,16,299,21],[235,17,299,21,"__workletHash"],[235,30,299,21],[236,4,299,21,"styleUpdater"],[236,16,299,21],[236,17,299,21,"__initData"],[236,27,299,21],[236,30,299,21,"_worklet_6395962061635_init_data"],[236,62,299,21],[237,4,299,21],[237,11,299,21,"styleUpdater"],[237,23,299,21],[238,2,299,21],[238,3,199,0],[239,2,199,0],[239,6,199,0,"_worklet_4651568536366_init_data"],[239,38,199,0],[240,4,199,0,"code"],[240,8,199,0],[241,2,199,0],[242,2,199,0],[242,6,199,0,"jestStyleUpdater"],[242,22,199,0],[242,25,306,0],[243,4,306,0],[243,8,306,0,"jestStyleUpdater"],[243,24,306,0],[243,36,306,0,"jestStyleUpdater"],[243,37,307,2,"viewDescriptors"],[243,52,307,44],[243,54,308,2,"updater"],[243,61,308,79],[243,63,309,2,"state"],[243,68,309,22],[243,70,310,2,"animationsActive"],[243,86,310,40],[243,88,311,2,"animatedValues"],[243,102,311,54],[243,104,312,2,"adapters"],[243,112,312,42],[243,114,313,8],[244,6,315,2],[244,10,315,8,"animations"],[244,20,315,38],[244,23,315,41,"state"],[244,28,315,46],[244,29,315,47,"animations"],[244,39,315,57],[244,43,315,61],[244,44,315,62],[244,45,315,63],[245,6,316,2],[245,10,316,8,"newValues"],[245,19,316,17],[245,22,316,20,"updater"],[245,29,316,27],[245,30,316,28],[245,31,316,29],[245,35,316,33],[245,36,316,34],[245,37,316,35],[246,6,317,2],[246,10,317,8,"oldValues"],[246,19,317,17],[246,22,317,20,"state"],[246,27,317,25],[246,28,317,26,"last"],[246,32,317,30],[248,6,319,2],[249,6,320,2],[249,10,320,6,"hasAnimations"],[249,23,320,19],[249,26,320,22],[249,31,320,27],[250,6,321,2],[250,10,321,6,"frameTimestamp"],[250,24,321,40],[251,6,322,2,"Object"],[251,12,322,8],[251,13,322,9,"keys"],[251,17,322,13],[251,18,322,14,"animations"],[251,28,322,24],[251,29,322,25],[251,30,322,26,"forEach"],[251,37,322,33],[251,38,322,35,"key"],[251,41,322,38],[251,45,322,43],[252,8,323,4],[252,12,323,10,"value"],[252,17,323,15],[252,20,323,18,"newValues"],[252,29,323,27],[252,30,323,28,"key"],[252,33,323,31],[252,34,323,32],[253,8,324,4],[253,12,324,8],[253,13,324,9],[253,17,324,9,"isAnimated"],[253,34,324,19],[253,36,324,20,"value"],[253,41,324,25],[253,42,324,26],[253,44,324,28],[254,10,325,6],[254,17,325,13,"animations"],[254,27,325,23],[254,28,325,24,"key"],[254,31,325,27],[254,32,325,28],[255,8,326,4],[256,6,327,2],[256,7,327,3],[256,8,327,4],[257,6,328,2,"Object"],[257,12,328,8],[257,13,328,9,"keys"],[257,17,328,13],[257,18,328,14,"newValues"],[257,27,328,23],[257,28,328,24],[257,29,328,25,"forEach"],[257,36,328,32],[257,37,328,34,"key"],[257,40,328,37],[257,44,328,42],[258,8,329,4],[258,12,329,10,"value"],[258,17,329,15],[258,20,329,18,"newValues"],[258,29,329,27],[258,30,329,28,"key"],[258,33,329,31],[258,34,329,32],[259,8,330,4],[259,12,330,8],[259,16,330,8,"isAnimated"],[259,33,330,18],[259,35,330,19,"value"],[259,40,330,24],[259,41,330,25],[259,43,330,27],[260,10,331,6,"frameTimestamp"],[260,24,331,20],[260,27,332,8,"global"],[260,33,332,14],[260,34,332,15,"__frameTimestamp"],[260,50,332,31],[260,54,332,35,"global"],[260,60,332,41],[260,61,332,42,"_getAnimationTimestamp"],[260,83,332,64],[260,84,332,65],[260,85,332,66],[261,10,333,6,"prepareAnimation"],[261,26,333,22],[261,27,333,23,"frameTimestamp"],[261,41,333,37],[261,43,333,39,"value"],[261,48,333,44],[261,50,333,46,"animations"],[261,60,333,56],[261,61,333,57,"key"],[261,64,333,60],[261,65,333,61],[261,67,333,63,"oldValues"],[261,76,333,72],[261,77,333,73,"key"],[261,80,333,76],[261,81,333,77],[261,82,333,78],[262,10,334,6,"animations"],[262,20,334,16],[262,21,334,17,"key"],[262,24,334,20],[262,25,334,21],[262,28,334,24,"value"],[262,33,334,29],[263,10,335,6,"hasAnimations"],[263,23,335,19],[263,26,335,22],[263,30,335,26],[264,8,336,4],[265,6,337,2],[265,7,337,3],[265,8,337,4],[266,6,339,2],[266,15,339,11,"frame"],[266,20,339,16,"frame"],[266,21,339,17,"timestamp"],[266,30,339,37],[266,32,339,39],[267,8,340,4],[268,8,341,4],[268,12,341,12,"animations"],[268,22,341,22],[268,25,341,55,"state"],[268,30,341,60],[268,31,341,12,"animations"],[268,41,341,22],[269,10,341,24,"last"],[269,14,341,28],[269,17,341,55,"state"],[269,22,341,60],[269,23,341,24,"last"],[269,27,341,28],[270,10,341,30,"isAnimationCancelled"],[270,30,341,50],[270,33,341,55,"state"],[270,38,341,60],[270,39,341,30,"isAnimationCancelled"],[270,59,341,50],[271,8,342,4],[271,12,342,8,"isAnimationCancelled"],[271,32,342,28],[271,34,342,30],[272,10,343,6,"state"],[272,15,343,11],[272,16,343,12,"isAnimationRunning"],[272,34,343,30],[272,37,343,33],[272,42,343,38],[273,10,344,6],[274,8,345,4],[275,8,347,4],[275,12,347,10,"updates"],[275,19,347,37],[275,22,347,40],[275,23,347,41],[275,24,347,42],[276,8,348,4],[276,12,348,8,"allFinished"],[276,23,348,19],[276,26,348,22],[276,30,348,26],[277,8,349,4,"Object"],[277,14,349,10],[277,15,349,11,"keys"],[277,19,349,15],[277,20,349,16,"animations"],[277,30,349,26],[277,31,349,27],[277,32,349,28,"forEach"],[277,39,349,35],[277,40,349,37,"propName"],[277,48,349,45],[277,52,349,50],[278,10,350,6],[278,14,350,12,"finished"],[278,22,350,20],[278,25,350,23,"runAnimations"],[278,38,350,36],[278,39,351,8,"animations"],[278,49,351,18],[278,50,351,19,"propName"],[278,58,351,27],[278,59,351,28],[278,61,352,8,"timestamp"],[278,70,352,17],[278,72,353,8,"propName"],[278,80,353,16],[278,82,354,8,"updates"],[278,89,354,15],[278,91,355,8,"animationsActive"],[278,107,356,6],[278,108,356,7],[279,10,357,6],[279,14,357,10,"finished"],[279,22,357,18],[279,24,357,20],[280,12,358,8,"last"],[280,16,358,12],[280,17,358,13,"propName"],[280,25,358,21],[280,26,358,22],[280,29,358,25,"updates"],[280,36,358,32],[280,37,358,33,"propName"],[280,45,358,41],[280,46,358,42],[281,12,359,8],[281,19,359,15,"animations"],[281,29,359,25],[281,30,359,26,"propName"],[281,38,359,34],[281,39,359,35],[282,10,360,6],[282,11,360,7],[282,17,360,13],[283,12,361,8,"allFinished"],[283,23,361,19],[283,26,361,22],[283,31,361,27],[284,10,362,6],[285,8,363,4],[285,9,363,5],[285,10,363,6],[286,8,365,4],[286,12,365,8,"Object"],[286,18,365,14],[286,19,365,15,"keys"],[286,23,365,19],[286,24,365,20,"updates"],[286,31,365,27],[286,32,365,28],[286,33,365,29,"length"],[286,39,365,35],[286,41,365,37],[287,10,366,6],[287,14,366,6,"updatePropsJestWrapper"],[287,49,366,28],[287,51,367,8,"viewDescriptors"],[287,66,367,23],[287,68,368,8,"updates"],[287,75,368,15],[287,77,369,8,"animatedValues"],[287,91,369,22],[287,93,370,8,"adapters"],[287,101,371,6],[287,102,371,7],[288,8,372,4],[289,8,374,4],[289,12,374,8],[289,13,374,9,"allFinished"],[289,24,374,20],[289,26,374,22],[290,10,375,6,"requestAnimationFrame"],[290,31,375,27],[290,32,375,28,"frame"],[290,37,375,33],[290,38,375,34],[291,8,376,4],[291,9,376,5],[291,15,376,11],[292,10,377,6,"state"],[292,15,377,11],[292,16,377,12,"isAnimationRunning"],[292,34,377,30],[292,37,377,33],[292,42,377,38],[293,8,378,4],[294,6,379,2],[295,6,381,2],[295,10,381,6,"hasAnimations"],[295,23,381,19],[295,25,381,21],[296,8,382,4,"state"],[296,13,382,9],[296,14,382,10,"animations"],[296,24,382,20],[296,27,382,23,"animations"],[296,37,382,33],[297,8,383,4],[297,12,383,8],[297,13,383,9,"state"],[297,18,383,14],[297,19,383,15,"isAnimationRunning"],[297,37,383,33],[297,39,383,35],[298,10,384,6,"state"],[298,15,384,11],[298,16,384,12,"isAnimationCancelled"],[298,36,384,32],[298,39,384,35],[298,44,384,40],[299,10,385,6,"state"],[299,15,385,11],[299,16,385,12,"isAnimationRunning"],[299,34,385,30],[299,37,385,33],[299,41,385,37],[300,10,386,6,"frame"],[300,15,386,11],[300,16,386,12,"frameTimestamp"],[300,30,386,27],[300,31,386,28],[301,8,387,4],[302,6,388,2],[302,7,388,3],[302,13,388,9],[303,8,389,4,"state"],[303,13,389,9],[303,14,389,10,"isAnimationCancelled"],[303,34,389,30],[303,37,389,33],[303,41,389,37],[304,8,390,4,"state"],[304,13,390,9],[304,14,390,10,"animations"],[304,24,390,20],[304,27,390,23],[304,29,390,25],[305,6,391,2],[307,6,393,2],[308,6,394,2,"state"],[308,11,394,7],[308,12,394,8,"last"],[308,16,394,12],[308,19,394,15,"newValues"],[308,28,394,24],[309,6,396,2],[309,10,396,6],[309,11,396,7],[309,15,396,7,"shallowEqual"],[309,34,396,19],[309,36,396,20,"oldValues"],[309,45,396,29],[309,47,396,31,"newValues"],[309,56,396,40],[309,57,396,41],[309,59,396,43],[310,8,397,4],[310,12,397,4,"updatePropsJestWrapper"],[310,47,397,26],[310,49,398,6,"viewDescriptors"],[310,64,398,21],[310,66,399,6,"newValues"],[310,75,399,15],[310,77,400,6,"animatedValues"],[310,91,400,20],[310,93,401,6,"adapters"],[310,101,402,4],[310,102,402,5],[311,6,403,2],[312,4,404,0],[312,5,404,1],[313,4,404,1,"jestStyleUpdater"],[313,20,404,1],[313,21,404,1,"__closure"],[313,30,404,1],[314,6,404,1,"isAnimated"],[314,16,404,1],[314,18,324,9,"isAnimated"],[314,35,324,19],[315,6,324,19,"prepareAnimation"],[315,22,324,19],[316,6,324,19,"runAnimations"],[316,19,324,19],[317,6,324,19,"updatePropsJestWrapper"],[317,28,324,19],[317,30,366,6,"updatePropsJestWrapper"],[317,65,366,28],[318,6,366,28,"shallowEqual"],[318,18,366,28],[318,20,396,7,"shallowEqual"],[319,4,396,19],[320,4,396,19,"jestStyleUpdater"],[320,20,396,19],[320,21,396,19,"__workletHash"],[320,34,396,19],[321,4,396,19,"jestStyleUpdater"],[321,20,396,19],[321,21,396,19,"__initData"],[321,31,396,19],[321,34,396,19,"_worklet_4651568536366_init_data"],[321,66,396,19],[322,4,396,19],[322,11,396,19,"jestStyleUpdater"],[322,27,396,19],[323,2,396,19],[323,3,306,0],[323,7,406,0],[324,2,407,0],[324,11,407,9,"checkSharedValueUsage"],[324,32,407,30,"checkSharedValueUsage"],[324,33,408,2,"prop"],[324,37,408,43],[324,39,409,2,"currentKey"],[324,49,409,21],[324,51,410,8],[325,4,411,2],[325,8,411,6,"Array"],[325,13,411,11],[325,14,411,12,"isArray"],[325,21,411,19],[325,22,411,20,"prop"],[325,26,411,24],[325,27,411,25],[325,29,411,27],[326,6,412,4],[327,6,413,4],[327,11,413,9],[327,15,413,15,"element"],[327,22,413,22],[327,26,413,26,"prop"],[327,30,413,30],[327,32,413,32],[328,8,414,6,"checkSharedValueUsage"],[328,29,414,27],[328,30,414,28,"element"],[328,37,414,35],[328,39,414,37,"currentKey"],[328,49,414,47],[328,50,414,48],[329,6,415,4],[330,4,416,2],[330,5,416,3],[330,11,416,9],[330,15,417,4],[330,22,417,11,"prop"],[330,26,417,15],[330,31,417,20],[330,39,417,28],[330,43,418,4,"prop"],[330,47,418,8],[330,52,418,13],[330,56,418,17],[330,60,419,4,"prop"],[330,64,419,8],[330,65,419,9,"value"],[330,70,419,14],[330,75,419,19,"undefined"],[330,84,419,28],[330,86,420,4],[331,6,421,4],[332,6,422,4],[332,11,422,9],[332,15,422,15,"key"],[332,18,422,18],[332,22,422,22,"Object"],[332,28,422,28],[332,29,422,29,"keys"],[332,33,422,33],[332,34,422,34,"prop"],[332,38,422,38],[332,39,422,39],[332,41,422,41],[333,8,423,6,"checkSharedValueUsage"],[333,29,423,27],[333,30,423,28,"prop"],[333,34,423,32],[333,35,423,33,"key"],[333,38,423,36],[333,39,423,37],[333,41,423,39,"key"],[333,44,423,42],[333,45,423,43],[334,6,424,4],[335,4,425,2],[335,5,425,3],[335,11,425,9],[335,15,426,4,"currentKey"],[335,25,426,14],[335,30,426,19,"undefined"],[335,39,426,28],[335,43,427,4],[335,50,427,11,"prop"],[335,54,427,15],[335,59,427,20],[335,67,427,28],[335,71,428,4,"prop"],[335,75,428,8],[335,80,428,13],[335,84,428,17],[335,88,429,4,"prop"],[335,92,429,8],[335,93,429,9,"value"],[335,98,429,14],[335,103,429,19,"undefined"],[335,112,429,28],[335,114,430,4],[336,6,431,4],[337,6,432,4],[337,12,432,10],[337,16,432,14,"ReanimatedError"],[337,39,432,29],[337,40,433,6],[337,69,433,35,"currentKey"],[337,79,433,45],[337,120,434,4],[337,121,434,5],[338,4,435,2],[339,2,436,0],[341,2,438,0],[342,0,439,0],[343,0,440,0],[344,0,441,0],[345,0,442,0],[346,0,443,0],[347,0,444,0],[348,0,445,0],[349,0,446,0],[350,0,447,0],[351,0,448,0],[352,0,449,0],[353,2,450,0],[354,2,451,0],[355,2,451,0],[355,6,451,0,"_worklet_9173457873940_init_data"],[355,38,451,0],[356,4,451,0,"code"],[356,8,451,0],[357,2,451,0],[358,2,451,0],[358,6,451,0,"_worklet_5314192339077_init_data"],[358,38,451,0],[359,4,451,0,"code"],[359,8,451,0],[360,2,451,0],[361,2,451,0],[361,6,451,0,"_worklet_245709520516_init_data"],[361,37,451,0],[362,4,451,0,"code"],[362,8,451,0],[363,2,451,0],[364,2,457,7],[364,11,457,16,"useAnimatedStyle"],[364,27,457,32,"useAnimatedStyle"],[364,28,458,2,"updater"],[364,35,460,47],[364,37,461,2,"dependencies"],[364,49,461,38],[364,51,462,2,"adapters"],[364,59,462,79],[364,61,466,51],[365,4,466,51],[365,8,463,2,"isAnimatedProps"],[365,23,463,17],[365,26,463,17,"arguments"],[365,35,463,17],[365,36,463,17,"length"],[365,42,463,17],[365,50,463,17,"arguments"],[365,59,463,17],[365,67,463,17,"undefined"],[365,76,463,17],[365,79,463,17,"arguments"],[365,88,463,17],[365,94,463,20],[365,99,463,25],[366,4,467,2],[366,8,467,8,"animatedUpdaterData"],[366,27,467,27],[366,30,467,30],[366,34,467,30,"useRef"],[366,47,467,36],[366,49,467,65],[366,53,467,69],[366,54,467,70],[367,4,468,2],[367,8,468,6,"inputs"],[367,14,468,12],[367,17,468,15,"Object"],[367,23,468,21],[367,24,468,22,"values"],[367,30,468,28],[367,31,468,29,"updater"],[367,38,468,36],[367,39,468,37,"__closure"],[367,48,468,46],[367,52,468,50],[367,53,468,51],[367,54,468,52],[367,55,468,53],[368,4,469,2],[368,8,469,6,"SHOULD_BE_USE_WEB"],[368,25,469,23],[368,27,469,25],[369,6,470,4],[369,10,470,8],[369,11,470,9,"inputs"],[369,17,470,15],[369,18,470,16,"length"],[369,24,470,22],[369,28,470,26,"dependencies"],[369,40,470,38],[369,42,470,40,"length"],[369,48,470,46],[369,50,470,48],[370,8,471,6],[371,8,472,6,"inputs"],[371,14,472,12],[371,17,472,15,"dependencies"],[371,29,472,27],[372,6,473,4],[373,4,485,2],[374,4,486,2],[374,8,486,8,"adaptersArray"],[374,21,486,21],[374,24,486,24,"adapters"],[374,32,486,32],[374,35,487,6,"Array"],[374,40,487,11],[374,41,487,12,"isArray"],[374,48,487,19],[374,49,487,20,"adapters"],[374,57,487,28],[374,58,487,29],[374,61,488,8,"adapters"],[374,69,488,16],[374,72,489,8],[374,73,489,9,"adapters"],[374,81,489,17],[374,82,489,18],[374,85,490,6],[374,87,490,8],[375,4,491,2],[375,8,491,8,"adaptersHash"],[375,20,491,20],[375,23,491,23,"adapters"],[375,31,491,31],[375,34,491,34],[375,38,491,34,"buildWorkletsHash"],[375,62,491,51],[375,64,491,52,"adaptersArray"],[375,77,491,65],[375,78,491,66],[375,81,491,69],[375,85,491,73],[376,4,492,2],[376,8,492,8,"areAnimationsActive"],[376,27,492,27],[376,30,492,30],[376,34,492,30,"useSharedValue"],[376,64,492,44],[376,66,492,54],[376,70,492,58],[376,71,492,59],[377,4,493,2],[377,8,493,8,"jestAnimatedValues"],[377,26,493,26],[377,29,493,29],[377,33,493,29,"useRef"],[377,46,493,35],[377,48,494,4],[377,49,494,5],[377,50,495,2],[377,51,495,3],[379,4,497,2],[380,4,498,2],[380,8,498,6],[380,9,498,7,"dependencies"],[380,21,498,19],[380,23,498,21],[381,6,499,4,"dependencies"],[381,18,499,16],[381,21,499,19],[381,22,499,20],[381,25,499,23,"inputs"],[381,31,499,29],[381,33,499,31,"updater"],[381,40,499,38],[381,41,499,39,"__workletHash"],[381,54,499,52],[381,55,499,53],[382,4,500,2],[382,5,500,3],[382,11,500,9],[383,6,501,4,"dependencies"],[383,18,501,16],[383,19,501,17,"push"],[383,23,501,21],[383,24,501,22,"updater"],[383,31,501,29],[383,32,501,30,"__workletHash"],[383,45,501,43],[383,46,501,44],[384,4,502,2],[385,4,503,2,"adaptersHash"],[385,16,503,14],[385,20,503,18,"dependencies"],[385,32,503,30],[385,33,503,31,"push"],[385,37,503,35],[385,38,503,36,"adaptersHash"],[385,50,503,48],[385,51,503,49],[386,4,505,2],[386,8,505,6],[386,9,505,7,"animatedUpdaterData"],[386,28,505,26],[386,29,505,27,"current"],[386,36,505,34],[386,38,505,36],[387,6,506,4],[387,10,506,10,"initialStyle"],[387,22,506,22],[387,25,506,25],[387,29,506,25,"initialUpdaterRun"],[387,57,506,42],[387,59,506,43,"updater"],[387,66,506,50],[387,67,506,51],[388,6,510,4,"animatedUpdaterData"],[388,25,510,23],[388,26,510,24,"current"],[388,33,510,31],[388,36,510,34],[389,8,511,6,"initial"],[389,15,511,13],[389,17,511,15],[390,10,512,8,"value"],[390,15,512,13],[390,17,512,15,"initialStyle"],[390,29,512,27],[391,10,513,8,"updater"],[392,8,514,6],[392,9,514,7],[393,8,515,6,"remoteState"],[393,19,515,17],[393,21,515,19],[393,25,515,19,"makeShareable"],[393,44,515,32],[393,46,515,33],[394,10,516,8,"last"],[394,14,516,12],[394,16,516,14,"initialStyle"],[394,28,516,26],[395,10,517,8,"animations"],[395,20,517,18],[395,22,517,20],[395,23,517,21],[395,24,517,22],[396,10,518,8,"isAnimationCancelled"],[396,30,518,28],[396,32,518,30],[396,37,518,35],[397,10,519,8,"isAnimationRunning"],[397,28,519,26],[397,30,519,28],[398,8,520,6],[398,9,520,7],[398,10,520,8],[399,8,521,6,"viewDescriptors"],[399,23,521,21],[399,25,521,23],[399,29,521,23,"makeViewDescriptorsSet"],[399,71,521,45],[399,73,521,46],[400,6,522,4],[400,7,522,5],[401,4,523,2],[402,4,525,2],[402,8,525,2,"_animatedUpdaterData$"],[402,29,525,2],[402,32,525,52,"animatedUpdaterData"],[402,51,525,71],[402,52,525,72,"current"],[402,59,525,79],[403,6,525,10,"initial"],[403,13,525,17],[403,16,525,17,"_animatedUpdaterData$"],[403,37,525,17],[403,38,525,10,"initial"],[403,45,525,17],[404,6,525,19,"remoteState"],[404,17,525,30],[404,20,525,30,"_animatedUpdaterData$"],[404,41,525,30],[404,42,525,19,"remoteState"],[404,53,525,30],[405,6,525,32,"viewDescriptors"],[405,21,525,47],[405,24,525,47,"_animatedUpdaterData$"],[405,45,525,47],[405,46,525,32,"viewDescriptors"],[405,61,525,47],[406,4,526,2],[406,8,526,8,"shareableViewDescriptors"],[406,32,526,32],[406,35,526,35,"viewDescriptors"],[406,50,526,50],[406,51,526,51,"shareableViewDescriptors"],[406,75,526,75],[407,4,528,2,"dependencies"],[407,16,528,14],[407,17,528,15,"push"],[407,21,528,19],[407,22,528,20,"shareableViewDescriptors"],[407,46,528,44],[407,47,528,45],[408,4,530,2],[408,8,530,2,"useEffect"],[408,24,530,11],[408,26,530,12],[408,32,530,18],[409,6,531,4],[409,10,531,8,"fun"],[409,13,531,11],[410,6,532,4],[410,10,532,8,"updaterFn"],[410,19,532,17],[410,22,532,20,"updater"],[410,29,532,27],[411,6,533,4],[411,10,533,8,"adapters"],[411,18,533,16],[411,20,533,18],[412,8,534,6,"updaterFn"],[412,17,534,15],[412,20,534,19],[413,10,534,19],[413,14,534,19,"reactNativeReanimated_useAnimatedStyleTs5"],[413,55,534,19],[413,67,534,19,"reactNativeReanimated_useAnimatedStyleTs5"],[413,68,534,19],[413,70,534,25],[414,12,536,8],[414,16,536,14,"newValues"],[414,25,536,23],[414,28,536,26,"updater"],[414,35,536,33],[414,36,536,34],[414,37,536,35],[415,12,537,8,"adaptersArray"],[415,25,537,21],[415,26,537,22,"forEach"],[415,33,537,29],[415,34,537,31,"adapter"],[415,41,537,38],[415,45,537,43],[416,14,538,10,"adapter"],[416,21,538,17],[416,22,538,18,"newValues"],[416,31,538,54],[416,32,538,55],[417,12,539,8],[417,13,539,9],[417,14,539,10],[418,12,540,8],[418,19,540,15,"newValues"],[418,28,540,24],[419,10,541,6],[419,11,541,7],[420,10,541,7,"reactNativeReanimated_useAnimatedStyleTs5"],[420,51,541,7],[420,52,541,7,"__closure"],[420,61,541,7],[421,12,541,7,"updater"],[421,19,541,7],[422,12,541,7,"adaptersArray"],[423,10,541,7],[424,10,541,7,"reactNativeReanimated_useAnimatedStyleTs5"],[424,51,541,7],[424,52,541,7,"__workletHash"],[424,65,541,7],[425,10,541,7,"reactNativeReanimated_useAnimatedStyleTs5"],[425,51,541,7],[425,52,541,7,"__initData"],[425,62,541,7],[425,65,541,7,"_worklet_9173457873940_init_data"],[425,97,541,7],[426,10,541,7],[426,17,541,7,"reactNativeReanimated_useAnimatedStyleTs5"],[426,58,541,7],[427,8,541,7],[427,9,534,19],[427,11,541,38],[428,6,542,4],[429,6,544,4],[429,10,544,8],[429,14,544,8,"isJest"],[429,37,544,14],[429,39,544,15],[429,40,544,16],[429,42,544,18],[430,8,545,6,"fun"],[430,11,545,9],[430,14,545,12],[431,10,545,12],[431,14,545,12,"reactNativeReanimated_useAnimatedStyleTs6"],[431,55,545,12],[431,67,545,12,"reactNativeReanimated_useAnimatedStyleTs6"],[431,68,545,12],[431,70,545,18],[432,12,547,8,"jestStyleUpdater"],[432,28,547,24],[432,29,548,10,"shareableViewDescriptors"],[432,53,548,34],[432,55,549,10,"updater"],[432,62,549,17],[432,64,550,10,"remoteState"],[432,75,550,21],[432,77,551,10,"areAnimationsActive"],[432,96,551,29],[432,98,552,10,"jestAnimatedValues"],[432,116,552,28],[432,118,553,10,"adaptersArray"],[432,131,554,8],[432,132,554,9],[433,10,555,6],[433,11,555,7],[434,10,555,7,"reactNativeReanimated_useAnimatedStyleTs6"],[434,51,555,7],[434,52,555,7,"__closure"],[434,61,555,7],[435,12,555,7,"jestStyleUpdater"],[435,28,555,7],[436,12,555,7,"shareableViewDescriptors"],[436,36,555,7],[437,12,555,7,"updater"],[437,19,555,7],[438,12,555,7,"remoteState"],[438,23,555,7],[439,12,555,7,"areAnimationsActive"],[439,31,555,7],[440,12,555,7,"jestAnimatedValues"],[440,30,555,7],[441,12,555,7,"adaptersArray"],[442,10,555,7],[443,10,555,7,"reactNativeReanimated_useAnimatedStyleTs6"],[443,51,555,7],[443,52,555,7,"__workletHash"],[443,65,555,7],[444,10,555,7,"reactNativeReanimated_useAnimatedStyleTs6"],[444,51,555,7],[444,52,555,7,"__initData"],[444,62,555,7],[444,65,555,7,"_worklet_5314192339077_init_data"],[444,97,555,7],[445,10,555,7],[445,17,555,7,"reactNativeReanimated_useAnimatedStyleTs6"],[445,58,555,7],[446,8,555,7],[446,9,545,12],[446,11,555,7],[447,6,556,4],[447,7,556,5],[447,13,556,11],[448,8,557,6,"fun"],[448,11,557,9],[448,14,557,12],[449,10,557,12],[449,14,557,12,"reactNativeReanimated_useAnimatedStyleTs7"],[449,55,557,12],[449,67,557,12,"reactNativeReanimated_useAnimatedStyleTs7"],[449,68,557,12],[449,70,557,18],[450,12,559,8,"styleUpdater"],[450,24,559,20],[450,25,560,10,"shareableViewDescriptors"],[450,49,560,34],[450,51,561,10,"updaterFn"],[450,60,561,19],[450,62,562,10,"remoteState"],[450,73,562,21],[450,75,563,10,"areAnimationsActive"],[450,94,563,29],[450,96,564,10,"isAnimatedProps"],[450,111,565,8],[450,112,565,9],[451,10,566,6],[451,11,566,7],[452,10,566,7,"reactNativeReanimated_useAnimatedStyleTs7"],[452,51,566,7],[452,52,566,7,"__closure"],[452,61,566,7],[453,12,566,7,"styleUpdater"],[453,24,566,7],[454,12,566,7,"shareableViewDescriptors"],[454,36,566,7],[455,12,566,7,"updaterFn"],[455,21,566,7],[456,12,566,7,"remoteState"],[456,23,566,7],[457,12,566,7,"areAnimationsActive"],[457,31,566,7],[458,12,566,7,"isAnimatedProps"],[459,10,566,7],[460,10,566,7,"reactNativeReanimated_useAnimatedStyleTs7"],[460,51,566,7],[460,52,566,7,"__workletHash"],[460,65,566,7],[461,10,566,7,"reactNativeReanimated_useAnimatedStyleTs7"],[461,51,566,7],[461,52,566,7,"__initData"],[461,62,566,7],[461,65,566,7,"_worklet_245709520516_init_data"],[461,96,566,7],[462,10,566,7],[462,17,566,7,"reactNativeReanimated_useAnimatedStyleTs7"],[462,58,566,7],[463,8,566,7],[463,9,557,12],[463,11,566,7],[464,6,567,4],[465,6,568,4],[465,10,568,10,"mapperId"],[465,18,568,18],[465,21,568,21],[465,25,568,21,"startMapper"],[465,42,568,32],[465,44,568,33,"fun"],[465,47,568,36],[465,49,568,38,"inputs"],[465,55,568,44],[465,56,568,45],[466,6,569,4],[466,13,569,11],[466,19,569,17],[467,8,570,6],[467,12,570,6,"stopMapper"],[467,28,570,16],[467,30,570,17,"mapperId"],[467,38,570,25],[467,39,570,26],[468,6,571,4],[468,7,571,5],[469,6,572,4],[470,4,573,2],[470,5,573,3],[470,7,573,5,"dependencies"],[470,19,573,17],[470,20,573,18],[471,4,575,2],[471,8,575,2,"useEffect"],[471,24,575,11],[471,26,575,12],[471,32,575,18],[472,6,576,4,"areAnimationsActive"],[472,25,576,23],[472,26,576,24,"value"],[472,31,576,29],[472,34,576,32],[472,38,576,36],[473,6,577,4],[473,13,577,11],[473,19,577,17],[474,8,578,6,"areAnimationsActive"],[474,27,578,25],[474,28,578,26,"value"],[474,33,578,31],[474,36,578,34],[474,41,578,39],[475,6,579,4],[475,7,579,5],[476,4,580,2],[476,5,580,3],[476,7,580,5],[476,8,580,6,"areAnimationsActive"],[476,27,580,25],[476,28,580,26],[476,29,580,27],[477,4,582,2,"checkSharedValueUsage"],[477,25,582,23],[477,26,582,24,"initial"],[477,33,582,31],[477,34,582,32,"value"],[477,39,582,37],[477,40,582,38],[478,4,584,2],[478,8,584,8,"animatedStyleHandle"],[478,27,584,27],[478,30,584,30],[478,34,584,30,"useRef"],[478,47,584,36],[478,49,588,4],[478,53,588,8],[478,54,588,9],[479,4,590,2],[479,8,590,6],[479,9,590,7,"animatedStyleHandle"],[479,28,590,26],[479,29,590,27,"current"],[479,36,590,34],[479,38,590,36],[480,6,591,4,"animatedStyleHandle"],[480,25,591,23],[480,26,591,24,"current"],[480,33,591,31],[480,36,591,34],[480,40,591,34,"isJest"],[480,63,591,40],[480,65,591,41],[480,66,591,42],[480,69,592,8],[481,8,592,10,"viewDescriptors"],[481,23,592,25],[482,8,592,27,"initial"],[482,15,592,34],[483,8,592,36,"jestAnimatedValues"],[484,6,592,55],[484,7,592,56],[484,10,593,8],[485,8,593,10,"viewDescriptors"],[485,23,593,25],[486,8,593,27,"initial"],[487,6,593,35],[487,7,593,36],[488,4,594,2],[489,4,596,2],[489,11,596,9,"animatedStyleHandle"],[489,30,596,28],[489,31,596,29,"current"],[489,38,596,36],[490,2,597,0],[491,0,597,1],[491,3]],"functionMap":{"names":["<global>","prepareAnimation","animatedProp.forEach$argument_0","animation.callStart","Object.keys.forEach$argument_0","runAnimations","animation.forEach$argument_0","styleUpdater","frame","updates.propName.forEach$argument_0","jestStyleUpdater","checkSharedValueUsage","useAnimatedStyle","useEffect$argument_0","<anonymous>","adaptersArray.forEach$argument_0","fun"],"mappings":"AAA;AC0D;yBCQ;KDO;0BE2B;KFE;sCGK;OHM;CDG;AKE;sBCgB;KDa;mCD8B;KCa;CLM;AOE;kBCmC;sCC0B;aDI;KDmB;CPqB;AUE;kCNgB;GMK;iCNC;GMS;EFE;oCJU;KIc;GEgB;CVyB;AWG;CX6B;OYqB;YCyE;mBCI;8BCG;SDE;ODE;YGI;OHU;YGE;OHS;WCG;KDE;GDE;YCE;WCE;KDE;GDC;CZiB"}},"type":"js/module"}]}