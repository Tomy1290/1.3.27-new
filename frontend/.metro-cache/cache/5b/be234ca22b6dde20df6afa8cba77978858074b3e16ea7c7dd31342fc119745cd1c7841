{"dependencies":[{"name":"react-native-is-edge-to-edge","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"YCmhlO6SGIbU/kBLtNkISr4D7G0=","exportNames":["*"]}},{"name":"./NativeStatusBarWrapper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":62},"end":{"line":10,"column":34,"index":475}}],"key":"rFcTiPApoBF+KGyASgDQv0sdLQE=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"3suYSPX9nHbHZ1xNTsKXtKj0atE=","exportNames":["*"]}},{"name":"react-native-edge-to-edge","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":15,"index":1014},"end":{"line":21,"column":51,"index":1050}}],"key":"HnlPlLdKaPiC3ogkjCDkaIAup5c=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.StatusBar = StatusBar;\n  exports.setStatusBarBackgroundColor = setStatusBarBackgroundColor;\n  exports.setStatusBarHidden = setStatusBarHidden;\n  exports.setStatusBarNetworkActivityIndicatorVisible = setStatusBarNetworkActivityIndicatorVisible;\n  exports.setStatusBarStyle = setStatusBarStyle;\n  exports.setStatusBarTranslucent = setStatusBarTranslucent;\n  var _reactNativeIsEdgeToEdge = require(_dependencyMap[0]);\n  var _NativeStatusBarWrapper = require(_dependencyMap[1]);\n  var _jsxRuntime = require(_dependencyMap[2]);\n  // This line only imports the type information for TypeScript type checking.  It\n  // doesn't import the actual module in the compiled JavaScript code.  The actual\n  // module is imported conditionally with require() below, in order to avoid\n  // importing the module if edge-to-edge is not enabled (which could throw if\n  // it's not linked).\n  var SystemBars = null;\n  if ((0, _reactNativeIsEdgeToEdge.isEdgeToEdge)()) {\n    SystemBars = require(_dependencyMap[3]).SystemBars;\n  }\n  function StatusBar(props) {\n    if ((0, _reactNativeIsEdgeToEdge.isEdgeToEdge)() && SystemBars) {\n      if (props.backgroundColor) {\n        console.warn('StatusBar backgroundColor is not supported with edge-to-edge enabled. Render a view under the status bar to change its background.');\n      }\n      if (typeof props.translucent !== 'undefined' && Boolean(props.translucent) === false) {\n        console.warn('StatusBar is always translucent when edge-to-edge is enabled. The translucent prop is ignored.');\n      }\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(SystemBars, {\n        style: {\n          statusBar: props.style\n        },\n        hidden: {\n          statusBar: props.hidden\n        }\n      });\n    }\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_NativeStatusBarWrapper.StatusBar, {\n      ...props\n    });\n  }\n  function setStatusBarStyle(style, animated) {\n    if ((0, _reactNativeIsEdgeToEdge.isEdgeToEdge)()) {\n      SystemBars?.setStyle({\n        statusBar: style\n      });\n      return;\n    }\n    return (0, _NativeStatusBarWrapper.setStatusBarStyle)(style, animated);\n  }\n  function setStatusBarHidden(hidden, animation) {\n    if ((0, _reactNativeIsEdgeToEdge.isEdgeToEdge)()) {\n      SystemBars?.setHidden({\n        statusBar: hidden\n      });\n      return;\n    }\n    return (0, _NativeStatusBarWrapper.setStatusBarHidden)(hidden, animation);\n  }\n  function setStatusBarBackgroundColor(backgroundColor, animated) {\n    if ((0, _reactNativeIsEdgeToEdge.isEdgeToEdge)()) {\n      console.warn('`setStatusBarBackgroundColor` is not supported with edge-to-edge enabled.');\n      return;\n    }\n    return (0, _NativeStatusBarWrapper.setStatusBarBackgroundColor)(backgroundColor, animated);\n  }\n  function setStatusBarNetworkActivityIndicatorVisible(visible) {\n    if ((0, _reactNativeIsEdgeToEdge.isEdgeToEdge)()) {\n      console.warn('`setStatusBarNetworkActivityIndicatorVisible` is not supported with edge-to-edge enabled.');\n      return;\n    }\n    return (0, _NativeStatusBarWrapper.setStatusBarNetworkActivityIndicatorVisible)(visible);\n  }\n  function setStatusBarTranslucent(translucent) {\n    if ((0, _reactNativeIsEdgeToEdge.isEdgeToEdge)()) {\n      console.warn('`setStatusBarTranslucent` is not supported with edge-to-edge enabled. In this case the status bar is always translucent.');\n      return;\n    }\n    return (0, _NativeStatusBarWrapper.setStatusBarTranslucent)(translucent);\n  }\n});","lineCount":83,"map":[[11,2,1,0],[11,6,1,0,"_reactNativeIsEdgeToEdge"],[11,30,1,0],[11,33,1,0,"require"],[11,40,1,0],[11,41,1,0,"_dependencyMap"],[11,55,1,0],[12,2,3,0],[12,6,3,0,"_NativeStatusBarWrapper"],[12,29,3,0],[12,32,3,0,"require"],[12,39,3,0],[12,40,3,0,"_dependencyMap"],[12,54,3,0],[13,2,10,34],[13,6,10,34,"_jsxRuntime"],[13,17,10,34],[13,20,10,34,"require"],[13,27,10,34],[13,28,10,34,"_dependencyMap"],[13,42,10,34],[14,2,13,0],[15,2,14,0],[16,2,15,0],[17,2,16,0],[18,2,17,0],[19,2,18,0],[19,6,18,4,"SystemBars"],[19,16,18,76],[19,19,18,79],[19,23,18,83],[20,2,20,0],[20,6,20,4],[20,10,20,4,"isEdgeToEdge"],[20,47,20,16],[20,49,20,17],[20,50,20,18],[20,52,20,20],[21,4,21,2,"SystemBars"],[21,14,21,12],[21,17,21,15,"require"],[21,24,21,22],[21,25,21,22,"_dependencyMap"],[21,39,21,22],[21,42,21,50],[21,43,21,51],[21,44,21,52,"SystemBars"],[21,54,21,62],[22,2,22,0],[23,2,24,7],[23,11,24,16,"StatusBar"],[23,20,24,25,"StatusBar"],[23,21,24,26,"props"],[23,26,24,47],[23,28,24,49],[24,4,25,2],[24,8,25,6],[24,12,25,6,"isEdgeToEdge"],[24,49,25,18],[24,51,25,19],[24,52,25,20],[24,56,25,24,"SystemBars"],[24,66,25,34],[24,68,25,36],[25,6,26,4],[25,10,26,8,"props"],[25,15,26,13],[25,16,26,14,"backgroundColor"],[25,31,26,29],[25,33,26,31],[26,8,27,6,"console"],[26,15,27,13],[26,16,27,14,"warn"],[26,20,27,18],[26,21,28,8],[26,153,29,6],[26,154,29,7],[27,6,30,4],[28,6,32,4],[28,10,32,8],[28,17,32,15,"props"],[28,22,32,20],[28,23,32,21,"translucent"],[28,34,32,32],[28,39,32,37],[28,50,32,48],[28,54,32,52,"Boolean"],[28,61,32,59],[28,62,32,60,"props"],[28,67,32,65],[28,68,32,66,"translucent"],[28,79,32,77],[28,80,32,78],[28,85,32,83],[28,90,32,88],[28,92,32,90],[29,8,33,6,"console"],[29,15,33,13],[29,16,33,14,"warn"],[29,20,33,18],[29,21,34,8],[29,117,35,6],[29,118,35,7],[30,6,36,4],[31,6,38,4],[31,26,38,11],[31,30,38,11,"_jsxRuntime"],[31,41,38,11],[31,42,38,11,"jsx"],[31,45,38,11],[31,47,38,12,"SystemBars"],[31,57,38,22],[32,8,38,23,"style"],[32,13,38,28],[32,15,38,30],[33,10,38,32,"statusBar"],[33,19,38,41],[33,21,38,43,"props"],[33,26,38,48],[33,27,38,49,"style"],[34,8,38,55],[34,9,38,57],[35,8,38,58,"hidden"],[35,14,38,64],[35,16,38,66],[36,10,38,68,"statusBar"],[36,19,38,77],[36,21,38,79,"props"],[36,26,38,84],[36,27,38,85,"hidden"],[37,8,38,92],[38,6,38,94],[38,7,38,96],[38,8,38,97],[39,4,39,2],[40,4,41,2],[40,24,41,9],[40,28,41,9,"_jsxRuntime"],[40,39,41,9],[40,40,41,9,"jsx"],[40,43,41,9],[40,45,41,10,"_NativeStatusBarWrapper"],[40,68,41,10],[40,69,41,10,"StatusBar"],[40,78,41,27],[41,6,41,27],[41,9,41,32,"props"],[42,4,41,37],[42,5,41,40],[42,6,41,41],[43,2,42,0],[44,2,44,7],[44,11,44,16,"setStatusBarStyle"],[44,28,44,33,"setStatusBarStyle"],[44,29,44,34,"style"],[44,34,44,55],[44,36,44,57,"animated"],[44,44,44,75],[44,46,44,77],[45,4,45,2],[45,8,45,6],[45,12,45,6,"isEdgeToEdge"],[45,49,45,18],[45,51,45,19],[45,52,45,20],[45,54,45,22],[46,6,46,4,"SystemBars"],[46,16,46,14],[46,18,46,16,"setStyle"],[46,26,46,24],[46,27,46,25],[47,8,46,27,"statusBar"],[47,17,46,36],[47,19,46,38,"style"],[48,6,46,44],[48,7,46,45],[48,8,46,46],[49,6,47,4],[50,4,48,2],[51,4,50,2],[51,11,50,9],[51,15,50,9,"originalSetStatusBarStyle"],[51,56,50,34],[51,58,50,35,"style"],[51,63,50,40],[51,65,50,42,"animated"],[51,73,50,50],[51,74,50,51],[52,2,51,0],[53,2,53,7],[53,11,53,16,"setStatusBarHidden"],[53,29,53,34,"setStatusBarHidden"],[53,30,53,35,"hidden"],[53,36,53,50],[53,38,53,52,"animation"],[53,47,53,82],[53,49,53,84],[54,4,54,2],[54,8,54,6],[54,12,54,6,"isEdgeToEdge"],[54,49,54,18],[54,51,54,19],[54,52,54,20],[54,54,54,22],[55,6,55,4,"SystemBars"],[55,16,55,14],[55,18,55,16,"setHidden"],[55,27,55,25],[55,28,55,26],[56,8,55,28,"statusBar"],[56,17,55,37],[56,19,55,39,"hidden"],[57,6,55,46],[57,7,55,47],[57,8,55,48],[58,6,56,4],[59,4,57,2],[60,4,59,2],[60,11,59,9],[60,15,59,9,"originalSetStatusBarHidden"],[60,57,59,35],[60,59,59,36,"hidden"],[60,65,59,42],[60,67,59,44,"animation"],[60,76,59,53],[60,77,59,54],[61,2,60,0],[62,2,62,7],[62,11,62,16,"setStatusBarBackgroundColor"],[62,38,62,43,"setStatusBarBackgroundColor"],[62,39,62,44,"backgroundColor"],[62,54,62,67],[62,56,62,69,"animated"],[62,64,62,87],[62,66,62,89],[63,4,63,2],[63,8,63,6],[63,12,63,6,"isEdgeToEdge"],[63,49,63,18],[63,51,63,19],[63,52,63,20],[63,54,63,22],[64,6,64,4,"console"],[64,13,64,11],[64,14,64,12,"warn"],[64,18,64,16],[64,19,64,17],[64,94,64,92],[64,95,64,93],[65,6,65,4],[66,4,66,2],[67,4,68,2],[67,11,68,9],[67,15,68,9,"originalSetStatusBarBackgroundColor"],[67,66,68,44],[67,68,68,45,"backgroundColor"],[67,83,68,60],[67,85,68,62,"animated"],[67,93,68,70],[67,94,68,71],[68,2,69,0],[69,2,71,7],[69,11,71,16,"setStatusBarNetworkActivityIndicatorVisible"],[69,54,71,59,"setStatusBarNetworkActivityIndicatorVisible"],[69,55,71,60,"visible"],[69,62,71,76],[69,64,71,78],[70,4,72,2],[70,8,72,6],[70,12,72,6,"isEdgeToEdge"],[70,49,72,18],[70,51,72,19],[70,52,72,20],[70,54,72,22],[71,6,73,4,"console"],[71,13,73,11],[71,14,73,12,"warn"],[71,18,73,16],[71,19,74,6],[71,110,75,4],[71,111,75,5],[72,6,76,4],[73,4,77,2],[74,4,79,2],[74,11,79,9],[74,15,79,9,"originalSetStatusBarNetworkActivityIndicatorVisible"],[74,82,79,60],[74,84,79,61,"visible"],[74,91,79,68],[74,92,79,69],[75,2,80,0],[76,2,82,7],[76,11,82,16,"setStatusBarTranslucent"],[76,34,82,39,"setStatusBarTranslucent"],[76,35,82,40,"translucent"],[76,46,82,60],[76,48,82,62],[77,4,83,2],[77,8,83,6],[77,12,83,6,"isEdgeToEdge"],[77,49,83,18],[77,51,83,19],[77,52,83,20],[77,54,83,22],[78,6,84,4,"console"],[78,13,84,11],[78,14,84,12,"warn"],[78,18,84,16],[78,19,85,6],[78,141,86,4],[78,142,86,5],[79,6,87,4],[80,4,88,2],[81,4,90,2],[81,11,90,9],[81,15,90,9,"originalSetStatusBarTranslucent"],[81,62,90,40],[81,64,90,41,"translucent"],[81,75,90,52],[81,76,90,53],[82,2,91,0],[83,0,91,1],[83,3]],"functionMap":{"names":["<global>","StatusBar","setStatusBarStyle","setStatusBarHidden","setStatusBarBackgroundColor","setStatusBarNetworkActivityIndicatorVisible","setStatusBarTranslucent"],"mappings":"AAA;OCuB;CDkB;OEE;CFO;OGE;CHO;OIE;CJO;OKE;CLS;OME;CNS"}},"type":"js/module"}]}