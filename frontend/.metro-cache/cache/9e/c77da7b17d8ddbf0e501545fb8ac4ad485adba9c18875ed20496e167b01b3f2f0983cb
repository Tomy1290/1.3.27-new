{"dependencies":[{"name":"../../lib/extract/extractTransform","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":24,"index":322},"end":{"line":11,"column":69,"index":367}}],"key":"Y+Mp5wci9OfH50nUOb5zw1ByHOY=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.camelCaseToDashed = void 0;\n  exports.encodeSvg = encodeSvg;\n  exports.hasTouchableProperty = exports.getBoundingClientRect = void 0;\n  exports.parseTransformProp = parseTransformProp;\n  exports.remeasure = remeasure;\n  var _extractTransform = require(_dependencyMap[0], \"../../lib/extract/extractTransform\");\n  const hasTouchableProperty = props => props.onPress || props.onPressIn || props.onPressOut || props.onLongPress;\n  exports.hasTouchableProperty = hasTouchableProperty;\n  const camelCaseToDashed = camelCase => {\n    return camelCase.replace(/[A-Z]/g, m => '-' + m.toLowerCase());\n  };\n  exports.camelCaseToDashed = camelCaseToDashed;\n  function stringifyTransformProps(transformProps) {\n    const transformArray = [];\n    if (transformProps.translate != null) {\n      transformArray.push(`translate(${transformProps.translate})`);\n    }\n    if (transformProps.translateX != null || transformProps.translateY != null) {\n      transformArray.push(`translate(${transformProps.translateX || 0}, ${transformProps.translateY || 0})`);\n    }\n    if (transformProps.scale != null) {\n      transformArray.push(`scale(${transformProps.scale})`);\n    }\n    if (transformProps.scaleX != null || transformProps.scaleY != null) {\n      transformArray.push(`scale(${transformProps.scaleX || 1}, ${transformProps.scaleY || 1})`);\n    }\n    // rotation maps to rotate, not to collide with the text rotate attribute (which acts per glyph rather than block)\n    if (transformProps.rotation != null) {\n      transformArray.push(`rotate(${transformProps.rotation})`);\n    }\n    if (transformProps.skewX != null) {\n      transformArray.push(`skewX(${transformProps.skewX})`);\n    }\n    if (transformProps.skewY != null) {\n      transformArray.push(`skewY(${transformProps.skewY})`);\n    }\n    return transformArray;\n  }\n  function parseTransformProp(transform, props) {\n    const transformArray = [];\n    props && transformArray.push(...stringifyTransformProps(props));\n    if (Array.isArray(transform)) {\n      if (typeof transform[0] === 'number') {\n        transformArray.push(`matrix(${transform.join(' ')})`);\n      } else {\n        const stringifiedProps = (0, _extractTransform.transformsArrayToProps)(\n        // @ts-expect-error FIXME\n        transform);\n        transformArray.push(...stringifyTransformProps(stringifiedProps));\n      }\n    } else if (typeof transform === 'string') {\n      transformArray.push(transform);\n    }\n    return transformArray.length ? transformArray.join(' ') : undefined;\n  }\n  const getBoundingClientRect = node => {\n    if (node) {\n      const isElement = node.nodeType === 1; /* Node.ELEMENT_NODE */\n      if (isElement && typeof node.getBoundingClientRect === 'function') {\n        return node.getBoundingClientRect();\n      }\n    }\n    throw new Error('Can not get boundingClientRect of ' + node || 'undefined');\n  };\n  exports.getBoundingClientRect = getBoundingClientRect;\n  const measureLayout = (node, callback) => {\n    const relativeNode = node === null || node === void 0 ? void 0 : node.parentNode;\n    if (relativeNode) {\n      setTimeout(() => {\n        // @ts-expect-error TODO: handle it better\n        const relativeRect = getBoundingClientRect(relativeNode);\n        const {\n          height,\n          left,\n          top,\n          width\n        } = getBoundingClientRect(node);\n        const x = left - relativeRect.left;\n        const y = top - relativeRect.top;\n        callback(x, y, width, height, left, top);\n      }, 0);\n    }\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function remeasure() {\n    const tag = this.state.touchable.responderID;\n    if (tag === null) {\n      return;\n    }\n    measureLayout(tag, this._handleQueryLayout);\n  }\n\n  /* Taken from here: https://gist.github.com/jennyknuth/222825e315d45a738ed9d6e04c7a88d0 */\n  function encodeSvg(svgString) {\n    return svgString.replace('<svg', ~svgString.indexOf('xmlns') ? '<svg' : '<svg xmlns=\"http://www.w3.org/2000/svg\"').replace(/\"/g, \"'\").replace(/%/g, '%25').replace(/#/g, '%23').replace(/{/g, '%7B').replace(/}/g, '%7D').replace(/</g, '%3C').replace(/>/g, '%3E').replace(/\\s+/g, ' ');\n  }\n});","lineCount":104,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"camelCaseToDashed"],[7,27,6,25],[7,30,6,28],[7,35,6,33],[7,36,6,34],[8,2,7,0,"exports"],[8,9,7,7],[8,10,7,8,"encodeSvg"],[8,19,7,17],[8,22,7,20,"encodeSvg"],[8,31,7,29],[9,2,8,0,"exports"],[9,9,8,7],[9,10,8,8,"hasTouchableProperty"],[9,30,8,28],[9,33,8,31,"exports"],[9,40,8,38],[9,41,8,39,"getBoundingClientRect"],[9,62,8,60],[9,65,8,63],[9,70,8,68],[9,71,8,69],[10,2,9,0,"exports"],[10,9,9,7],[10,10,9,8,"parseTransformProp"],[10,28,9,26],[10,31,9,29,"parseTransformProp"],[10,49,9,47],[11,2,10,0,"exports"],[11,9,10,7],[11,10,10,8,"remeasure"],[11,19,10,17],[11,22,10,20,"remeasure"],[11,31,10,29],[12,2,11,0],[12,6,11,4,"_extractTransform"],[12,23,11,21],[12,26,11,24,"require"],[12,33,11,31],[12,34,11,31,"_dependencyMap"],[12,48,11,31],[12,89,11,68],[12,90,11,69],[13,2,12,0],[13,8,12,6,"hasTouchableProperty"],[13,28,12,26],[13,31,12,29,"props"],[13,36,12,34],[13,40,12,38,"props"],[13,45,12,43],[13,46,12,44,"onPress"],[13,53,12,51],[13,57,12,55,"props"],[13,62,12,60],[13,63,12,61,"onPressIn"],[13,72,12,70],[13,76,12,74,"props"],[13,81,12,79],[13,82,12,80,"onPressOut"],[13,92,12,90],[13,96,12,94,"props"],[13,101,12,99],[13,102,12,100,"onLongPress"],[13,113,12,111],[14,2,13,0,"exports"],[14,9,13,7],[14,10,13,8,"hasTouchableProperty"],[14,30,13,28],[14,33,13,31,"hasTouchableProperty"],[14,53,13,51],[15,2,14,0],[15,8,14,6,"camelCaseToDashed"],[15,25,14,23],[15,28,14,26,"camelCase"],[15,37,14,35],[15,41,14,39],[16,4,15,2],[16,11,15,9,"camelCase"],[16,20,15,18],[16,21,15,19,"replace"],[16,28,15,26],[16,29,15,27],[16,37,15,35],[16,39,15,37,"m"],[16,40,15,38],[16,44,15,42],[16,47,15,45],[16,50,15,48,"m"],[16,51,15,49],[16,52,15,50,"toLowerCase"],[16,63,15,61],[16,64,15,62],[16,65,15,63],[16,66,15,64],[17,2,16,0],[17,3,16,1],[18,2,17,0,"exports"],[18,9,17,7],[18,10,17,8,"camelCaseToDashed"],[18,27,17,25],[18,30,17,28,"camelCaseToDashed"],[18,47,17,45],[19,2,18,0],[19,11,18,9,"stringifyTransformProps"],[19,34,18,32,"stringifyTransformProps"],[19,35,18,33,"transformProps"],[19,49,18,47],[19,51,18,49],[20,4,19,2],[20,10,19,8,"transformArray"],[20,24,19,22],[20,27,19,25],[20,29,19,27],[21,4,20,2],[21,8,20,6,"transformProps"],[21,22,20,20],[21,23,20,21,"translate"],[21,32,20,30],[21,36,20,34],[21,40,20,38],[21,42,20,40],[22,6,21,4,"transformArray"],[22,20,21,18],[22,21,21,19,"push"],[22,25,21,23],[22,26,21,24],[22,39,21,37,"transformProps"],[22,53,21,51],[22,54,21,52,"translate"],[22,63,21,61],[22,66,21,64],[22,67,21,65],[23,4,22,2],[24,4,23,2],[24,8,23,6,"transformProps"],[24,22,23,20],[24,23,23,21,"translateX"],[24,33,23,31],[24,37,23,35],[24,41,23,39],[24,45,23,43,"transformProps"],[24,59,23,57],[24,60,23,58,"translateY"],[24,70,23,68],[24,74,23,72],[24,78,23,76],[24,80,23,78],[25,6,24,4,"transformArray"],[25,20,24,18],[25,21,24,19,"push"],[25,25,24,23],[25,26,24,24],[25,39,24,37,"transformProps"],[25,53,24,51],[25,54,24,52,"translateX"],[25,64,24,62],[25,68,24,66],[25,69,24,67],[25,74,24,72,"transformProps"],[25,88,24,86],[25,89,24,87,"translateY"],[25,99,24,97],[25,103,24,101],[25,104,24,102],[25,107,24,105],[25,108,24,106],[26,4,25,2],[27,4,26,2],[27,8,26,6,"transformProps"],[27,22,26,20],[27,23,26,21,"scale"],[27,28,26,26],[27,32,26,30],[27,36,26,34],[27,38,26,36],[28,6,27,4,"transformArray"],[28,20,27,18],[28,21,27,19,"push"],[28,25,27,23],[28,26,27,24],[28,35,27,33,"transformProps"],[28,49,27,47],[28,50,27,48,"scale"],[28,55,27,53],[28,58,27,56],[28,59,27,57],[29,4,28,2],[30,4,29,2],[30,8,29,6,"transformProps"],[30,22,29,20],[30,23,29,21,"scaleX"],[30,29,29,27],[30,33,29,31],[30,37,29,35],[30,41,29,39,"transformProps"],[30,55,29,53],[30,56,29,54,"scaleY"],[30,62,29,60],[30,66,29,64],[30,70,29,68],[30,72,29,70],[31,6,30,4,"transformArray"],[31,20,30,18],[31,21,30,19,"push"],[31,25,30,23],[31,26,30,24],[31,35,30,33,"transformProps"],[31,49,30,47],[31,50,30,48,"scaleX"],[31,56,30,54],[31,60,30,58],[31,61,30,59],[31,66,30,64,"transformProps"],[31,80,30,78],[31,81,30,79,"scaleY"],[31,87,30,85],[31,91,30,89],[31,92,30,90],[31,95,30,93],[31,96,30,94],[32,4,31,2],[33,4,32,2],[34,4,33,2],[34,8,33,6,"transformProps"],[34,22,33,20],[34,23,33,21,"rotation"],[34,31,33,29],[34,35,33,33],[34,39,33,37],[34,41,33,39],[35,6,34,4,"transformArray"],[35,20,34,18],[35,21,34,19,"push"],[35,25,34,23],[35,26,34,24],[35,36,34,34,"transformProps"],[35,50,34,48],[35,51,34,49,"rotation"],[35,59,34,57],[35,62,34,60],[35,63,34,61],[36,4,35,2],[37,4,36,2],[37,8,36,6,"transformProps"],[37,22,36,20],[37,23,36,21,"skewX"],[37,28,36,26],[37,32,36,30],[37,36,36,34],[37,38,36,36],[38,6,37,4,"transformArray"],[38,20,37,18],[38,21,37,19,"push"],[38,25,37,23],[38,26,37,24],[38,35,37,33,"transformProps"],[38,49,37,47],[38,50,37,48,"skewX"],[38,55,37,53],[38,58,37,56],[38,59,37,57],[39,4,38,2],[40,4,39,2],[40,8,39,6,"transformProps"],[40,22,39,20],[40,23,39,21,"skewY"],[40,28,39,26],[40,32,39,30],[40,36,39,34],[40,38,39,36],[41,6,40,4,"transformArray"],[41,20,40,18],[41,21,40,19,"push"],[41,25,40,23],[41,26,40,24],[41,35,40,33,"transformProps"],[41,49,40,47],[41,50,40,48,"skewY"],[41,55,40,53],[41,58,40,56],[41,59,40,57],[42,4,41,2],[43,4,42,2],[43,11,42,9,"transformArray"],[43,25,42,23],[44,2,43,0],[45,2,44,0],[45,11,44,9,"parseTransformProp"],[45,29,44,27,"parseTransformProp"],[45,30,44,28,"transform"],[45,39,44,37],[45,41,44,39,"props"],[45,46,44,44],[45,48,44,46],[46,4,45,2],[46,10,45,8,"transformArray"],[46,24,45,22],[46,27,45,25],[46,29,45,27],[47,4,46,2,"props"],[47,9,46,7],[47,13,46,11,"transformArray"],[47,27,46,25],[47,28,46,26,"push"],[47,32,46,30],[47,33,46,31],[47,36,46,34,"stringifyTransformProps"],[47,59,46,57],[47,60,46,58,"props"],[47,65,46,63],[47,66,46,64],[47,67,46,65],[48,4,47,2],[48,8,47,6,"Array"],[48,13,47,11],[48,14,47,12,"isArray"],[48,21,47,19],[48,22,47,20,"transform"],[48,31,47,29],[48,32,47,30],[48,34,47,32],[49,6,48,4],[49,10,48,8],[49,17,48,15,"transform"],[49,26,48,24],[49,27,48,25],[49,28,48,26],[49,29,48,27],[49,34,48,32],[49,42,48,40],[49,44,48,42],[50,8,49,6,"transformArray"],[50,22,49,20],[50,23,49,21,"push"],[50,27,49,25],[50,28,49,26],[50,38,49,36,"transform"],[50,47,49,45],[50,48,49,46,"join"],[50,52,49,50],[50,53,49,51],[50,56,49,54],[50,57,49,55],[50,60,49,58],[50,61,49,59],[51,6,50,4],[51,7,50,5],[51,13,50,11],[52,8,51,6],[52,14,51,12,"stringifiedProps"],[52,30,51,28],[52,33,51,31],[52,34,51,32],[52,35,51,33],[52,37,51,35,"_extractTransform"],[52,54,51,52],[52,55,51,53,"transformsArrayToProps"],[52,77,51,75],[53,8,52,6],[54,8,53,6,"transform"],[54,17,53,15],[54,18,53,16],[55,8,54,6,"transformArray"],[55,22,54,20],[55,23,54,21,"push"],[55,27,54,25],[55,28,54,26],[55,31,54,29,"stringifyTransformProps"],[55,54,54,52],[55,55,54,53,"stringifiedProps"],[55,71,54,69],[55,72,54,70],[55,73,54,71],[56,6,55,4],[57,4,56,2],[57,5,56,3],[57,11,56,9],[57,15,56,13],[57,22,56,20,"transform"],[57,31,56,29],[57,36,56,34],[57,44,56,42],[57,46,56,44],[58,6,57,4,"transformArray"],[58,20,57,18],[58,21,57,19,"push"],[58,25,57,23],[58,26,57,24,"transform"],[58,35,57,33],[58,36,57,34],[59,4,58,2],[60,4,59,2],[60,11,59,9,"transformArray"],[60,25,59,23],[60,26,59,24,"length"],[60,32,59,30],[60,35,59,33,"transformArray"],[60,49,59,47],[60,50,59,48,"join"],[60,54,59,52],[60,55,59,53],[60,58,59,56],[60,59,59,57],[60,62,59,60,"undefined"],[60,71,59,69],[61,2,60,0],[62,2,61,0],[62,8,61,6,"getBoundingClientRect"],[62,29,61,27],[62,32,61,30,"node"],[62,36,61,34],[62,40,61,38],[63,4,62,2],[63,8,62,6,"node"],[63,12,62,10],[63,14,62,12],[64,6,63,4],[64,12,63,10,"isElement"],[64,21,63,19],[64,24,63,22,"node"],[64,28,63,26],[64,29,63,27,"nodeType"],[64,37,63,35],[64,42,63,40],[64,43,63,41],[64,44,63,42],[64,45,63,43],[65,6,64,4],[65,10,64,8,"isElement"],[65,19,64,17],[65,23,64,21],[65,30,64,28,"node"],[65,34,64,32],[65,35,64,33,"getBoundingClientRect"],[65,56,64,54],[65,61,64,59],[65,71,64,69],[65,73,64,71],[66,8,65,6],[66,15,65,13,"node"],[66,19,65,17],[66,20,65,18,"getBoundingClientRect"],[66,41,65,39],[66,42,65,40],[66,43,65,41],[67,6,66,4],[68,4,67,2],[69,4,68,2],[69,10,68,8],[69,14,68,12,"Error"],[69,19,68,17],[69,20,68,18],[69,56,68,54],[69,59,68,57,"node"],[69,63,68,61],[69,67,68,65],[69,78,68,76],[69,79,68,77],[70,2,69,0],[70,3,69,1],[71,2,70,0,"exports"],[71,9,70,7],[71,10,70,8,"getBoundingClientRect"],[71,31,70,29],[71,34,70,32,"getBoundingClientRect"],[71,55,70,53],[72,2,71,0],[72,8,71,6,"measureLayout"],[72,21,71,19],[72,24,71,22,"measureLayout"],[72,25,71,23,"node"],[72,29,71,27],[72,31,71,29,"callback"],[72,39,71,37],[72,44,71,42],[73,4,72,2],[73,10,72,8,"relativeNode"],[73,22,72,20],[73,25,72,23,"node"],[73,29,72,27],[73,34,72,32],[73,38,72,36],[73,42,72,40,"node"],[73,46,72,44],[73,51,72,49],[73,56,72,54],[73,57,72,55],[73,60,72,58],[73,65,72,63],[73,66,72,64],[73,69,72,67,"node"],[73,73,72,71],[73,74,72,72,"parentNode"],[73,84,72,82],[74,4,73,2],[74,8,73,6,"relativeNode"],[74,20,73,18],[74,22,73,20],[75,6,74,4,"setTimeout"],[75,16,74,14],[75,17,74,15],[75,23,74,21],[76,8,75,6],[77,8,76,6],[77,14,76,12,"relativeRect"],[77,26,76,24],[77,29,76,27,"getBoundingClientRect"],[77,50,76,48],[77,51,76,49,"relativeNode"],[77,63,76,61],[77,64,76,62],[78,8,77,6],[78,14,77,12],[79,10,78,8,"height"],[79,16,78,14],[80,10,79,8,"left"],[80,14,79,12],[81,10,80,8,"top"],[81,13,80,11],[82,10,81,8,"width"],[83,8,82,6],[83,9,82,7],[83,12,82,10,"getBoundingClientRect"],[83,33,82,31],[83,34,82,32,"node"],[83,38,82,36],[83,39,82,37],[84,8,83,6],[84,14,83,12,"x"],[84,15,83,13],[84,18,83,16,"left"],[84,22,83,20],[84,25,83,23,"relativeRect"],[84,37,83,35],[84,38,83,36,"left"],[84,42,83,40],[85,8,84,6],[85,14,84,12,"y"],[85,15,84,13],[85,18,84,16,"top"],[85,21,84,19],[85,24,84,22,"relativeRect"],[85,36,84,34],[85,37,84,35,"top"],[85,40,84,38],[86,8,85,6,"callback"],[86,16,85,14],[86,17,85,15,"x"],[86,18,85,16],[86,20,85,18,"y"],[86,21,85,19],[86,23,85,21,"width"],[86,28,85,26],[86,30,85,28,"height"],[86,36,85,34],[86,38,85,36,"left"],[86,42,85,40],[86,44,85,42,"top"],[86,47,85,45],[86,48,85,46],[87,6,86,4],[87,7,86,5],[87,9,86,7],[87,10,86,8],[87,11,86,9],[88,4,87,2],[89,2,88,0],[89,3,88,1],[91,2,90,0],[92,2,91,0],[92,11,91,9,"remeasure"],[92,20,91,18,"remeasure"],[92,21,91,18],[92,23,91,21],[93,4,92,2],[93,10,92,8,"tag"],[93,13,92,11],[93,16,92,14],[93,20,92,18],[93,21,92,19,"state"],[93,26,92,24],[93,27,92,25,"touchable"],[93,36,92,34],[93,37,92,35,"responderID"],[93,48,92,46],[94,4,93,2],[94,8,93,6,"tag"],[94,11,93,9],[94,16,93,14],[94,20,93,18],[94,22,93,20],[95,6,94,4],[96,4,95,2],[97,4,96,2,"measureLayout"],[97,17,96,15],[97,18,96,16,"tag"],[97,21,96,19],[97,23,96,21],[97,27,96,25],[97,28,96,26,"_handleQueryLayout"],[97,46,96,44],[97,47,96,45],[98,2,97,0],[100,2,99,0],[101,2,100,0],[101,11,100,9,"encodeSvg"],[101,20,100,18,"encodeSvg"],[101,21,100,19,"svgString"],[101,30,100,28],[101,32,100,30],[102,4,101,2],[102,11,101,9,"svgString"],[102,20,101,18],[102,21,101,19,"replace"],[102,28,101,26],[102,29,101,27],[102,35,101,33],[102,37,101,35],[102,38,101,36,"svgString"],[102,47,101,45],[102,48,101,46,"indexOf"],[102,55,101,53],[102,56,101,54],[102,63,101,61],[102,64,101,62],[102,67,101,65],[102,73,101,71],[102,76,101,74],[102,117,101,115],[102,118,101,116],[102,119,101,117,"replace"],[102,126,101,124],[102,127,101,125],[102,131,101,129],[102,133,101,131],[102,136,101,134],[102,137,101,135],[102,138,101,136,"replace"],[102,145,101,143],[102,146,101,144],[102,150,101,148],[102,152,101,150],[102,157,101,155],[102,158,101,156],[102,159,101,157,"replace"],[102,166,101,164],[102,167,101,165],[102,171,101,169],[102,173,101,171],[102,178,101,176],[102,179,101,177],[102,180,101,178,"replace"],[102,187,101,185],[102,188,101,186],[102,192,101,190],[102,194,101,192],[102,199,101,197],[102,200,101,198],[102,201,101,199,"replace"],[102,208,101,206],[102,209,101,207],[102,213,101,211],[102,215,101,213],[102,220,101,218],[102,221,101,219],[102,222,101,220,"replace"],[102,229,101,227],[102,230,101,228],[102,234,101,232],[102,236,101,234],[102,241,101,239],[102,242,101,240],[102,243,101,241,"replace"],[102,250,101,248],[102,251,101,249],[102,255,101,253],[102,257,101,255],[102,262,101,260],[102,263,101,261],[102,264,101,262,"replace"],[102,271,101,269],[102,272,101,270],[102,278,101,276],[102,280,101,278],[102,283,101,281],[102,284,101,282],[103,2,102,0],[104,0,102,1],[104,3]],"functionMap":{"names":["<global>","hasTouchableProperty","camelCaseToDashed","camelCase.replace$argument_1","stringifyTransformProps","parseTransformProp","getBoundingClientRect","measureLayout","setTimeout$argument_0","remeasure","encodeSvg"],"mappings":"AAA;6BCW,kFD;0BEE;qCCC,0BD;CFC;AIE;CJyB;AKC;CLgB;8BMC;CNQ;sBOE;eCG;KDY;CPE;ASG;CTM;AUG;CVE"}},"type":"js/module"}]}