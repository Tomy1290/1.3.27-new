{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"]}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":39,"index":39}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"]}},{"name":"./localChat","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":40},"end":{"line":2,"column":56,"index":96}}],"key":"aXvKl/lmPsjnZryl5znHfKnmrlU=","exportNames":["*"]}},{"name":"./summary","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":97},"end":{"line":3,"column":45,"index":142}}],"key":"3AleHoplC8CAd676xho2Y/OsXUw=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.callCloudLLM = callCloudLLM;\n  exports.getAIStatus = getAIStatus;\n  exports.hybridGreeting = hybridGreeting;\n  exports.hybridReply = hybridReply;\n  exports.testCloudConnection = testCloudConnection;\n  var _env2 = require(_dependencyMap[1], \"expo/virtual/env\");\n  var _expoConstants = _interopRequireDefault(require(_dependencyMap[2], \"expo-constants\"));\n  var _localChat = require(_dependencyMap[3], \"./localChat\");\n  var _summary = require(_dependencyMap[4], \"./summary\");\n  // Direct OpenAI API integration using Emergent LLM Key\n  const getEmergentLLMKey = () => {\n    // Try multiple ways to get the key\n    return _expoConstants.default.expoConfig?.extra?.EXPO_PUBLIC_EMERGENT_LLM_KEY || _expoConstants.default.manifest?.extra?.EXPO_PUBLIC_EMERGENT_LLM_KEY || (typeof process !== 'undefined' ? _env2.env.EXPO_PUBLIC_EMERGENT_LLM_KEY : null) || 'sk-emergent-e34Af18EdBf12063f7'; // Fallback\n  };\n\n  /**\n   * Test if Direct LLM is reachable by doing a simple health check\n   */\n  async function testCloudConnection() {\n    const EMERGENT_LLM_KEY = getEmergentLLMKey();\n    if (!EMERGENT_LLM_KEY) {\n      console.warn('No Emergent LLM Key available');\n      return false;\n    }\n    try {\n      // Simple test request to OpenAI API\n      const response = await fetch('https://api.openai.com/v1/models', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${EMERGENT_LLM_KEY}`,\n          'Content-Type': 'application/json'\n        },\n        signal: AbortSignal.timeout(3000) // 3 second timeout\n      });\n      return response.ok;\n    } catch (error) {\n      console.warn('Direct LLM connection test failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Call OpenAI API directly using Emergent LLM Key\n   */\n  async function callCloudLLM(request) {\n    const EMERGENT_LLM_KEY = getEmergentLLMKey();\n    if (!EMERGENT_LLM_KEY) {\n      throw new Error('No Emergent LLM Key available');\n    }\n    try {\n      const systemPrompt = request.language === 'de' ? 'Du bist Gugi, ein freundlicher Gesundheitscoach. Antworte kurz und hilfsreich auf Deutsch.' : request.language === 'pl' ? 'JesteÅ› Gugi, przyjaznym trenerem zdrowia. Odpowiadaj krÃ³tko i pomocnie po polsku.' : 'You are Gugi, a friendly health coach. Respond briefly and helpfully in English.';\n      const messages = [{\n        role: 'system',\n        content: systemPrompt\n      }];\n      if (request.mode === 'greeting') {\n        // Create greeting based on summary\n        const summaryText = request.summary ? `User data: ${JSON.stringify(request.summary, null, 2)}` : 'No user data available';\n        messages.push({\n          role: 'user',\n          content: request.language === 'de' ? `BegrÃ¼ÃŸe mich freundlich als Gesundheitscoach. Hier sind meine Daten: ${summaryText}` : request.language === 'pl' ? `Przywitaj mnie przyjaÅºnie jako trener zdrowia. Oto moje dane: ${summaryText}` : `Greet me friendly as a health coach. Here's my data: ${summaryText}`\n        });\n      } else {\n        // Add chat history and current message\n        if (request.messages) {\n          messages.push(...request.messages);\n        }\n      }\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${EMERGENT_LLM_KEY}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          model: request.model || 'gpt-4o-mini',\n          messages,\n          max_tokens: 280,\n          temperature: 0.4\n        }),\n        signal: AbortSignal.timeout(8000) // 8 second timeout\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`OpenAI API responded with status ${response.status}: ${errorText}`);\n      }\n      const data = await response.json();\n      const content = data.choices?.[0]?.message?.content || '';\n      if (!content.trim()) {\n        throw new Error('Empty response from OpenAI API');\n      }\n      return content.trim();\n    } catch (error) {\n      console.warn('Direct LLM call failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Hybrid greeting - tries Cloud LLM first, falls back to local\n   */\n  async function hybridGreeting(state) {\n    try {\n      // Test connection first\n      const isConnected = await testCloudConnection();\n      if (!isConnected) {\n        throw new Error('Cloud LLM not reachable');\n      }\n\n      // Prepare summary for Cloud LLM\n      const summary = (0, _summary.computeAISummary)(state);\n      const request = {\n        mode: 'greeting',\n        language: state.language || 'de',\n        model: 'gpt-4o-mini',\n        summary\n      };\n      const result = await callCloudLLM(request);\n      if (result && result.trim()) {\n        console.log('âœ… Cloud LLM greeting successful');\n        return result.trim();\n      }\n      throw new Error('Empty response from Cloud LLM');\n    } catch (error) {\n      console.log('ðŸ”„ Cloud LLM failed, falling back to local greeting:', error);\n      return await (0, _localChat.localGreeting)(state);\n    }\n  }\n\n  /**\n   * Hybrid reply - tries Cloud LLM first, falls back to local\n   */\n  async function hybridReply(state, userMessage) {\n    try {\n      // Test connection first\n      const isConnected = await testCloudConnection();\n      if (!isConnected) {\n        throw new Error('Cloud LLM not reachable');\n      }\n\n      // Prepare summary for Cloud LLM\n      const summary = (0, _summary.computeAISummary)(state);\n\n      // Get recent chat history for context\n      const recentChat = (state.chat || []).slice(-6).map(msg => ({\n        role: msg.sender === 'user' ? 'user' : 'assistant',\n        content: msg.text\n      }));\n\n      // Add current user message\n      recentChat.push({\n        role: 'user',\n        content: userMessage\n      });\n      const request = {\n        mode: 'chat',\n        language: state.language || 'de',\n        model: 'gpt-4o-mini',\n        summary,\n        messages: recentChat\n      };\n      const result = await callCloudLLM(request);\n      if (result && result.trim()) {\n        console.log('âœ… Cloud LLM reply successful');\n        return result.trim();\n      }\n      throw new Error('Empty response from Cloud LLM');\n    } catch (error) {\n      console.log('ðŸ”„ Cloud LLM failed, falling back to local reply:', error);\n      return await (0, _localChat.localReply)(state, userMessage);\n    }\n  }\n\n  /**\n   * Get current AI status for UI indication\n   */\n  async function getAIStatus() {\n    try {\n      const isConnected = await testCloudConnection();\n      return isConnected ? 'cloud' : 'local';\n    } catch (error) {\n      return 'local';\n    }\n  }\n});","lineCount":190,"map":[[12,2,1,0],[12,6,1,0,"_expoConstants"],[12,20,1,0],[12,23,1,0,"_interopRequireDefault"],[12,45,1,0],[12,46,1,0,"require"],[12,53,1,0],[12,54,1,0,"_dependencyMap"],[12,68,1,0],[13,2,2,0],[13,6,2,0,"_localChat"],[13,16,2,0],[13,19,2,0,"require"],[13,26,2,0],[13,27,2,0,"_dependencyMap"],[13,41,2,0],[14,2,3,0],[14,6,3,0,"_summary"],[14,14,3,0],[14,17,3,0,"require"],[14,24,3,0],[14,25,3,0,"_dependencyMap"],[14,39,3,0],[15,2,17,0],[16,2,18,0],[16,8,18,6,"getEmergentLLMKey"],[16,25,18,23],[16,28,18,26,"getEmergentLLMKey"],[16,29,18,26],[16,34,18,32],[17,4,19,2],[18,4,20,2],[18,11,20,9,"Constants"],[18,33,20,18],[18,34,20,19,"expoConfig"],[18,44,20,29],[18,46,20,31,"extra"],[18,51,20,36],[18,53,20,38,"EXPO_PUBLIC_EMERGENT_LLM_KEY"],[18,81,20,66],[18,85,21,9,"Constants"],[18,107,21,18],[18,108,21,19,"manifest"],[18,116,21,27],[18,118,21,29,"extra"],[18,123,21,34],[18,125,21,36,"EXPO_PUBLIC_EMERGENT_LLM_KEY"],[18,153,21,64],[18,158,22,10],[18,165,22,17,"process"],[18,172,22,24],[18,177,22,29],[18,188,22,40],[18,191,22,40,"_env2"],[18,196,22,40],[18,197,22,40,"env"],[18,200,22,40],[18,201,22,40,"EXPO_PUBLIC_EMERGENT_LLM_KEY"],[18,229,22,40],[18,232,22,86],[18,236,22,90],[18,237,22,91],[18,241,23,9],[18,273,23,41],[18,274,23,42],[18,275,23,43],[19,2,24,0],[19,3,24,1],[21,2,26,0],[22,0,27,0],[23,0,28,0],[24,2,29,7],[24,17,29,22,"testCloudConnection"],[24,36,29,41,"testCloudConnection"],[24,37,29,41],[24,39,29,62],[25,4,30,2],[25,10,30,8,"EMERGENT_LLM_KEY"],[25,26,30,24],[25,29,30,27,"getEmergentLLMKey"],[25,46,30,44],[25,47,30,45],[25,48,30,46],[26,4,31,2],[26,8,31,6],[26,9,31,7,"EMERGENT_LLM_KEY"],[26,25,31,23],[26,27,31,25],[27,6,32,4,"console"],[27,13,32,11],[27,14,32,12,"warn"],[27,18,32,16],[27,19,32,17],[27,50,32,48],[27,51,32,49],[28,6,33,4],[28,13,33,11],[28,18,33,16],[29,4,34,2],[30,4,36,2],[30,8,36,6],[31,6,37,4],[32,6,38,4],[32,12,38,10,"response"],[32,20,38,18],[32,23,38,21],[32,29,38,27,"fetch"],[32,34,38,32],[32,35,38,33],[32,69,38,67],[32,71,38,69],[33,8,39,6,"method"],[33,14,39,12],[33,16,39,14],[33,21,39,19],[34,8,40,6,"headers"],[34,15,40,13],[34,17,40,15],[35,10,41,8],[35,25,41,23],[35,27,41,25],[35,37,41,35,"EMERGENT_LLM_KEY"],[35,53,41,51],[35,55,41,53],[36,10,42,8],[36,24,42,22],[36,26,42,24],[37,8,43,6],[37,9,43,7],[38,8,44,6,"signal"],[38,14,44,12],[38,16,44,14,"AbortSignal"],[38,27,44,25],[38,28,44,26,"timeout"],[38,35,44,33],[38,36,44,34],[38,40,44,38],[38,41,44,39],[38,42,44,40],[39,6,45,4],[39,7,45,5],[39,8,45,6],[40,6,46,4],[40,13,46,11,"response"],[40,21,46,19],[40,22,46,20,"ok"],[40,24,46,22],[41,4,47,2],[41,5,47,3],[41,6,47,4],[41,13,47,11,"error"],[41,18,47,16],[41,20,47,18],[42,6,48,4,"console"],[42,13,48,11],[42,14,48,12,"warn"],[42,18,48,16],[42,19,48,17],[42,55,48,53],[42,57,48,55,"error"],[42,62,48,60],[42,63,48,61],[43,6,49,4],[43,13,49,11],[43,18,49,16],[44,4,50,2],[45,2,51,0],[47,2,53,0],[48,0,54,0],[49,0,55,0],[50,2,56,7],[50,17,56,22,"callCloudLLM"],[50,29,56,34,"callCloudLLM"],[50,30,56,35,"request"],[50,37,56,60],[50,39,56,79],[51,4,57,2],[51,10,57,8,"EMERGENT_LLM_KEY"],[51,26,57,24],[51,29,57,27,"getEmergentLLMKey"],[51,46,57,44],[51,47,57,45],[51,48,57,46],[52,4,58,2],[52,8,58,6],[52,9,58,7,"EMERGENT_LLM_KEY"],[52,25,58,23],[52,27,58,25],[53,6,59,4],[53,12,59,10],[53,16,59,14,"Error"],[53,21,59,19],[53,22,59,20],[53,53,59,51],[53,54,59,52],[54,4,60,2],[55,4,62,2],[55,8,62,6],[56,6,63,4],[56,12,63,10,"systemPrompt"],[56,24,63,22],[56,27,63,25,"request"],[56,34,63,32],[56,35,63,33,"language"],[56,43,63,41],[56,48,63,46],[56,52,63,50],[56,55,64,8],[56,147,64,100],[56,150,65,8,"request"],[56,157,65,15],[56,158,65,16,"language"],[56,166,65,24],[56,171,65,29],[56,175,65,33],[56,178,66,8],[56,261,66,91],[56,264,67,8],[56,346,67,90],[57,6,69,4],[57,12,69,10,"messages"],[57,20,69,18],[57,23,69,21],[57,24,70,6],[58,8,70,8,"role"],[58,12,70,12],[58,14,70,14],[58,22,70,22],[59,8,70,24,"content"],[59,15,70,31],[59,17,70,33,"systemPrompt"],[60,6,70,46],[60,7,70,47],[60,8,71,5],[61,6,73,4],[61,10,73,8,"request"],[61,17,73,15],[61,18,73,16,"mode"],[61,22,73,20],[61,27,73,25],[61,37,73,35],[61,39,73,37],[62,8,74,6],[63,8,75,6],[63,14,75,12,"summaryText"],[63,25,75,23],[63,28,75,26,"request"],[63,35,75,33],[63,36,75,34,"summary"],[63,43,75,41],[63,46,76,8],[63,60,76,22,"JSON"],[63,64,76,26],[63,65,76,27,"stringify"],[63,74,76,36],[63,75,76,37,"request"],[63,82,76,44],[63,83,76,45,"summary"],[63,90,76,52],[63,92,76,54],[63,96,76,58],[63,98,76,60],[63,99,76,61],[63,100,76,62],[63,102,76,64],[63,105,77,8],[63,129,77,32],[64,8,79,6,"messages"],[64,16,79,14],[64,17,79,15,"push"],[64,21,79,19],[64,22,79,20],[65,10,80,8,"role"],[65,14,80,12],[65,16,80,14],[65,22,80,20],[66,10,81,8,"content"],[66,17,81,15],[66,19,81,17,"request"],[66,26,81,24],[66,27,81,25,"language"],[66,35,81,33],[66,40,81,38],[66,44,81,42],[66,47,82,12],[66,119,82,84,"summaryText"],[66,130,82,95],[66,132,82,97],[66,135,83,12,"request"],[66,142,83,19],[66,143,83,20,"language"],[66,151,83,28],[66,156,83,33],[66,160,83,37],[66,163,84,12],[66,228,84,77,"summaryText"],[66,239,84,88],[66,241,84,90],[66,244,85,12],[66,300,85,68,"summaryText"],[66,311,85,79],[67,8,86,6],[67,9,86,7],[67,10,86,8],[68,6,87,4],[68,7,87,5],[68,13,87,11],[69,8,88,6],[70,8,89,6],[70,12,89,10,"request"],[70,19,89,17],[70,20,89,18,"messages"],[70,28,89,26],[70,30,89,28],[71,10,90,8,"messages"],[71,18,90,16],[71,19,90,17,"push"],[71,23,90,21],[71,24,90,22],[71,27,90,25,"request"],[71,34,90,32],[71,35,90,33,"messages"],[71,43,90,41],[71,44,90,42],[72,8,91,6],[73,6,92,4],[74,6,94,4],[74,12,94,10,"response"],[74,20,94,18],[74,23,94,21],[74,29,94,27,"fetch"],[74,34,94,32],[74,35,94,33],[74,79,94,77],[74,81,94,79],[75,8,95,6,"method"],[75,14,95,12],[75,16,95,14],[75,22,95,20],[76,8,96,6,"headers"],[76,15,96,13],[76,17,96,15],[77,10,97,8],[77,25,97,23],[77,27,97,25],[77,37,97,35,"EMERGENT_LLM_KEY"],[77,53,97,51],[77,55,97,53],[78,10,98,8],[78,24,98,22],[78,26,98,24],[79,8,99,6],[79,9,99,7],[80,8,100,6,"body"],[80,12,100,10],[80,14,100,12,"JSON"],[80,18,100,16],[80,19,100,17,"stringify"],[80,28,100,26],[80,29,100,27],[81,10,101,8,"model"],[81,15,101,13],[81,17,101,15,"request"],[81,24,101,22],[81,25,101,23,"model"],[81,30,101,28],[81,34,101,32],[81,47,101,45],[82,10,102,8,"messages"],[82,18,102,16],[83,10,103,8,"max_tokens"],[83,20,103,18],[83,22,103,20],[83,25,103,23],[84,10,104,8,"temperature"],[84,21,104,19],[84,23,104,21],[85,8,105,6],[85,9,105,7],[85,10,105,8],[86,8,106,6,"signal"],[86,14,106,12],[86,16,106,14,"AbortSignal"],[86,27,106,25],[86,28,106,26,"timeout"],[86,35,106,33],[86,36,106,34],[86,40,106,38],[86,41,106,39],[86,42,106,40],[87,6,107,4],[87,7,107,5],[87,8,107,6],[88,6,109,4],[88,10,109,8],[88,11,109,9,"response"],[88,19,109,17],[88,20,109,18,"ok"],[88,22,109,20],[88,24,109,22],[89,8,110,6],[89,14,110,12,"errorText"],[89,23,110,21],[89,26,110,24],[89,32,110,30,"response"],[89,40,110,38],[89,41,110,39,"text"],[89,45,110,43],[89,46,110,44],[89,47,110,45],[90,8,111,6],[90,14,111,12],[90,18,111,16,"Error"],[90,23,111,21],[90,24,111,22],[90,60,111,58,"response"],[90,68,111,66],[90,69,111,67,"status"],[90,75,111,73],[90,80,111,78,"errorText"],[90,89,111,87],[90,91,111,89],[90,92,111,90],[91,6,112,4],[92,6,114,4],[92,12,114,10,"data"],[92,16,114,14],[92,19,114,17],[92,25,114,23,"response"],[92,33,114,31],[92,34,114,32,"json"],[92,38,114,36],[92,39,114,37],[92,40,114,38],[93,6,115,4],[93,12,115,10,"content"],[93,19,115,17],[93,22,115,20,"data"],[93,26,115,24],[93,27,115,25,"choices"],[93,34,115,32],[93,37,115,35],[93,38,115,36],[93,39,115,37],[93,41,115,39,"message"],[93,48,115,46],[93,50,115,48,"content"],[93,57,115,55],[93,61,115,59],[93,63,115,61],[94,6,117,4],[94,10,117,8],[94,11,117,9,"content"],[94,18,117,16],[94,19,117,17,"trim"],[94,23,117,21],[94,24,117,22],[94,25,117,23],[94,27,117,25],[95,8,118,6],[95,14,118,12],[95,18,118,16,"Error"],[95,23,118,21],[95,24,118,22],[95,56,118,54],[95,57,118,55],[96,6,119,4],[97,6,121,4],[97,13,121,11,"content"],[97,20,121,18],[97,21,121,19,"trim"],[97,25,121,23],[97,26,121,24],[97,27,121,25],[98,4,122,2],[98,5,122,3],[98,6,122,4],[98,13,122,11,"error"],[98,18,122,16],[98,20,122,18],[99,6,123,4,"console"],[99,13,123,11],[99,14,123,12,"warn"],[99,18,123,16],[99,19,123,17],[99,44,123,42],[99,46,123,44,"error"],[99,51,123,49],[99,52,123,50],[100,6,124,4],[100,12,124,10,"error"],[100,17,124,15],[101,4,125,2],[102,2,126,0],[104,2,128,0],[105,0,129,0],[106,0,130,0],[107,2,131,7],[107,17,131,22,"hybridGreeting"],[107,31,131,36,"hybridGreeting"],[107,32,131,37,"state"],[107,37,131,47],[107,39,131,66],[108,4,132,2],[108,8,132,6],[109,6,133,4],[110,6,134,4],[110,12,134,10,"isConnected"],[110,23,134,21],[110,26,134,24],[110,32,134,30,"testCloudConnection"],[110,51,134,49],[110,52,134,50],[110,53,134,51],[111,6,135,4],[111,10,135,8],[111,11,135,9,"isConnected"],[111,22,135,20],[111,24,135,22],[112,8,136,6],[112,14,136,12],[112,18,136,16,"Error"],[112,23,136,21],[112,24,136,22],[112,49,136,47],[112,50,136,48],[113,6,137,4],[115,6,139,4],[116,6,140,4],[116,12,140,10,"summary"],[116,19,140,17],[116,22,140,20],[116,26,140,20,"computeAISummary"],[116,51,140,36],[116,53,140,37,"state"],[116,58,140,42],[116,59,140,43],[117,6,142,4],[117,12,142,10,"request"],[117,19,142,35],[117,22,142,38],[118,8,143,6,"mode"],[118,12,143,10],[118,14,143,12],[118,24,143,22],[119,8,144,6,"language"],[119,16,144,14],[119,18,144,16,"state"],[119,23,144,21],[119,24,144,22,"language"],[119,32,144,30],[119,36,144,34],[119,40,144,38],[120,8,145,6,"model"],[120,13,145,11],[120,15,145,13],[120,28,145,26],[121,8,146,6,"summary"],[122,6,147,4],[122,7,147,5],[123,6,149,4],[123,12,149,10,"result"],[123,18,149,16],[123,21,149,19],[123,27,149,25,"callCloudLLM"],[123,39,149,37],[123,40,149,38,"request"],[123,47,149,45],[123,48,149,46],[124,6,150,4],[124,10,150,8,"result"],[124,16,150,14],[124,20,150,18,"result"],[124,26,150,24],[124,27,150,25,"trim"],[124,31,150,29],[124,32,150,30],[124,33,150,31],[124,35,150,33],[125,8,151,6,"console"],[125,15,151,13],[125,16,151,14,"log"],[125,19,151,17],[125,20,151,18],[125,53,151,51],[125,54,151,52],[126,8,152,6],[126,15,152,13,"result"],[126,21,152,19],[126,22,152,20,"trim"],[126,26,152,24],[126,27,152,25],[126,28,152,26],[127,6,153,4],[128,6,155,4],[128,12,155,10],[128,16,155,14,"Error"],[128,21,155,19],[128,22,155,20],[128,53,155,51],[128,54,155,52],[129,4,156,2],[129,5,156,3],[129,6,156,4],[129,13,156,11,"error"],[129,18,156,16],[129,20,156,18],[130,6,157,4,"console"],[130,13,157,11],[130,14,157,12,"log"],[130,17,157,15],[130,18,157,16],[130,72,157,70],[130,74,157,72,"error"],[130,79,157,77],[130,80,157,78],[131,6,158,4],[131,13,158,11],[131,19,158,17],[131,23,158,17,"localGreeting"],[131,47,158,30],[131,49,158,31,"state"],[131,54,158,36],[131,55,158,37],[132,4,159,2],[133,2,160,0],[135,2,162,0],[136,0,163,0],[137,0,164,0],[138,2,165,7],[138,17,165,22,"hybridReply"],[138,28,165,33,"hybridReply"],[138,29,165,34,"state"],[138,34,165,44],[138,36,165,46,"userMessage"],[138,47,165,65],[138,49,165,84],[139,4,166,2],[139,8,166,6],[140,6,167,4],[141,6,168,4],[141,12,168,10,"isConnected"],[141,23,168,21],[141,26,168,24],[141,32,168,30,"testCloudConnection"],[141,51,168,49],[141,52,168,50],[141,53,168,51],[142,6,169,4],[142,10,169,8],[142,11,169,9,"isConnected"],[142,22,169,20],[142,24,169,22],[143,8,170,6],[143,14,170,12],[143,18,170,16,"Error"],[143,23,170,21],[143,24,170,22],[143,49,170,47],[143,50,170,48],[144,6,171,4],[146,6,173,4],[147,6,174,4],[147,12,174,10,"summary"],[147,19,174,17],[147,22,174,20],[147,26,174,20,"computeAISummary"],[147,51,174,36],[147,53,174,37,"state"],[147,58,174,42],[147,59,174,43],[149,6,176,4],[150,6,177,4],[150,12,177,10,"recentChat"],[150,22,177,20],[150,25,177,23],[150,26,177,24,"state"],[150,31,177,29],[150,32,177,30,"chat"],[150,36,177,34],[150,40,177,38],[150,42,177,40],[150,44,177,42,"slice"],[150,49,177,47],[150,50,177,48],[150,51,177,49],[150,52,177,50],[150,53,177,51],[150,54,177,52,"map"],[150,57,177,55],[150,58,177,57,"msg"],[150,61,177,65],[150,66,177,71],[151,8,178,6,"role"],[151,12,178,10],[151,14,178,12,"msg"],[151,17,178,15],[151,18,178,16,"sender"],[151,24,178,22],[151,29,178,27],[151,35,178,33],[151,38,178,36],[151,44,178,42],[151,47,178,54],[151,58,178,74],[152,8,179,6,"content"],[152,15,179,13],[152,17,179,15,"msg"],[152,20,179,18],[152,21,179,19,"text"],[153,6,180,4],[153,7,180,5],[153,8,180,6],[153,9,180,7],[155,6,182,4],[156,6,183,4,"recentChat"],[156,16,183,14],[156,17,183,15,"push"],[156,21,183,19],[156,22,183,20],[157,8,183,22,"role"],[157,12,183,26],[157,14,183,28],[157,20,183,34],[158,8,183,36,"content"],[158,15,183,43],[158,17,183,45,"userMessage"],[159,6,183,57],[159,7,183,58],[159,8,183,59],[160,6,185,4],[160,12,185,10,"request"],[160,19,185,35],[160,22,185,38],[161,8,186,6,"mode"],[161,12,186,10],[161,14,186,12],[161,20,186,18],[162,8,187,6,"language"],[162,16,187,14],[162,18,187,16,"state"],[162,23,187,21],[162,24,187,22,"language"],[162,32,187,30],[162,36,187,34],[162,40,187,38],[163,8,188,6,"model"],[163,13,188,11],[163,15,188,13],[163,28,188,26],[164,8,189,6,"summary"],[164,15,189,13],[165,8,190,6,"messages"],[165,16,190,14],[165,18,190,16,"recentChat"],[166,6,191,4],[166,7,191,5],[167,6,193,4],[167,12,193,10,"result"],[167,18,193,16],[167,21,193,19],[167,27,193,25,"callCloudLLM"],[167,39,193,37],[167,40,193,38,"request"],[167,47,193,45],[167,48,193,46],[168,6,194,4],[168,10,194,8,"result"],[168,16,194,14],[168,20,194,18,"result"],[168,26,194,24],[168,27,194,25,"trim"],[168,31,194,29],[168,32,194,30],[168,33,194,31],[168,35,194,33],[169,8,195,6,"console"],[169,15,195,13],[169,16,195,14,"log"],[169,19,195,17],[169,20,195,18],[169,50,195,48],[169,51,195,49],[170,8,196,6],[170,15,196,13,"result"],[170,21,196,19],[170,22,196,20,"trim"],[170,26,196,24],[170,27,196,25],[170,28,196,26],[171,6,197,4],[172,6,199,4],[172,12,199,10],[172,16,199,14,"Error"],[172,21,199,19],[172,22,199,20],[172,53,199,51],[172,54,199,52],[173,4,200,2],[173,5,200,3],[173,6,200,4],[173,13,200,11,"error"],[173,18,200,16],[173,20,200,18],[174,6,201,4,"console"],[174,13,201,11],[174,14,201,12,"log"],[174,17,201,15],[174,18,201,16],[174,69,201,67],[174,71,201,69,"error"],[174,76,201,74],[174,77,201,75],[175,6,202,4],[175,13,202,11],[175,19,202,17],[175,23,202,17,"localReply"],[175,44,202,27],[175,46,202,28,"state"],[175,51,202,33],[175,53,202,35,"userMessage"],[175,64,202,46],[175,65,202,47],[176,4,203,2],[177,2,204,0],[179,2,206,0],[180,0,207,0],[181,0,208,0],[182,2,209,7],[182,17,209,22,"getAIStatus"],[182,28,209,33,"getAIStatus"],[182,29,209,33],[182,31,209,76],[183,4,210,2],[183,8,210,6],[184,6,211,4],[184,12,211,10,"isConnected"],[184,23,211,21],[184,26,211,24],[184,32,211,30,"testCloudConnection"],[184,51,211,49],[184,52,211,50],[184,53,211,51],[185,6,212,4],[185,13,212,11,"isConnected"],[185,24,212,22],[185,27,212,25],[185,34,212,32],[185,37,212,35],[185,44,212,42],[186,4,213,2],[186,5,213,3],[186,6,213,4],[186,13,213,11,"error"],[186,18,213,16],[186,20,213,18],[187,6,214,4],[187,13,214,11],[187,20,214,18],[188,4,215,2],[189,2,216,0],[190,0,216,1],[190,3]],"functionMap":{"names":["<global>","getEmergentLLMKey","testCloudConnection","callCloudLLM","hybridGreeting","hybridReply","slice.map$argument_0","getAIStatus"],"mappings":"AAA;0BCiB;CDM;OEK;CFsB;OGK;CHsE;OIK;CJ6B;OKK;wDCY;MDG;CLwB;OOK"}},"type":"js/module"}]}