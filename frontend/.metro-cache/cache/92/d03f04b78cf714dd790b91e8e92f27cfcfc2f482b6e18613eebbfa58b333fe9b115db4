{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":39,"index":39}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"]}},{"name":"./localChat","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":40},"end":{"line":2,"column":56,"index":96}}],"key":"aXvKl/lmPsjnZryl5znHfKnmrlU=","exportNames":["*"]}},{"name":"./summary","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":97},"end":{"line":3,"column":45,"index":142}}],"key":"3AleHoplC8CAd676xho2Y/OsXUw=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.callCloudLLM = callCloudLLM;\n  exports.getAIStatus = getAIStatus;\n  exports.hybridGreeting = hybridGreeting;\n  exports.hybridReply = hybridReply;\n  exports.testCloudConnection = testCloudConnection;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _expoConstants = _interopRequireDefault(require(_dependencyMap[2]));\n  var _localChat = require(_dependencyMap[3]);\n  var _summary = require(_dependencyMap[4]);\n  // Direct OpenAI API integration using Emergent LLM Key\n  var getEmergentLLMKey = () => {\n    // Try multiple ways to get the key\n    return _expoConstants.default.expoConfig?.extra?.EXPO_PUBLIC_EMERGENT_LLM_KEY || _expoConstants.default.manifest?.extra?.EXPO_PUBLIC_EMERGENT_LLM_KEY || (typeof process !== 'undefined' ? process.env?.EXPO_PUBLIC_EMERGENT_LLM_KEY : null) || 'sk-emergent-e34Af18EdBf12063f7'; // Fallback\n  };\n  function fetchWithTimeout(input) {\n    var init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var timeoutMs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8000;\n    var controller = new AbortController();\n    var id = setTimeout(() => controller.abort(), timeoutMs);\n    var opts = {\n      ...init,\n      signal: controller.signal\n    };\n    return fetch(input, opts).finally(() => clearTimeout(id));\n  }\n\n  /**\n   * Test if Direct LLM is reachable by doing a simple health check\n   */\n  function testCloudConnection() {\n    return _testCloudConnection.apply(this, arguments);\n  }\n  /**\n   * Call OpenAI API directly using Emergent LLM Key\n   */\n  function _testCloudConnection() {\n    _testCloudConnection = (0, _asyncToGenerator2.default)(function* () {\n      var EMERGENT_LLM_KEY = getEmergentLLMKey();\n      if (!EMERGENT_LLM_KEY) {\n        console.warn('No Emergent LLM Key available');\n        return false;\n      }\n      try {\n        // Simple test request to OpenAI API\n        var response = yield fetchWithTimeout('https://api.openai.com/v1/models', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${EMERGENT_LLM_KEY}`,\n            'Content-Type': 'application/json'\n          }\n        }, 3000);\n        return response?.ok === true;\n      } catch (error) {\n        console.warn('Direct LLM connection test failed:', error);\n        return false;\n      }\n    });\n    return _testCloudConnection.apply(this, arguments);\n  }\n  function callCloudLLM(_x) {\n    return _callCloudLLM.apply(this, arguments);\n  }\n  /**\n   * Hybrid greeting - tries Cloud LLM first, falls back to local\n   */\n  function _callCloudLLM() {\n    _callCloudLLM = (0, _asyncToGenerator2.default)(function* (request) {\n      var EMERGENT_LLM_KEY = getEmergentLLMKey();\n      if (!EMERGENT_LLM_KEY) {\n        throw new Error('No Emergent LLM Key available');\n      }\n      try {\n        var systemPrompt = request.language === 'de' ? 'Du bist Gugi, ein freundlicher Gesundheitscoach. Antworte kurz und hilfsreich auf Deutsch.' : request.language === 'pl' ? 'JesteÅ› Gugi, przyjaznym trenerem zdrowia. Odpowiadaj krÃ³tko i pomocnie po polsku.' : 'You are Gugi, a friendly health coach. Respond briefly and helpfully in English.';\n        var messages = [{\n          role: 'system',\n          content: systemPrompt\n        }];\n        if (request.mode === 'greeting') {\n          // Create greeting based on summary\n          var summaryText = request.summary ? `User data: ${JSON.stringify(request.summary, null, 2)}` : 'No user data available';\n          messages.push({\n            role: 'user',\n            content: request.language === 'de' ? `BegrÃ¼ÃŸe mich freundlich als Gesundheitscoach. Hier sind meine Daten: ${summaryText}` : request.language === 'pl' ? `Przywitaj mnie przyjaÅºnie jako trener zdrowia. Oto moje dane: ${summaryText}` : `Greet me friendly as a health coach. Here's my data: ${summaryText}`\n          });\n        } else {\n          // Add chat history and current message\n          if (request.messages) {\n            messages.push(...request.messages);\n          }\n        }\n        var response = yield fetchWithTimeout('https://api.openai.com/v1/chat/completions', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${EMERGENT_LLM_KEY}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            model: request.model || 'gpt-4o-mini',\n            messages,\n            max_tokens: 280,\n            temperature: 0.4\n          })\n        }, 8000);\n        if (!response?.ok) {\n          var errorText = yield response.text?.();\n          throw new Error(`OpenAI API responded with status ${response?.status}: ${errorText}`);\n        }\n        var data = yield response.json();\n        var content = data.choices?.[0]?.message?.content || '';\n        if (!content.trim()) {\n          throw new Error('Empty response from OpenAI API');\n        }\n        return content.trim();\n      } catch (error) {\n        console.warn('Direct LLM call failed:', error);\n        throw error;\n      }\n    });\n    return _callCloudLLM.apply(this, arguments);\n  }\n  function hybridGreeting(_x2) {\n    return _hybridGreeting.apply(this, arguments);\n  }\n  /**\n   * Hybrid reply - tries Cloud LLM first, falls back to local\n   */\n  function _hybridGreeting() {\n    _hybridGreeting = (0, _asyncToGenerator2.default)(function* (state) {\n      try {\n        // Test connection first\n        var isConnected = yield testCloudConnection();\n        if (!isConnected) {\n          throw new Error('Cloud LLM not reachable');\n        }\n\n        // Prepare summary for Cloud LLM\n        var summary = (0, _summary.computeAISummary)(state);\n        var request = {\n          mode: 'greeting',\n          language: state.language || 'de',\n          model: 'gpt-4o-mini',\n          summary\n        };\n        var result = yield callCloudLLM(request);\n        if (result && result.trim()) {\n          console.log('âœ… Cloud LLM greeting successful');\n          return result.trim();\n        }\n        throw new Error('Empty response from Cloud LLM');\n      } catch (error) {\n        console.log('ðŸ”„ Cloud LLM failed, falling back to local greeting:', error);\n        return yield (0, _localChat.localGreeting)(state);\n      }\n    });\n    return _hybridGreeting.apply(this, arguments);\n  }\n  function hybridReply(_x3, _x4) {\n    return _hybridReply.apply(this, arguments);\n  }\n  /**\n   * Get current AI status for UI indication\n   */\n  function _hybridReply() {\n    _hybridReply = (0, _asyncToGenerator2.default)(function* (state, userMessage) {\n      try {\n        // Test connection first\n        var isConnected = yield testCloudConnection();\n        if (!isConnected) {\n          throw new Error('Cloud LLM not reachable');\n        }\n\n        // Prepare summary for Cloud LLM\n        var summary = (0, _summary.computeAISummary)(state);\n\n        // Get recent chat history for context\n        var recentChat = (state.chat || []).slice(-6).map(msg => ({\n          role: msg.sender === 'user' ? 'user' : 'assistant',\n          content: msg.text\n        }));\n\n        // Add current user message\n        recentChat.push({\n          role: 'user',\n          content: userMessage\n        });\n        var request = {\n          mode: 'chat',\n          language: state.language || 'de',\n          model: 'gpt-4o-mini',\n          summary,\n          messages: recentChat\n        };\n        var result = yield callCloudLLM(request);\n        if (result && result.trim()) {\n          console.log('âœ… Cloud LLM reply successful');\n          return result.trim();\n        }\n        throw new Error('Empty response from Cloud LLM');\n      } catch (error) {\n        console.log('ðŸ”„ Cloud LLM failed, falling back to local reply:', error);\n        return yield (0, _localChat.localReply)(state, userMessage);\n      }\n    });\n    return _hybridReply.apply(this, arguments);\n  }\n  function getAIStatus() {\n    return _getAIStatus.apply(this, arguments);\n  }\n  function _getAIStatus() {\n    _getAIStatus = (0, _asyncToGenerator2.default)(function* () {\n      try {\n        var isConnected = yield testCloudConnection();\n        return isConnected ? 'cloud' : 'local';\n      } catch (error) {\n        return 'local';\n      }\n    });\n    return _getAIStatus.apply(this, arguments);\n  }\n});","lineCount":225,"map":[[12,2,1,0],[12,6,1,0,"_expoConstants"],[12,20,1,0],[12,23,1,0,"_interopRequireDefault"],[12,45,1,0],[12,46,1,0,"require"],[12,53,1,0],[12,54,1,0,"_dependencyMap"],[12,68,1,0],[13,2,2,0],[13,6,2,0,"_localChat"],[13,16,2,0],[13,19,2,0,"require"],[13,26,2,0],[13,27,2,0,"_dependencyMap"],[13,41,2,0],[14,2,3,0],[14,6,3,0,"_summary"],[14,14,3,0],[14,17,3,0,"require"],[14,24,3,0],[14,25,3,0,"_dependencyMap"],[14,39,3,0],[15,2,17,0],[16,2,18,0],[16,6,18,6,"getEmergentLLMKey"],[16,23,18,23],[16,26,18,26,"getEmergentLLMKey"],[16,27,18,26],[16,32,18,32],[17,4,19,2],[18,4,20,2],[18,11,20,9,"Constants"],[18,33,20,18],[18,34,20,19,"expoConfig"],[18,44,20,29],[18,46,20,31,"extra"],[18,51,20,36],[18,53,20,38,"EXPO_PUBLIC_EMERGENT_LLM_KEY"],[18,81,20,66],[18,85,21,9,"Constants"],[18,107,21,18],[18,108,21,19,"manifest"],[18,116,21,27],[18,118,21,29,"extra"],[18,123,21,34],[18,125,21,36,"EXPO_PUBLIC_EMERGENT_LLM_KEY"],[18,153,21,64],[18,158,22,10],[18,165,22,17,"process"],[18,172,22,24],[18,177,22,29],[18,188,22,40],[18,191,22,44,"process"],[18,198,22,51],[18,199,22,60,"env"],[18,202,22,63],[18,204,22,65,"EXPO_PUBLIC_EMERGENT_LLM_KEY"],[18,232,22,93],[18,235,22,96],[18,239,22,100],[18,240,22,101],[18,244,23,9],[18,276,23,41],[18,277,23,42],[18,278,23,43],[19,2,24,0],[19,3,24,1],[20,2,26,0],[20,11,26,9,"fetchWithTimeout"],[20,27,26,25,"fetchWithTimeout"],[20,28,26,26,"input"],[20,33,26,50],[20,35,26,94],[21,4,26,94],[21,8,26,52,"init"],[21,12,26,69],[21,15,26,69,"arguments"],[21,24,26,69],[21,25,26,69,"length"],[21,31,26,69],[21,39,26,69,"arguments"],[21,48,26,69],[21,56,26,69,"undefined"],[21,65,26,69],[21,68,26,69,"arguments"],[21,77,26,69],[21,83,26,72],[21,84,26,73],[21,85,26,74],[22,4,26,74],[22,8,26,76,"timeoutMs"],[22,17,26,85],[22,20,26,85,"arguments"],[22,29,26,85],[22,30,26,85,"length"],[22,36,26,85],[22,44,26,85,"arguments"],[22,53,26,85],[22,61,26,85,"undefined"],[22,70,26,85],[22,73,26,85,"arguments"],[22,82,26,85],[22,88,26,88],[22,92,26,92],[23,4,27,2],[23,8,27,8,"controller"],[23,18,27,18],[23,21,27,21],[23,25,27,25,"AbortController"],[23,40,27,40],[23,41,27,41],[23,42,27,42],[24,4,28,2],[24,8,28,8,"id"],[24,10,28,10],[24,13,28,13,"setTimeout"],[24,23,28,23],[24,24,28,24],[24,30,28,30,"controller"],[24,40,28,40],[24,41,28,41,"abort"],[24,46,28,46],[24,47,28,47],[24,48,28,48],[24,50,28,50,"timeoutMs"],[24,59,28,59],[24,60,28,60],[25,4,29,2],[25,8,29,8,"opts"],[25,12,29,25],[25,15,29,28],[26,6,29,30],[26,9,29,33,"init"],[26,13,29,37],[27,6,29,39,"signal"],[27,12,29,45],[27,14,29,47,"controller"],[27,24,29,57],[27,25,29,58,"signal"],[28,4,29,65],[28,5,29,66],[29,4,30,2],[29,11,30,9,"fetch"],[29,16,30,14],[29,17,30,15,"input"],[29,22,30,20],[29,24,30,29,"opts"],[29,28,30,33],[29,29,30,34],[29,30,30,35,"finally"],[29,37,30,42],[29,38,30,43],[29,44,30,49,"clearTimeout"],[29,56,30,61],[29,57,30,62,"id"],[29,59,30,64],[29,60,30,65],[29,61,30,66],[30,2,31,0],[32,2,33,0],[33,0,34,0],[34,0,35,0],[35,2,33,0],[35,11,36,22,"testCloudConnection"],[35,30,36,41,"testCloudConnection"],[35,31,36,41],[36,4,36,41],[36,11,36,41,"_testCloudConnection"],[36,31,36,41],[36,32,36,41,"apply"],[36,37,36,41],[36,44,36,41,"arguments"],[36,53,36,41],[37,2,36,41],[38,2,59,0],[39,0,60,0],[40,0,61,0],[41,2,59,0],[41,11,59,0,"_testCloudConnection"],[41,32,59,0],[42,4,59,0,"_testCloudConnection"],[42,24,59,0],[42,31,59,0,"_asyncToGenerator2"],[42,49,59,0],[42,50,59,0,"default"],[42,57,59,0],[42,59,36,7],[42,72,36,62],[43,6,37,2],[43,10,37,8,"EMERGENT_LLM_KEY"],[43,26,37,24],[43,29,37,27,"getEmergentLLMKey"],[43,46,37,44],[43,47,37,45],[43,48,37,46],[44,6,38,2],[44,10,38,6],[44,11,38,7,"EMERGENT_LLM_KEY"],[44,27,38,23],[44,29,38,25],[45,8,39,4,"console"],[45,15,39,11],[45,16,39,12,"warn"],[45,20,39,16],[45,21,39,17],[45,52,39,48],[45,53,39,49],[46,8,40,4],[46,15,40,11],[46,20,40,16],[47,6,41,2],[48,6,43,2],[48,10,43,6],[49,8,44,4],[50,8,45,4],[50,12,45,10,"response"],[50,20,45,18],[50,29,45,27,"fetchWithTimeout"],[50,45,45,43],[50,46,45,44],[50,80,45,78],[50,82,45,80],[51,10,46,6,"method"],[51,16,46,12],[51,18,46,14],[51,23,46,19],[52,10,47,6,"headers"],[52,17,47,13],[52,19,47,15],[53,12,48,8],[53,27,48,23],[53,29,48,25],[53,39,48,35,"EMERGENT_LLM_KEY"],[53,55,48,51],[53,57,48,53],[54,12,49,8],[54,26,49,22],[54,28,49,24],[55,10,50,6],[56,8,51,4],[56,9,51,5],[56,11,51,7],[56,15,51,11],[56,16,51,12],[57,8,52,4],[57,15,52,12,"response"],[57,23,52,20],[57,25,52,30,"ok"],[57,27,52,32],[57,32,52,37],[57,36,52,41],[58,6,53,2],[58,7,53,3],[58,8,53,4],[58,15,53,11,"error"],[58,20,53,16],[58,22,53,18],[59,8,54,4,"console"],[59,15,54,11],[59,16,54,12,"warn"],[59,20,54,16],[59,21,54,17],[59,57,54,53],[59,59,54,55,"error"],[59,64,54,60],[59,65,54,61],[60,8,55,4],[60,15,55,11],[60,20,55,16],[61,6,56,2],[62,4,57,0],[62,5,57,1],[63,4,57,1],[63,11,57,1,"_testCloudConnection"],[63,31,57,1],[63,32,57,1,"apply"],[63,37,57,1],[63,44,57,1,"arguments"],[63,53,57,1],[64,2,57,1],[65,2,57,1],[65,11,62,22,"callCloudLLM"],[65,23,62,34,"callCloudLLM"],[65,24,62,34,"_x"],[65,26,62,34],[66,4,62,34],[66,11,62,34,"_callCloudLLM"],[66,24,62,34],[66,25,62,34,"apply"],[66,30,62,34],[66,37,62,34,"arguments"],[66,46,62,34],[67,2,62,34],[68,2,133,0],[69,0,134,0],[70,0,135,0],[71,2,133,0],[71,11,133,0,"_callCloudLLM"],[71,25,133,0],[72,4,133,0,"_callCloudLLM"],[72,17,133,0],[72,24,133,0,"_asyncToGenerator2"],[72,42,133,0],[72,43,133,0,"default"],[72,50,133,0],[72,52,62,7],[72,63,62,35,"request"],[72,70,62,60],[72,72,62,79],[73,6,63,2],[73,10,63,8,"EMERGENT_LLM_KEY"],[73,26,63,24],[73,29,63,27,"getEmergentLLMKey"],[73,46,63,44],[73,47,63,45],[73,48,63,46],[74,6,64,2],[74,10,64,6],[74,11,64,7,"EMERGENT_LLM_KEY"],[74,27,64,23],[74,29,64,25],[75,8,65,4],[75,14,65,10],[75,18,65,14,"Error"],[75,23,65,19],[75,24,65,20],[75,55,65,51],[75,56,65,52],[76,6,66,2],[77,6,68,2],[77,10,68,6],[78,8,69,4],[78,12,69,10,"systemPrompt"],[78,24,69,22],[78,27,69,25,"request"],[78,34,69,32],[78,35,69,33,"language"],[78,43,69,41],[78,48,69,46],[78,52,69,50],[78,55,70,8],[78,147,70,100],[78,150,71,8,"request"],[78,157,71,15],[78,158,71,16,"language"],[78,166,71,24],[78,171,71,29],[78,175,71,33],[78,178,72,8],[78,261,72,91],[78,264,73,8],[78,346,73,90],[79,8,75,4],[79,12,75,10,"messages"],[79,20,75,81],[79,23,75,84],[79,24,76,6],[80,10,76,8,"role"],[80,14,76,12],[80,16,76,14],[80,24,76,22],[81,10,76,24,"content"],[81,17,76,31],[81,19,76,33,"systemPrompt"],[82,8,76,46],[82,9,76,47],[82,10,77,5],[83,8,79,4],[83,12,79,8,"request"],[83,19,79,15],[83,20,79,16,"mode"],[83,24,79,20],[83,29,79,25],[83,39,79,35],[83,41,79,37],[84,10,80,6],[85,10,81,6],[85,14,81,12,"summaryText"],[85,25,81,23],[85,28,81,26,"request"],[85,35,81,33],[85,36,81,34,"summary"],[85,43,81,41],[85,46,82,8],[85,60,82,22,"JSON"],[85,64,82,26],[85,65,82,27,"stringify"],[85,74,82,36],[85,75,82,37,"request"],[85,82,82,44],[85,83,82,45,"summary"],[85,90,82,52],[85,92,82,54],[85,96,82,58],[85,98,82,60],[85,99,82,61],[85,100,82,62],[85,102,82,64],[85,105,83,8],[85,129,83,32],[86,10,85,6,"messages"],[86,18,85,14],[86,19,85,15,"push"],[86,23,85,19],[86,24,85,20],[87,12,86,8,"role"],[87,16,86,12],[87,18,86,14],[87,24,86,20],[88,12,87,8,"content"],[88,19,87,15],[88,21,87,17,"request"],[88,28,87,24],[88,29,87,25,"language"],[88,37,87,33],[88,42,87,38],[88,46,87,42],[88,49,88,12],[88,121,88,84,"summaryText"],[88,132,88,95],[88,134,88,97],[88,137,89,12,"request"],[88,144,89,19],[88,145,89,20,"language"],[88,153,89,28],[88,158,89,33],[88,162,89,37],[88,165,90,12],[88,230,90,77,"summaryText"],[88,241,90,88],[88,243,90,90],[88,246,91,12],[88,302,91,68,"summaryText"],[88,313,91,79],[89,10,92,6],[89,11,92,7],[89,12,92,8],[90,8,93,4],[90,9,93,5],[90,15,93,11],[91,10,94,6],[92,10,95,6],[92,14,95,10,"request"],[92,21,95,17],[92,22,95,18,"messages"],[92,30,95,26],[92,32,95,28],[93,12,96,8,"messages"],[93,20,96,16],[93,21,96,17,"push"],[93,25,96,21],[93,26,96,22],[93,29,96,25,"request"],[93,36,96,32],[93,37,96,33,"messages"],[93,45,96,41],[93,46,96,42],[94,10,97,6],[95,8,98,4],[96,8,100,4],[96,12,100,10,"response"],[96,20,100,18],[96,29,100,27,"fetchWithTimeout"],[96,45,100,43],[96,46,100,44],[96,90,100,88],[96,92,100,90],[97,10,101,6,"method"],[97,16,101,12],[97,18,101,14],[97,24,101,20],[98,10,102,6,"headers"],[98,17,102,13],[98,19,102,15],[99,12,103,8],[99,27,103,23],[99,29,103,25],[99,39,103,35,"EMERGENT_LLM_KEY"],[99,55,103,51],[99,57,103,53],[100,12,104,8],[100,26,104,22],[100,28,104,24],[101,10,105,6],[101,11,105,7],[102,10,106,6,"body"],[102,14,106,10],[102,16,106,12,"JSON"],[102,20,106,16],[102,21,106,17,"stringify"],[102,30,106,26],[102,31,106,27],[103,12,107,8,"model"],[103,17,107,13],[103,19,107,15,"request"],[103,26,107,22],[103,27,107,23,"model"],[103,32,107,28],[103,36,107,32],[103,49,107,45],[104,12,108,8,"messages"],[104,20,108,16],[105,12,109,8,"max_tokens"],[105,22,109,18],[105,24,109,20],[105,27,109,23],[106,12,110,8,"temperature"],[106,23,110,19],[106,25,110,21],[107,10,111,6],[107,11,111,7],[108,8,112,4],[108,9,112,5],[108,11,112,7],[108,15,112,11],[108,16,112,12],[109,8,114,4],[109,12,114,8],[109,13,114,10,"response"],[109,21,114,18],[109,23,114,28,"ok"],[109,25,114,30],[109,27,114,32],[110,10,115,6],[110,14,115,12,"errorText"],[110,23,115,21],[110,32,115,31,"response"],[110,40,115,39],[110,41,115,48,"text"],[110,45,115,52],[110,48,115,55],[110,49,115,56],[111,10,116,6],[111,16,116,12],[111,20,116,16,"Error"],[111,25,116,21],[111,26,116,22],[111,62,116,59,"response"],[111,70,116,67],[111,72,116,77,"status"],[111,78,116,83],[111,83,116,88,"errorText"],[111,92,116,97],[111,94,116,99],[111,95,116,100],[112,8,117,4],[113,8,119,4],[113,12,119,10,"data"],[113,16,119,14],[113,25,119,24,"response"],[113,33,119,32],[113,34,119,41,"json"],[113,38,119,45],[113,39,119,46],[113,40,119,47],[114,8,120,4],[114,12,120,10,"content"],[114,19,120,17],[114,22,120,20,"data"],[114,26,120,24],[114,27,120,25,"choices"],[114,34,120,32],[114,37,120,35],[114,38,120,36],[114,39,120,37],[114,41,120,39,"message"],[114,48,120,46],[114,50,120,48,"content"],[114,57,120,55],[114,61,120,59],[114,63,120,61],[115,8,122,4],[115,12,122,8],[115,13,122,9,"content"],[115,20,122,16],[115,21,122,17,"trim"],[115,25,122,21],[115,26,122,22],[115,27,122,23],[115,29,122,25],[116,10,123,6],[116,16,123,12],[116,20,123,16,"Error"],[116,25,123,21],[116,26,123,22],[116,58,123,54],[116,59,123,55],[117,8,124,4],[118,8,126,4],[118,15,126,11,"content"],[118,22,126,18],[118,23,126,19,"trim"],[118,27,126,23],[118,28,126,24],[118,29,126,25],[119,6,127,2],[119,7,127,3],[119,8,127,4],[119,15,127,11,"error"],[119,20,127,16],[119,22,127,18],[120,8,128,4,"console"],[120,15,128,11],[120,16,128,12,"warn"],[120,20,128,16],[120,21,128,17],[120,46,128,42],[120,48,128,44,"error"],[120,53,128,49],[120,54,128,50],[121,8,129,4],[121,14,129,10,"error"],[121,19,129,15],[122,6,130,2],[123,4,131,0],[123,5,131,1],[124,4,131,1],[124,11,131,1,"_callCloudLLM"],[124,24,131,1],[124,25,131,1,"apply"],[124,30,131,1],[124,37,131,1,"arguments"],[124,46,131,1],[125,2,131,1],[126,2,131,1],[126,11,136,22,"hybridGreeting"],[126,25,136,36,"hybridGreeting"],[126,26,136,36,"_x2"],[126,29,136,36],[127,4,136,36],[127,11,136,36,"_hybridGreeting"],[127,26,136,36],[127,27,136,36,"apply"],[127,32,136,36],[127,39,136,36,"arguments"],[127,48,136,36],[128,2,136,36],[129,2,167,0],[130,0,168,0],[131,0,169,0],[132,2,167,0],[132,11,167,0,"_hybridGreeting"],[132,27,167,0],[133,4,167,0,"_hybridGreeting"],[133,19,167,0],[133,26,167,0,"_asyncToGenerator2"],[133,44,167,0],[133,45,167,0,"default"],[133,52,167,0],[133,54,136,7],[133,65,136,37,"state"],[133,70,136,47],[133,72,136,66],[134,6,137,2],[134,10,137,6],[135,8,138,4],[136,8,139,4],[136,12,139,10,"isConnected"],[136,23,139,21],[136,32,139,30,"testCloudConnection"],[136,51,139,49],[136,52,139,50],[136,53,139,51],[137,8,140,4],[137,12,140,8],[137,13,140,9,"isConnected"],[137,24,140,20],[137,26,140,22],[138,10,141,6],[138,16,141,12],[138,20,141,16,"Error"],[138,25,141,21],[138,26,141,22],[138,51,141,47],[138,52,141,48],[139,8,142,4],[141,8,144,4],[142,8,145,4],[142,12,145,10,"summary"],[142,19,145,17],[142,22,145,20],[142,26,145,20,"computeAISummary"],[142,51,145,36],[142,53,145,37,"state"],[142,58,145,42],[142,59,145,43],[143,8,147,4],[143,12,147,10,"request"],[143,19,147,35],[143,22,147,38],[144,10,148,6,"mode"],[144,14,148,10],[144,16,148,12],[144,26,148,22],[145,10,149,6,"language"],[145,18,149,14],[145,20,149,16,"state"],[145,25,149,21],[145,26,149,22,"language"],[145,34,149,30],[145,38,149,34],[145,42,149,38],[146,10,150,6,"model"],[146,15,150,11],[146,17,150,13],[146,30,150,26],[147,10,151,6,"summary"],[148,8,152,4],[148,9,152,5],[149,8,154,4],[149,12,154,10,"result"],[149,18,154,16],[149,27,154,25,"callCloudLLM"],[149,39,154,37],[149,40,154,38,"request"],[149,47,154,45],[149,48,154,46],[150,8,155,4],[150,12,155,8,"result"],[150,18,155,14],[150,22,155,18,"result"],[150,28,155,24],[150,29,155,25,"trim"],[150,33,155,29],[150,34,155,30],[150,35,155,31],[150,37,155,33],[151,10,156,6,"console"],[151,17,156,13],[151,18,156,14,"log"],[151,21,156,17],[151,22,156,18],[151,55,156,51],[151,56,156,52],[152,10,157,6],[152,17,157,13,"result"],[152,23,157,19],[152,24,157,20,"trim"],[152,28,157,24],[152,29,157,25],[152,30,157,26],[153,8,158,4],[154,8,160,4],[154,14,160,10],[154,18,160,14,"Error"],[154,23,160,19],[154,24,160,20],[154,55,160,51],[154,56,160,52],[155,6,161,2],[155,7,161,3],[155,8,161,4],[155,15,161,11,"error"],[155,20,161,16],[155,22,161,18],[156,8,162,4,"console"],[156,15,162,11],[156,16,162,12,"log"],[156,19,162,15],[156,20,162,16],[156,74,162,70],[156,76,162,72,"error"],[156,81,162,77],[156,82,162,78],[157,8,163,4],[157,21,163,17],[157,25,163,17,"localGreeting"],[157,49,163,30],[157,51,163,31,"state"],[157,56,163,36],[157,57,163,37],[158,6,164,2],[159,4,165,0],[159,5,165,1],[160,4,165,1],[160,11,165,1,"_hybridGreeting"],[160,26,165,1],[160,27,165,1,"apply"],[160,32,165,1],[160,39,165,1,"arguments"],[160,48,165,1],[161,2,165,1],[162,2,165,1],[162,11,170,22,"hybridReply"],[162,22,170,33,"hybridReply"],[162,23,170,33,"_x3"],[162,26,170,33],[162,28,170,33,"_x4"],[162,31,170,33],[163,4,170,33],[163,11,170,33,"_hybridReply"],[163,23,170,33],[163,24,170,33,"apply"],[163,29,170,33],[163,36,170,33,"arguments"],[163,45,170,33],[164,2,170,33],[165,2,211,0],[166,0,212,0],[167,0,213,0],[168,2,211,0],[168,11,211,0,"_hybridReply"],[168,24,211,0],[169,4,211,0,"_hybridReply"],[169,16,211,0],[169,23,211,0,"_asyncToGenerator2"],[169,41,211,0],[169,42,211,0,"default"],[169,49,211,0],[169,51,170,7],[169,62,170,34,"state"],[169,67,170,44],[169,69,170,46,"userMessage"],[169,80,170,65],[169,82,170,84],[170,6,171,2],[170,10,171,6],[171,8,172,4],[172,8,173,4],[172,12,173,10,"isConnected"],[172,23,173,21],[172,32,173,30,"testCloudConnection"],[172,51,173,49],[172,52,173,50],[172,53,173,51],[173,8,174,4],[173,12,174,8],[173,13,174,9,"isConnected"],[173,24,174,20],[173,26,174,22],[174,10,175,6],[174,16,175,12],[174,20,175,16,"Error"],[174,25,175,21],[174,26,175,22],[174,51,175,47],[174,52,175,48],[175,8,176,4],[177,8,178,4],[178,8,179,4],[178,12,179,10,"summary"],[178,19,179,17],[178,22,179,20],[178,26,179,20,"computeAISummary"],[178,51,179,36],[178,53,179,37,"state"],[178,58,179,42],[178,59,179,43],[180,8,181,4],[181,8,182,4],[181,12,182,10,"recentChat"],[181,22,182,20],[181,25,182,23],[181,26,182,24,"state"],[181,31,182,29],[181,32,182,30,"chat"],[181,36,182,34],[181,40,182,38],[181,42,182,40],[181,44,182,42,"slice"],[181,49,182,47],[181,52,182,50],[181,53,182,51],[181,54,182,52,"map"],[181,57,182,55],[181,58,182,57,"msg"],[181,61,182,65],[181,66,182,71],[182,10,183,6,"role"],[182,14,183,10],[182,16,183,12,"msg"],[182,19,183,15],[182,20,183,16,"sender"],[182,26,183,22],[182,31,183,27],[182,37,183,33],[182,40,183,36],[182,46,183,42],[182,49,183,54],[182,60,183,74],[183,10,184,6,"content"],[183,17,184,13],[183,19,184,15,"msg"],[183,22,184,18],[183,23,184,19,"text"],[184,8,185,4],[184,9,185,5],[184,10,185,6],[184,11,185,7],[186,8,187,4],[187,8,188,4,"recentChat"],[187,18,188,14],[187,19,188,15,"push"],[187,23,188,19],[187,24,188,20],[188,10,188,22,"role"],[188,14,188,26],[188,16,188,28],[188,22,188,34],[189,10,188,36,"content"],[189,17,188,43],[189,19,188,45,"userMessage"],[190,8,188,57],[190,9,188,58],[190,10,188,59],[191,8,190,4],[191,12,190,10,"request"],[191,19,190,35],[191,22,190,38],[192,10,191,6,"mode"],[192,14,191,10],[192,16,191,12],[192,22,191,18],[193,10,192,6,"language"],[193,18,192,14],[193,20,192,16,"state"],[193,25,192,21],[193,26,192,22,"language"],[193,34,192,30],[193,38,192,34],[193,42,192,38],[194,10,193,6,"model"],[194,15,193,11],[194,17,193,13],[194,30,193,26],[195,10,194,6,"summary"],[195,17,194,13],[196,10,195,6,"messages"],[196,18,195,14],[196,20,195,16,"recentChat"],[197,8,196,4],[197,9,196,5],[198,8,198,4],[198,12,198,10,"result"],[198,18,198,16],[198,27,198,25,"callCloudLLM"],[198,39,198,37],[198,40,198,38,"request"],[198,47,198,45],[198,48,198,46],[199,8,199,4],[199,12,199,8,"result"],[199,18,199,14],[199,22,199,18,"result"],[199,28,199,24],[199,29,199,25,"trim"],[199,33,199,29],[199,34,199,30],[199,35,199,31],[199,37,199,33],[200,10,200,6,"console"],[200,17,200,13],[200,18,200,14,"log"],[200,21,200,17],[200,22,200,18],[200,52,200,48],[200,53,200,49],[201,10,201,6],[201,17,201,13,"result"],[201,23,201,19],[201,24,201,20,"trim"],[201,28,201,24],[201,29,201,25],[201,30,201,26],[202,8,202,4],[203,8,204,4],[203,14,204,10],[203,18,204,14,"Error"],[203,23,204,19],[203,24,204,20],[203,55,204,51],[203,56,204,52],[204,6,205,2],[204,7,205,3],[204,8,205,4],[204,15,205,11,"error"],[204,20,205,16],[204,22,205,18],[205,8,206,4,"console"],[205,15,206,11],[205,16,206,12,"log"],[205,19,206,15],[205,20,206,16],[205,71,206,67],[205,73,206,69,"error"],[205,78,206,74],[205,79,206,75],[206,8,207,4],[206,21,207,17],[206,25,207,17,"localReply"],[206,46,207,27],[206,48,207,28,"state"],[206,53,207,33],[206,55,207,35,"userMessage"],[206,66,207,46],[206,67,207,47],[207,6,208,2],[208,4,209,0],[208,5,209,1],[209,4,209,1],[209,11,209,1,"_hybridReply"],[209,23,209,1],[209,24,209,1,"apply"],[209,29,209,1],[209,36,209,1,"arguments"],[209,45,209,1],[210,2,209,1],[211,2,209,1],[211,11,214,22,"getAIStatus"],[211,22,214,33,"getAIStatus"],[211,23,214,33],[212,4,214,33],[212,11,214,33,"_getAIStatus"],[212,23,214,33],[212,24,214,33,"apply"],[212,29,214,33],[212,36,214,33,"arguments"],[212,45,214,33],[213,2,214,33],[214,2,214,33],[214,11,214,33,"_getAIStatus"],[214,24,214,33],[215,4,214,33,"_getAIStatus"],[215,16,214,33],[215,23,214,33,"_asyncToGenerator2"],[215,41,214,33],[215,42,214,33,"default"],[215,49,214,33],[215,51,214,7],[215,64,214,76],[216,6,215,2],[216,10,215,6],[217,8,216,4],[217,12,216,10,"isConnected"],[217,23,216,21],[217,32,216,30,"testCloudConnection"],[217,51,216,49],[217,52,216,50],[217,53,216,51],[218,8,217,4],[218,15,217,11,"isConnected"],[218,26,217,22],[218,29,217,25],[218,36,217,32],[218,39,217,35],[218,46,217,42],[219,6,218,2],[219,7,218,3],[219,8,218,4],[219,15,218,11,"error"],[219,20,218,16],[219,22,218,18],[220,8,219,4],[220,15,219,11],[220,22,219,18],[221,6,220,2],[222,4,221,0],[222,5,221,1],[223,4,221,1],[223,11,221,1,"_getAIStatus"],[223,23,221,1],[223,24,221,1,"apply"],[223,29,221,1],[223,36,221,1,"arguments"],[223,45,221,1],[224,2,221,1],[225,0,221,1],[225,3]],"functionMap":{"names":["<global>","getEmergentLLMKey","fetchWithTimeout","setTimeout$argument_0","fetch._finally$argument_0","testCloudConnection","callCloudLLM","hybridGreeting","hybridReply","slice.map$argument_0","getAIStatus"],"mappings":"AAA;0BCiB;CDM;AEE;wBCE,wBD;2CEE,sBF;CFC;OKK;CLqB;OMK;CNqE;OOK;CP6B;OQK;wDCY;MDG;CRwB;OUK"}},"type":"js/module"}]}