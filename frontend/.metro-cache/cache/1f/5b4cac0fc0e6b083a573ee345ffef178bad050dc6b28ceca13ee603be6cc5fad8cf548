{"dependencies":[{"name":"../commonTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":122},"end":{"line":4,"column":51,"index":173}}],"key":"dQSfS57Pf/C96+Vvd1rktbJJov4=","exportNames":["*"]}},{"name":"../PlatformChecker","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":174},"end":{"line":5,"column":52,"index":226}}],"key":"qXble9ybAlViAQKWCIOx+hfaZjE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /* eslint-disable reanimated/use-reanimated-error */\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getValueUnpackerCode = getValueUnpackerCode;\n  var _commonTypes = require(_dependencyMap[0]);\n  var _PlatformChecker = require(_dependencyMap[1]);\n  var _worklet_303159334415_init_data = {\n    code: \"function valueUnpacker_reactNativeReanimated_valueUnpackerTs1(objectToUnpack,category,remoteFunctionName){let workletsCache=global.__workletsCache;let handleCache=global.__handleCache;if(workletsCache===undefined){workletsCache=global.__workletsCache=new Map();handleCache=global.__handleCache=new WeakMap();}const workletHash=objectToUnpack.__workletHash;if(workletHash!==undefined){let workletFun=workletsCache.get(workletHash);if(workletFun===undefined){const initData=objectToUnpack.__initData;if(global.evalWithSourceMap){workletFun=global.evalWithSourceMap('('+initData.code+'\\\\n)',initData.location,initData.sourceMap);}else if(global.evalWithSourceUrl){workletFun=global.evalWithSourceUrl('('+initData.code+'\\\\n)',\\\"worklet_\\\"+workletHash);}else{workletFun=eval('('+initData.code+'\\\\n)');}workletsCache.set(workletHash,workletFun);}const functionInstance=workletFun.bind(objectToUnpack);objectToUnpack._recur=functionInstance;return functionInstance;}else if(objectToUnpack.__init!==undefined){let value=handleCache.get(objectToUnpack);if(value===undefined){value=objectToUnpack.__init();handleCache.set(objectToUnpack,value);}return value;}else if(category==='RemoteFunction'){const fun=function(){const label=remoteFunctionName?\\\"function `\\\"+remoteFunctionName+\\\"`\\\":'anonymous function';throw new Error(\\\"[Reanimated] Tried to synchronously call a non-worklet \\\"+label+\\\" on the UI thread.\\\\nSee https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#tried-to-synchronously-call-a-non-worklet-function-on-the-ui-thread for more details.\\\");};fun.__remoteFunction=objectToUnpack;return fun;}else{throw new Error(\\\"[Reanimated] Data type in category \\\\\\\"\\\"+category+\\\"\\\\\\\" not recognized by value unpacker: \\\\\\\"\\\"+_toString(objectToUnpack)+\\\"\\\\\\\".\\\");}}\"\n  };\n  var valueUnpacker = function () {\n    var valueUnpacker = function (objectToUnpack, category, remoteFunctionName) {\n      var workletsCache = global.__workletsCache;\n      var handleCache = global.__handleCache;\n      if (workletsCache === undefined) {\n        // init\n        workletsCache = global.__workletsCache = new Map();\n        handleCache = global.__handleCache = new WeakMap();\n      }\n      var workletHash = objectToUnpack.__workletHash;\n      if (workletHash !== undefined) {\n        var workletFun = workletsCache.get(workletHash);\n        if (workletFun === undefined) {\n          var initData = objectToUnpack.__initData;\n          if (global.evalWithSourceMap) {\n            // if the runtime (hermes only for now) supports loading source maps\n            // we want to use the proper filename for the location as it guarantees\n            // that debugger understands and loads the source code of the file where\n            // the worklet is defined.\n            workletFun = global.evalWithSourceMap('(' + initData.code + '\\n)', initData.location, initData.sourceMap);\n          } else if (global.evalWithSourceUrl) {\n            // if the runtime doesn't support loading source maps, in dev mode we\n            // can pass source url when evaluating the worklet. Now, instead of using\n            // the actual file location we use worklet hash, as it the allows us to\n            // properly symbolicate traces (see errors.ts for details)\n            workletFun = global.evalWithSourceUrl('(' + initData.code + '\\n)', `worklet_${workletHash}`);\n          } else {\n            // in release we use the regular eval to save on JSI calls\n            // eslint-disable-next-line no-eval\n            workletFun = eval('(' + initData.code + '\\n)');\n          }\n          workletsCache.set(workletHash, workletFun);\n        }\n        var functionInstance = workletFun.bind(objectToUnpack);\n        objectToUnpack._recur = functionInstance;\n        return functionInstance;\n      } else if (objectToUnpack.__init !== undefined) {\n        var value = handleCache.get(objectToUnpack);\n        if (value === undefined) {\n          value = objectToUnpack.__init();\n          handleCache.set(objectToUnpack, value);\n        }\n        return value;\n      } else if (category === 'RemoteFunction') {\n        var fun = () => {\n          var label = remoteFunctionName ? `function \\`${remoteFunctionName}\\`` : 'anonymous function';\n          throw new Error(`[Reanimated] Tried to synchronously call a non-worklet ${label} on the UI thread.\nSee https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#tried-to-synchronously-call-a-non-worklet-function-on-the-ui-thread for more details.`);\n        };\n        fun.__remoteFunction = objectToUnpack;\n        return fun;\n      } else {\n        throw new Error(`[Reanimated] Data type in category \"${category}\" not recognized by value unpacker: \"${_toString(objectToUnpack)}\".`);\n      }\n    };\n    valueUnpacker.__closure = {};\n    valueUnpacker.__workletHash = 303159334415;\n    valueUnpacker.__initData = _worklet_303159334415_init_data;\n    return valueUnpacker;\n  }();\n  var _worklet_4407688582110_init_data = {\n    code: \"function reactNativeReanimated_valueUnpackerTs2(){}\"\n  };\n  function getValueUnpackerCode() {\n    return valueUnpacker.__initData.code;\n  }\n});","lineCount":80,"map":[[2,2,1,0],[3,2,2,0],[3,14,2,12],[5,2,2,13,"Object"],[5,8,2,13],[5,9,2,13,"defineProperty"],[5,23,2,13],[5,24,2,13,"exports"],[5,31,2,13],[6,4,2,13,"value"],[6,9,2,13],[7,2,2,13],[8,2,2,13,"exports"],[8,9,2,13],[8,10,2,13,"getValueUnpackerCode"],[8,30,2,13],[8,33,2,13,"getValueUnpackerCode"],[8,53,2,13],[9,2,4,0],[9,6,4,0,"_commonTypes"],[9,18,4,0],[9,21,4,0,"require"],[9,28,4,0],[9,29,4,0,"_dependencyMap"],[9,43,4,0],[10,2,5,0],[10,6,5,0,"_PlatformChecker"],[10,22,5,0],[10,25,5,0,"require"],[10,32,5,0],[10,33,5,0,"_dependencyMap"],[10,47,5,0],[11,2,5,52],[11,6,5,52,"_worklet_303159334415_init_data"],[11,37,5,52],[12,4,5,52,"code"],[12,8,5,52],[13,2,5,52],[14,2,5,52],[14,6,5,52,"valueUnpacker"],[14,19,5,52],[14,22,7,0],[15,4,7,0],[15,8,7,0,"valueUnpacker"],[15,21,7,0],[15,33,7,0,"valueUnpacker"],[15,34,8,2,"objectToUnpack"],[15,48,8,21],[15,50,9,2,"category"],[15,58,9,19],[15,60,10,2,"remoteFunctionName"],[15,78,10,29],[15,80,11,7],[16,6,13,2],[16,10,13,6,"workletsCache"],[16,23,13,19],[16,26,13,22,"global"],[16,32,13,28],[16,33,13,29,"__workletsCache"],[16,48,13,44],[17,6,14,2],[17,10,14,6,"handleCache"],[17,21,14,17],[17,24,14,20,"global"],[17,30,14,26],[17,31,14,27,"__handleCache"],[17,44,14,40],[18,6,15,2],[18,10,15,6,"workletsCache"],[18,23,15,19],[18,28,15,24,"undefined"],[18,37,15,33],[18,39,15,35],[19,8,16,4],[20,8,17,4,"workletsCache"],[20,21,17,17],[20,24,17,20,"global"],[20,30,17,26],[20,31,17,27,"__workletsCache"],[20,46,17,42],[20,49,17,45],[20,53,17,49,"Map"],[20,56,17,52],[20,57,17,53],[20,58,17,54],[21,8,18,4,"handleCache"],[21,19,18,15],[21,22,18,18,"global"],[21,28,18,24],[21,29,18,25,"__handleCache"],[21,42,18,38],[21,45,18,41],[21,49,18,45,"WeakMap"],[21,56,18,52],[21,57,18,53],[21,58,18,54],[22,6,19,2],[23,6,20,2],[23,10,20,8,"workletHash"],[23,21,20,19],[23,24,20,22,"objectToUnpack"],[23,38,20,36],[23,39,20,37,"__workletHash"],[23,52,20,50],[24,6,21,2],[24,10,21,6,"workletHash"],[24,21,21,17],[24,26,21,22,"undefined"],[24,35,21,31],[24,37,21,33],[25,8,22,4],[25,12,22,8,"workletFun"],[25,22,22,18],[25,25,22,21,"workletsCache"],[25,38,22,34],[25,39,22,35,"get"],[25,42,22,38],[25,43,22,39,"workletHash"],[25,54,22,50],[25,55,22,51],[26,8,23,4],[26,12,23,8,"workletFun"],[26,22,23,18],[26,27,23,23,"undefined"],[26,36,23,32],[26,38,23,34],[27,10,24,6],[27,14,24,12,"initData"],[27,22,24,20],[27,25,24,23,"objectToUnpack"],[27,39,24,37],[27,40,24,38,"__initData"],[27,50,24,48],[28,10,25,6],[28,14,25,10,"global"],[28,20,25,16],[28,21,25,17,"evalWithSourceMap"],[28,38,25,34],[28,40,25,36],[29,12,26,8],[30,12,27,8],[31,12,28,8],[32,12,29,8],[33,12,30,8,"workletFun"],[33,22,30,18],[33,25,30,21,"global"],[33,31,30,27],[33,32,30,28,"evalWithSourceMap"],[33,49,30,45],[33,50,31,10],[33,53,31,13],[33,56,31,16,"initData"],[33,64,31,24],[33,65,31,25,"code"],[33,69,31,29],[33,72,31,32],[33,77,31,37],[33,79,32,10,"initData"],[33,87,32,18],[33,88,32,19,"location"],[33,96,32,27],[33,98,33,10,"initData"],[33,106,33,18],[33,107,33,19,"sourceMap"],[33,116,34,8],[33,117,34,36],[34,10,35,6],[34,11,35,7],[34,17,35,13],[34,21,35,17,"global"],[34,27,35,23],[34,28,35,24,"evalWithSourceUrl"],[34,45,35,41],[34,47,35,43],[35,12,36,8],[36,12,37,8],[37,12,38,8],[38,12,39,8],[39,12,40,8,"workletFun"],[39,22,40,18],[39,25,40,21,"global"],[39,31,40,27],[39,32,40,28,"evalWithSourceUrl"],[39,49,40,45],[39,50,41,10],[39,53,41,13],[39,56,41,16,"initData"],[39,64,41,24],[39,65,41,25,"code"],[39,69,41,29],[39,72,41,32],[39,77,41,37],[39,79,42,10],[39,90,42,21,"workletHash"],[39,101,42,32],[39,103,43,8],[39,104,43,36],[40,10,44,6],[40,11,44,7],[40,17,44,13],[41,12,45,8],[42,12,46,8],[43,12,47,8,"workletFun"],[43,22,47,18],[43,25,47,21,"eval"],[43,29,47,25],[43,30,47,26],[43,33,47,29],[43,36,47,32,"initData"],[43,44,47,40],[43,45,47,41,"code"],[43,49,47,45],[43,52,47,48],[43,57,47,53],[43,58,49,16],[44,10,50,6],[45,10,51,6,"workletsCache"],[45,23,51,19],[45,24,51,20,"set"],[45,27,51,23],[45,28,51,24,"workletHash"],[45,39,51,35],[45,41,51,37,"workletFun"],[45,51,51,47],[45,52,51,48],[46,8,52,4],[47,8,53,4],[47,12,53,10,"functionInstance"],[47,28,53,26],[47,31,53,29,"workletFun"],[47,41,53,39],[47,42,53,40,"bind"],[47,46,53,44],[47,47,53,45,"objectToUnpack"],[47,61,53,59],[47,62,53,60],[48,8,54,4,"objectToUnpack"],[48,22,54,18],[48,23,54,19,"_recur"],[48,29,54,25],[48,32,54,28,"functionInstance"],[48,48,54,44],[49,8,55,4],[49,15,55,11,"functionInstance"],[49,31,55,27],[50,6,56,2],[50,7,56,3],[50,13,56,9],[50,17,56,13,"objectToUnpack"],[50,31,56,27],[50,32,56,28,"__init"],[50,38,56,34],[50,43,56,39,"undefined"],[50,52,56,48],[50,54,56,50],[51,8,57,4],[51,12,57,8,"value"],[51,17,57,13],[51,20,57,16,"handleCache"],[51,31,57,27],[51,32,57,28,"get"],[51,35,57,31],[51,36,57,32,"objectToUnpack"],[51,50,57,46],[51,51,57,47],[52,8,58,4],[52,12,58,8,"value"],[52,17,58,13],[52,22,58,18,"undefined"],[52,31,58,27],[52,33,58,29],[53,10,59,6,"value"],[53,15,59,11],[53,18,59,14,"objectToUnpack"],[53,32,59,28],[53,33,59,29,"__init"],[53,39,59,35],[53,40,59,36],[53,41,59,37],[54,10,60,6,"handleCache"],[54,21,60,17],[54,22,60,18,"set"],[54,25,60,21],[54,26,60,22,"objectToUnpack"],[54,40,60,36],[54,42,60,38,"value"],[54,47,60,43],[54,48,60,44],[55,8,61,4],[56,8,62,4],[56,15,62,11,"value"],[56,20,62,16],[57,6,63,2],[57,7,63,3],[57,13,63,9],[57,17,63,13,"category"],[57,25,63,21],[57,30,63,26],[57,46,63,42],[57,48,63,44],[58,8,64,4],[58,12,64,10,"fun"],[58,15,64,13],[58,18,64,16,"fun"],[58,19,64,16],[58,24,64,22],[59,10,65,6],[59,14,65,12,"label"],[59,19,65,17],[59,22,65,20,"remoteFunctionName"],[59,40,65,38],[59,43,66,10],[59,57,66,24,"remoteFunctionName"],[59,75,66,42],[59,79,66,46],[59,82,67,10],[59,102,67,30],[60,10,68,6],[60,16,68,12],[60,20,68,16,"Error"],[60,25,68,21],[60,26,68,22],[60,84,68,80,"label"],[60,89,68,85],[61,0,69,0],[61,169,69,169],[61,170,69,170],[62,8,70,4],[62,9,70,5],[63,8,71,4,"fun"],[63,11,71,7],[63,12,71,8,"__remoteFunction"],[63,28,71,24],[63,31,71,27,"objectToUnpack"],[63,45,71,41],[64,8,72,4],[64,15,72,11,"fun"],[64,18,72,14],[65,6,73,2],[65,7,73,3],[65,13,73,9],[66,8,74,4],[66,14,74,10],[66,18,74,14,"Error"],[66,23,74,19],[66,24,75,6],[66,63,75,45,"category"],[66,71,75,53],[66,111,75,93,"_toString"],[66,120,75,102],[66,121,76,8,"objectToUnpack"],[66,135,77,6],[66,136,77,7],[66,140,78,4],[66,141,78,5],[67,6,79,2],[68,4,80,0],[68,5,80,1],[69,4,80,1,"valueUnpacker"],[69,17,80,1],[69,18,80,1,"__closure"],[69,27,80,1],[70,4,80,1,"valueUnpacker"],[70,17,80,1],[70,18,80,1,"__workletHash"],[70,31,80,1],[71,4,80,1,"valueUnpacker"],[71,17,80,1],[71,18,80,1,"__initData"],[71,28,80,1],[71,31,80,1,"_worklet_303159334415_init_data"],[71,62,80,1],[72,4,80,1],[72,11,80,1,"valueUnpacker"],[72,24,80,1],[73,2,80,1],[73,3,7,0],[74,2,7,0],[74,6,7,0,"_worklet_4407688582110_init_data"],[74,38,7,0],[75,4,7,0,"code"],[75,8,7,0],[76,2,7,0],[77,2,108,7],[77,11,108,16,"getValueUnpackerCode"],[77,31,108,36,"getValueUnpackerCode"],[77,32,108,36],[77,34,108,39],[78,4,109,2],[78,11,109,10,"valueUnpacker"],[78,24,109,23],[78,25,109,42,"__initData"],[78,35,109,52],[78,36,109,53,"code"],[78,40,109,57],[79,2,110,0],[80,0,110,1],[80,3]],"functionMap":{"names":["<global>","valueUnpacker","fun","<anonymous>","getValueUnpackerCode"],"mappings":"AAA;ACM;gBCyD;KDM;CDU;uBGQ;GHE;OIkB;CJE"}},"type":"js/module"}]}