{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":14},"end":{"line":2,"column":55,"index":69}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"../PlatformChecker","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":189},"end":{"line":6,"column":43,"index":232}}],"key":"qXble9ybAlViAQKWCIOx+hfaZjE=","exportNames":["*"]}},{"name":"./useEvent","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":390},"end":{"line":13,"column":38,"index":428}}],"key":"agcKO4KjKVVd8qmhkCqgPk8SZT0=","exportNames":["*"]}},{"name":"./useSharedValue","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":429},"end":{"line":14,"column":50,"index":479}}],"key":"6yldmc0IldDX63zJLZukWRMfHng=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useScrollViewOffset = undefined;\n  var _react = require(_dependencyMap[0]);\n  var _PlatformChecker = require(_dependencyMap[1]);\n  var _useEvent = require(_dependencyMap[2]);\n  var _useSharedValue = require(_dependencyMap[3]);\n  var IS_WEB = (0, _PlatformChecker.isWeb)();\n\n  /**\n   * Lets you synchronously get the current offset of a `ScrollView`.\n   *\n   * @param animatedRef - An [animated\n   *   ref](https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedRef)\n   *   attached to an Animated.ScrollView component.\n   * @returns A shared value which holds the current offset of the `ScrollView`.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/scroll/useScrollViewOffset\n   */\n  var useScrollViewOffset = exports.useScrollViewOffset = IS_WEB ? useScrollViewOffsetWeb : useScrollViewOffsetNative;\n  var _worklet_15008405174449_init_data = {\n    code: \"function reactNativeReanimated_useScrollViewOffsetTs1(){const{animatedRef,getWebScrollableElement,offset}=this.__closure;if(animatedRef){const element=getWebScrollableElement(animatedRef.current);offset.value=element.scrollLeft===0?element.scrollTop:element.scrollLeft;}}\"\n  };\n  function useScrollViewOffsetWeb(animatedRef, providedOffset) {\n    var internalOffset = (0, _useSharedValue.useSharedValue)(0);\n    var offset = (0, _react.useRef)(providedOffset ?? internalOffset).current;\n    var eventHandler = (0, _react.useCallback)(function () {\n      var reactNativeReanimated_useScrollViewOffsetTs1 = function () {\n        if (animatedRef) {\n          var element = getWebScrollableElement(animatedRef.current);\n          // scrollLeft is the X axis scrolled offset, works properly also with RTL layout\n          offset.value = element.scrollLeft === 0 ? element.scrollTop : element.scrollLeft;\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      };\n      reactNativeReanimated_useScrollViewOffsetTs1.__closure = {\n        animatedRef,\n        getWebScrollableElement,\n        offset\n      };\n      reactNativeReanimated_useScrollViewOffsetTs1.__workletHash = 15008405174449;\n      reactNativeReanimated_useScrollViewOffsetTs1.__initData = _worklet_15008405174449_init_data;\n      return reactNativeReanimated_useScrollViewOffsetTs1;\n    }(), [animatedRef, animatedRef?.current]);\n    (0, _react.useEffect)(() => {\n      var element = animatedRef?.current ? getWebScrollableElement(animatedRef.current) : null;\n      if (element) {\n        element.addEventListener('scroll', eventHandler);\n      }\n      return () => {\n        if (element) {\n          element.removeEventListener('scroll', eventHandler);\n        }\n      };\n      // React here has a problem with `animatedRef.current` since a Ref .current\n      // field shouldn't be used as a dependency. However, in this case we have\n      // to do it this way.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [animatedRef, animatedRef?.current, eventHandler]);\n    return offset;\n  }\n  var _worklet_11951456483684_init_data = {\n    code: \"function reactNativeReanimated_useScrollViewOffsetTs2(event){const{offset}=this.__closure;offset.value=event.contentOffset.x===0?event.contentOffset.y:event.contentOffset.x;}\"\n  };\n  function useScrollViewOffsetNative(animatedRef, providedOffset) {\n    var internalOffset = (0, _useSharedValue.useSharedValue)(0);\n    var offset = (0, _react.useRef)(providedOffset ?? internalOffset).current;\n    var eventHandler = (0, _useEvent.useEvent)(function () {\n      var reactNativeReanimated_useScrollViewOffsetTs2 = function (event) {\n        offset.value = event.contentOffset.x === 0 ? event.contentOffset.y : event.contentOffset.x;\n      };\n      reactNativeReanimated_useScrollViewOffsetTs2.__closure = {\n        offset\n      };\n      reactNativeReanimated_useScrollViewOffsetTs2.__workletHash = 11951456483684;\n      reactNativeReanimated_useScrollViewOffsetTs2.__initData = _worklet_11951456483684_init_data;\n      return reactNativeReanimated_useScrollViewOffsetTs2;\n    }(), scrollNativeEventNames\n    // Read https://github.com/software-mansion/react-native-reanimated/pull/5056\n    // for more information about this cast.\n    );\n    (0, _react.useEffect)(() => {\n      var elementTag = animatedRef?.getTag() ?? null;\n      if (elementTag) {\n        eventHandler.workletEventHandler.registerForEvents(elementTag);\n      }\n      return () => {\n        if (elementTag) {\n          eventHandler.workletEventHandler.unregisterFromEvents(elementTag);\n        }\n      };\n      // React here has a problem with `animatedRef.current` since a Ref .current\n      // field shouldn't be used as a dependency. However, in this case we have\n      // to do it this way.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [animatedRef, animatedRef?.current, eventHandler]);\n    return offset;\n  }\n  function getWebScrollableElement(scrollComponent) {\n    return scrollComponent?.getScrollableNode() ?? scrollComponent;\n  }\n  var scrollNativeEventNames = ['onScroll', 'onScrollBeginDrag', 'onScrollEndDrag', 'onMomentumScrollBegin', 'onMomentumScrollEnd'];\n});","lineCount":106,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"useScrollViewOffset"],[7,29,1,13],[7,32,1,13,"undefined"],[7,41,1,13],[8,2,2,0],[8,6,2,0,"_react"],[8,12,2,0],[8,15,2,0,"require"],[8,22,2,0],[8,23,2,0,"_dependencyMap"],[8,37,2,0],[9,2,6,0],[9,6,6,0,"_PlatformChecker"],[9,22,6,0],[9,25,6,0,"require"],[9,32,6,0],[9,33,6,0,"_dependencyMap"],[9,47,6,0],[10,2,13,0],[10,6,13,0,"_useEvent"],[10,15,13,0],[10,18,13,0,"require"],[10,25,13,0],[10,26,13,0,"_dependencyMap"],[10,40,13,0],[11,2,14,0],[11,6,14,0,"_useSharedValue"],[11,21,14,0],[11,24,14,0,"require"],[11,31,14,0],[11,32,14,0,"_dependencyMap"],[11,46,14,0],[12,2,16,0],[12,6,16,6,"IS_WEB"],[12,12,16,12],[12,15,16,15],[12,19,16,15,"isWeb"],[12,41,16,20],[12,43,16,21],[12,44,16,22],[14,2,18,0],[15,0,19,0],[16,0,20,0],[17,0,21,0],[18,0,22,0],[19,0,23,0],[20,0,24,0],[21,0,25,0],[22,0,26,0],[23,2,27,7],[23,6,27,13,"useScrollViewOffset"],[23,25,27,32],[23,28,27,32,"exports"],[23,35,27,32],[23,36,27,32,"useScrollViewOffset"],[23,55,27,32],[23,58,27,35,"IS_WEB"],[23,64,27,41],[23,67,28,4,"useScrollViewOffsetWeb"],[23,89,28,26],[23,92,29,4,"useScrollViewOffsetNative"],[23,117,29,29],[24,2,29,30],[24,6,29,30,"_worklet_15008405174449_init_data"],[24,39,29,30],[25,4,29,30,"code"],[25,8,29,30],[26,2,29,30],[27,2,31,0],[27,11,31,9,"useScrollViewOffsetWeb"],[27,33,31,31,"useScrollViewOffsetWeb"],[27,34,32,2,"animatedRef"],[27,45,32,53],[27,47,33,2,"providedOffset"],[27,61,33,38],[27,63,34,23],[28,4,35,2],[28,8,35,8,"internalOffset"],[28,22,35,22],[28,25,35,25],[28,29,35,25,"useSharedValue"],[28,59,35,39],[28,61,35,40],[28,62,35,41],[28,63,35,42],[29,4,36,2],[29,8,36,8,"offset"],[29,14,36,14],[29,17,36,17],[29,21,36,17,"useRef"],[29,34,36,23],[29,36,36,24,"providedOffset"],[29,50,36,38],[29,54,36,42,"internalOffset"],[29,68,36,56],[29,69,36,57],[29,70,36,58,"current"],[29,77,36,65],[30,4,38,2],[30,8,38,8,"eventHandler"],[30,20,38,20],[30,23,38,23],[30,27,38,23,"useCallback"],[30,45,38,34],[30,47,38,35],[31,6,38,35],[31,10,38,35,"reactNativeReanimated_useScrollViewOffsetTs1"],[31,54,38,35],[31,66,38,35,"reactNativeReanimated_useScrollViewOffsetTs1"],[31,67,38,35],[31,69,38,41],[32,8,40,4],[32,12,40,8,"animatedRef"],[32,23,40,19],[32,25,40,21],[33,10,41,6],[33,14,41,12,"element"],[33,21,41,19],[33,24,41,22,"getWebScrollableElement"],[33,47,41,45],[33,48,41,46,"animatedRef"],[33,59,41,57],[33,60,41,58,"current"],[33,67,41,65],[33,68,41,66],[34,10,42,6],[35,10,43,6,"offset"],[35,16,43,12],[35,17,43,13,"value"],[35,22,43,18],[35,25,44,8,"element"],[35,32,44,15],[35,33,44,16,"scrollLeft"],[35,43,44,26],[35,48,44,31],[35,49,44,32],[35,52,44,35,"element"],[35,59,44,42],[35,60,44,43,"scrollTop"],[35,69,44,52],[35,72,44,55,"element"],[35,79,44,62],[35,80,44,63,"scrollLeft"],[35,90,44,73],[36,8,45,4],[37,8,46,4],[38,6,47,2],[38,7,47,3],[39,6,47,3,"reactNativeReanimated_useScrollViewOffsetTs1"],[39,50,47,3],[39,51,47,3,"__closure"],[39,60,47,3],[40,8,47,3,"animatedRef"],[40,19,47,3],[41,8,47,3,"getWebScrollableElement"],[41,31,47,3],[42,8,47,3,"offset"],[43,6,47,3],[44,6,47,3,"reactNativeReanimated_useScrollViewOffsetTs1"],[44,50,47,3],[44,51,47,3,"__workletHash"],[44,64,47,3],[45,6,47,3,"reactNativeReanimated_useScrollViewOffsetTs1"],[45,50,47,3],[45,51,47,3,"__initData"],[45,61,47,3],[45,64,47,3,"_worklet_15008405174449_init_data"],[45,97,47,3],[46,6,47,3],[46,13,47,3,"reactNativeReanimated_useScrollViewOffsetTs1"],[46,57,47,3],[47,4,47,3],[47,5,38,35],[47,9,47,5],[47,10,47,6,"animatedRef"],[47,21,47,17],[47,23,47,19,"animatedRef"],[47,34,47,30],[47,36,47,32,"current"],[47,43,47,39],[47,44,47,40],[47,45,47,41],[48,4,49,2],[48,8,49,2,"useEffect"],[48,24,49,11],[48,26,49,12],[48,32,49,18],[49,6,50,4],[49,10,50,10,"element"],[49,17,50,17],[49,20,50,20,"animatedRef"],[49,31,50,31],[49,33,50,33,"current"],[49,40,50,40],[49,43,51,8,"getWebScrollableElement"],[49,66,51,31],[49,67,51,32,"animatedRef"],[49,78,51,43],[49,79,51,44,"current"],[49,86,51,51],[49,87,51,52],[49,90,52,8],[49,94,52,12],[50,6,54,4],[50,10,54,8,"element"],[50,17,54,15],[50,19,54,17],[51,8,55,6,"element"],[51,15,55,13],[51,16,55,14,"addEventListener"],[51,32,55,30],[51,33,55,31],[51,41,55,39],[51,43,55,41,"eventHandler"],[51,55,55,53],[51,56,55,54],[52,6,56,4],[53,6,57,4],[53,13,57,11],[53,19,57,17],[54,8,58,6],[54,12,58,10,"element"],[54,19,58,17],[54,21,58,19],[55,10,59,8,"element"],[55,17,59,15],[55,18,59,16,"removeEventListener"],[55,37,59,35],[55,38,59,36],[55,46,59,44],[55,48,59,46,"eventHandler"],[55,60,59,58],[55,61,59,59],[56,8,60,6],[57,6,61,4],[57,7,61,5],[58,6,62,4],[59,6,63,4],[60,6,64,4],[61,6,65,4],[62,4,66,2],[62,5,66,3],[62,7,66,5],[62,8,66,6,"animatedRef"],[62,19,66,17],[62,21,66,19,"animatedRef"],[62,32,66,30],[62,34,66,32,"current"],[62,41,66,39],[62,43,66,41,"eventHandler"],[62,55,66,53],[62,56,66,54],[62,57,66,55],[63,4,68,2],[63,11,68,9,"offset"],[63,17,68,15],[64,2,69,0],[65,2,69,1],[65,6,69,1,"_worklet_11951456483684_init_data"],[65,39,69,1],[66,4,69,1,"code"],[66,8,69,1],[67,2,69,1],[68,2,71,0],[68,11,71,9,"useScrollViewOffsetNative"],[68,36,71,34,"useScrollViewOffsetNative"],[68,37,72,2,"animatedRef"],[68,48,72,53],[68,50,73,2,"providedOffset"],[68,64,73,38],[68,66,74,23],[69,4,75,2],[69,8,75,8,"internalOffset"],[69,22,75,22],[69,25,75,25],[69,29,75,25,"useSharedValue"],[69,59,75,39],[69,61,75,40],[69,62,75,41],[69,63,75,42],[70,4,76,2],[70,8,76,8,"offset"],[70,14,76,14],[70,17,76,17],[70,21,76,17,"useRef"],[70,34,76,23],[70,36,76,24,"providedOffset"],[70,50,76,38],[70,54,76,42,"internalOffset"],[70,68,76,56],[70,69,76,57],[70,70,76,58,"current"],[70,77,76,65],[71,4,78,2],[71,8,78,8,"eventHandler"],[71,20,78,20],[71,23,78,23],[71,27,78,23,"useEvent"],[71,45,78,31],[71,47,79,4],[72,6,79,4],[72,10,79,4,"reactNativeReanimated_useScrollViewOffsetTs2"],[72,54,79,4],[72,66,79,4,"reactNativeReanimated_useScrollViewOffsetTs2"],[72,67,79,5,"event"],[72,72,79,33],[72,74,79,38],[73,8,81,6,"offset"],[73,14,81,12],[73,15,81,13,"value"],[73,20,81,18],[73,23,82,8,"event"],[73,28,82,13],[73,29,82,14,"contentOffset"],[73,42,82,27],[73,43,82,28,"x"],[73,44,82,29],[73,49,82,34],[73,50,82,35],[73,53,83,12,"event"],[73,58,83,17],[73,59,83,18,"contentOffset"],[73,72,83,31],[73,73,83,32,"y"],[73,74,83,33],[73,77,84,12,"event"],[73,82,84,17],[73,83,84,18,"contentOffset"],[73,96,84,31],[73,97,84,32,"x"],[73,98,84,33],[74,6,85,4],[74,7,85,5],[75,6,85,5,"reactNativeReanimated_useScrollViewOffsetTs2"],[75,50,85,5],[75,51,85,5,"__closure"],[75,60,85,5],[76,8,85,5,"offset"],[77,6,85,5],[78,6,85,5,"reactNativeReanimated_useScrollViewOffsetTs2"],[78,50,85,5],[78,51,85,5,"__workletHash"],[78,64,85,5],[79,6,85,5,"reactNativeReanimated_useScrollViewOffsetTs2"],[79,50,85,5],[79,51,85,5,"__initData"],[79,61,85,5],[79,64,85,5,"_worklet_11951456483684_init_data"],[79,97,85,5],[80,6,85,5],[80,13,85,5,"reactNativeReanimated_useScrollViewOffsetTs2"],[80,57,85,5],[81,4,85,5],[81,5,79,4],[81,9,86,4,"scrollNativeEventNames"],[82,4,87,4],[83,4,88,4],[84,4,89,2],[84,5,89,61],[85,4,91,2],[85,8,91,2,"useEffect"],[85,24,91,11],[85,26,91,12],[85,32,91,18],[86,6,92,4],[86,10,92,10,"elementTag"],[86,20,92,20],[86,23,92,23,"animatedRef"],[86,34,92,34],[86,36,92,36,"getTag"],[86,42,92,42],[86,43,92,43],[86,44,92,44],[86,48,92,48],[86,52,92,52],[87,6,94,4],[87,10,94,8,"elementTag"],[87,20,94,18],[87,22,94,20],[88,8,95,6,"eventHandler"],[88,20,95,18],[88,21,95,19,"workletEventHandler"],[88,40,95,38],[88,41,95,39,"registerForEvents"],[88,58,95,56],[88,59,95,57,"elementTag"],[88,69,95,67],[88,70,95,68],[89,6,96,4],[90,6,97,4],[90,13,97,11],[90,19,97,17],[91,8,98,6],[91,12,98,10,"elementTag"],[91,22,98,20],[91,24,98,22],[92,10,99,8,"eventHandler"],[92,22,99,20],[92,23,99,21,"workletEventHandler"],[92,42,99,40],[92,43,99,41,"unregisterFromEvents"],[92,63,99,61],[92,64,99,62,"elementTag"],[92,74,99,72],[92,75,99,73],[93,8,100,6],[94,6,101,4],[94,7,101,5],[95,6,102,4],[96,6,103,4],[97,6,104,4],[98,6,105,4],[99,4,106,2],[99,5,106,3],[99,7,106,5],[99,8,106,6,"animatedRef"],[99,19,106,17],[99,21,106,19,"animatedRef"],[99,32,106,30],[99,34,106,32,"current"],[99,41,106,39],[99,43,106,41,"eventHandler"],[99,55,106,53],[99,56,106,54],[99,57,106,55],[100,4,108,2],[100,11,108,9,"offset"],[100,17,108,15],[101,2,109,0],[102,2,111,0],[102,11,111,9,"getWebScrollableElement"],[102,34,111,32,"getWebScrollableElement"],[102,35,112,2,"scrollComponent"],[102,50,112,44],[102,52,113,15],[103,4,114,2],[103,11,115,5,"scrollComponent"],[103,26,115,20],[103,28,115,22,"getScrollableNode"],[103,45,115,39],[103,46,115,40],[103,47,115,41],[103,51,116,4,"scrollComponent"],[103,66,116,19],[104,2,118,0],[105,2,120,0],[105,6,120,6,"scrollNativeEventNames"],[105,28,120,28],[105,31,120,31],[105,32,121,2],[105,42,121,12],[105,44,122,2],[105,63,122,21],[105,65,123,2],[105,82,123,19],[105,84,124,2],[105,107,124,25],[105,109,125,2],[105,130,125,23],[105,131,126,1],[106,0,126,2],[106,3]],"functionMap":{"names":["<global>","useScrollViewOffsetWeb","eventHandler","useEffect$argument_0","<anonymous>","useScrollViewOffsetNative","useEvent$argument_0","getWebScrollableElement"],"mappings":"AAA;AC8B;mCCO;GDS;YEE;WCQ;KDI;GFK;CDG;AKE;ICQ;KDM;YFM;WCM;KDI;GEK;CLG;AOE;CPO"}},"type":"js/module"}]}