{"dependencies":[{"name":"../Colors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":14},"end":{"line":2,"column":58,"index":72}}],"key":"Y2vNB3FL9La5/kx04BGVY2eun0w=","exportNames":["*"]}},{"name":"../logger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":231},"end":{"line":12,"column":35,"index":266}}],"key":"6mnFiA+8QMwCo5SHGzE3xLi0NTk=","exportNames":["*"]}},{"name":"./timing","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":326},"end":{"line":14,"column":38,"index":364}}],"key":"8G0J5ZgC1xgz1yVxjoeeRXaJyTc=","exportNames":["*"]}},{"name":"./util","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":365},"end":{"line":15,"column":69,"index":434}}],"key":"1+hZBLc/k6i18AZJ4yHV73uDZHQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.withStyleAnimation = undefined;\n  var _Colors = require(_dependencyMap[0]);\n  var _logger = require(_dependencyMap[1]);\n  var _timing = require(_dependencyMap[2]);\n  var _util = require(_dependencyMap[3]);\n  // resolves path to value for nested objects\n  // if path cannot be resolved returns undefined\n  var _worklet_3633598475652_init_data = {\n    code: \"function resolvePath_reactNativeReanimated_styleAnimationTs1(obj,path){const keys=Array.isArray(path)?path:[path];return keys.reduce(function(acc,current){if(Array.isArray(acc)&&typeof current==='number'){return acc[current];}else if(acc!==null&&typeof acc==='object'&&current in acc){return acc[current];}return undefined;},obj);}\"\n  };\n  var resolvePath = function () {\n    var resolvePath = function (obj, path) {\n      var keys = Array.isArray(path) ? path : [path];\n      return keys.reduce((acc, current) => {\n        if (Array.isArray(acc) && typeof current === 'number') {\n          return acc[current];\n        } else if (acc !== null && typeof acc === 'object' && current in acc) {\n          return acc[current];\n        }\n        return undefined;\n      }, obj);\n    };\n    resolvePath.__closure = {};\n    resolvePath.__workletHash = 3633598475652;\n    resolvePath.__initData = _worklet_3633598475652_init_data;\n    return resolvePath;\n  }(); // set value at given path\n  var _worklet_14348847970839_init_data = {\n    code: \"function setPath_reactNativeReanimated_styleAnimationTs2(obj,path,value){const keys=Array.isArray(path)?path:[path];let currObj=obj;for(let i=0;i<keys.length-1;i++){currObj=currObj;if(!(keys[i]in currObj)){if(typeof keys[i+1]==='number'){currObj[keys[i]]=[];}else{currObj[keys[i]]={};}}currObj=currObj[keys[i]];}currObj[keys[keys.length-1]]=value;}\"\n  };\n  var setPath = function () {\n    var setPath = function (obj, path, value) {\n      var keys = Array.isArray(path) ? path : [path];\n      var currObj = obj;\n      for (var i = 0; i < keys.length - 1; i++) {\n        // creates entry if there isn't one\n        currObj = currObj;\n        if (!(keys[i] in currObj)) {\n          // if next key is a number create an array\n          if (typeof keys[i + 1] === 'number') {\n            currObj[keys[i]] = [];\n          } else {\n            currObj[keys[i]] = {};\n          }\n        }\n        currObj = currObj[keys[i]];\n      }\n      currObj[keys[keys.length - 1]] = value;\n    };\n    setPath.__closure = {};\n    setPath.__workletHash = 14348847970839;\n    setPath.__initData = _worklet_14348847970839_init_data;\n    return setPath;\n  }();\n  var _worklet_11964435102020_init_data = {\n    code: \"function withStyleAnimation_reactNativeReanimated_styleAnimationTs3(styleAnimations){const{defineAnimation,ColorProperties,setPath,processColor,resolvePath,__DEV__,logger,isValidLayoutAnimationProp,withTiming}=this.__closure;return defineAnimation({},function(){'worklet';const onFrame=function(animation,now){let stillGoing=false;const entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}const finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}const isAnimatingColorProp=ColorProperties.includes(currentEntry.path[0]);setPath(animation.current,currentEntry.path,isAnimatingColorProp?processColor(currentStyleAnimation.current):currentStyleAnimation.current);}}return!stillGoing;};const onStart=function(animation,value,now,previousAnimation){const entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);let prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}if(__DEV__){if(prevVal===undefined){logger.warn(\\\"Initial values for animation are missing for property \\\"+currentEntry.path.join('.'));}const propName=currentEntry.path[0];if(typeof propName==='string'&&!isValidLayoutAnimationProp(propName.trim())){logger.warn(\\\"'\\\"+propName+\\\"' property is not officially supported for layout animations. It may not work as expected.\\\");}}setPath(animation.current,currentEntry.path,prevVal);let currentAnimation;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};const callback=function(finished){if(!finished){const animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){const currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(const element of currentAnimation){animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(const value of Object.values(currentAnimation)){animationsToCheck.push(value);}}else{const currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};});}\"\n  };\n  var _worklet_7200670419559_init_data = {\n    code: \"function reactNativeReanimated_styleAnimationTs4(){const{ColorProperties,setPath,processColor,styleAnimations,resolvePath,__DEV__,logger,isValidLayoutAnimationProp,withTiming}=this.__closure;const onFrame=function(animation,now){let stillGoing=false;const entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}const finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}const isAnimatingColorProp=ColorProperties.includes(currentEntry.path[0]);setPath(animation.current,currentEntry.path,isAnimatingColorProp?processColor(currentStyleAnimation.current):currentStyleAnimation.current);}}return!stillGoing;};const onStart=function(animation,value,now,previousAnimation){const entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);let prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}if(__DEV__){if(prevVal===undefined){logger.warn(\\\"Initial values for animation are missing for property \\\"+currentEntry.path.join('.'));}const propName=currentEntry.path[0];if(typeof propName==='string'&&!isValidLayoutAnimationProp(propName.trim())){logger.warn(\\\"'\\\"+propName+\\\"' property is not officially supported for layout animations. It may not work as expected.\\\");}}setPath(animation.current,currentEntry.path,prevVal);let currentAnimation;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};const callback=function(finished){if(!finished){const animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){const currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(const element of currentAnimation){animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(const value of Object.values(currentAnimation)){animationsToCheck.push(value);}}else{const currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};}\"\n  };\n  var withStyleAnimation = exports.withStyleAnimation = function () {\n    var withStyleAnimation = function (styleAnimations) {\n      return (0, _util.defineAnimation)({}, function () {\n        var reactNativeReanimated_styleAnimationTs4 = function () {\n          var onFrame = (animation, now) => {\n            var stillGoing = false;\n            var entriesToCheck = [{\n              value: animation.styleAnimations,\n              path: []\n            }];\n            while (entriesToCheck.length > 0) {\n              var currentEntry = entriesToCheck.pop();\n              if (Array.isArray(currentEntry.value)) {\n                for (var index = 0; index < currentEntry.value.length; index++) {\n                  entriesToCheck.push({\n                    value: currentEntry.value[index],\n                    path: currentEntry.path.concat(index)\n                  });\n                }\n              } else if (typeof currentEntry.value === 'object' && currentEntry.value.onFrame === undefined) {\n                // nested object\n                for (var _key of Object.keys(currentEntry.value)) {\n                  entriesToCheck.push({\n                    value: currentEntry.value[_key],\n                    path: currentEntry.path.concat(_key)\n                  });\n                }\n              } else {\n                var currentStyleAnimation = currentEntry.value;\n                if (currentStyleAnimation.finished) {\n                  continue;\n                }\n                var finished = currentStyleAnimation.onFrame(currentStyleAnimation, now);\n                if (finished) {\n                  currentStyleAnimation.finished = true;\n                  if (currentStyleAnimation.callback) {\n                    currentStyleAnimation.callback(true);\n                  }\n                } else {\n                  stillGoing = true;\n                }\n\n                // When working with animations changing colors, we need to make sure that each one of them begins with a rgba, not a processed number.\n                // Thus, we only set the path to a processed color, but currentStyleAnimation.current stays as rgba.\n                var isAnimatingColorProp = _Colors.ColorProperties.includes(currentEntry.path[0]);\n                setPath(animation.current, currentEntry.path, isAnimatingColorProp ? (0, _Colors.processColor)(currentStyleAnimation.current) : currentStyleAnimation.current);\n              }\n            }\n            return !stillGoing;\n          };\n          var onStart = (animation, value, now, previousAnimation) => {\n            var entriesToCheck = [{\n              value: styleAnimations,\n              path: []\n            }];\n            while (entriesToCheck.length > 0) {\n              var currentEntry = entriesToCheck.pop();\n              if (Array.isArray(currentEntry.value)) {\n                for (var index = 0; index < currentEntry.value.length; index++) {\n                  entriesToCheck.push({\n                    value: currentEntry.value[index],\n                    path: currentEntry.path.concat(index)\n                  });\n                }\n              } else if (typeof currentEntry.value === 'object' && currentEntry.value.onStart === undefined) {\n                for (var _key2 of Object.keys(currentEntry.value)) {\n                  entriesToCheck.push({\n                    value: currentEntry.value[_key2],\n                    path: currentEntry.path.concat(_key2)\n                  });\n                }\n              } else {\n                var prevAnimation = resolvePath(previousAnimation?.styleAnimations, currentEntry.path);\n                var prevVal = resolvePath(value, currentEntry.path);\n                if (prevAnimation && !prevVal) {\n                  prevVal = prevAnimation.current;\n                }\n                setPath(animation.current, currentEntry.path, prevVal);\n                var currentAnimation = undefined;\n                if (typeof currentEntry.value !== 'object' || !currentEntry.value.onStart) {\n                  currentAnimation = (0, _timing.withTiming)(currentEntry.value, {\n                    duration: 0\n                  }); // TODO TYPESCRIPT this temporary cast is to get rid of .d.ts file.\n                  setPath(animation.styleAnimations, currentEntry.path, currentAnimation);\n                } else {\n                  currentAnimation = currentEntry.value;\n                }\n                currentAnimation.onStart(currentAnimation, prevVal, now, prevAnimation);\n              }\n            }\n          };\n          var callback = finished => {\n            if (!finished) {\n              var animationsToCheck = [styleAnimations];\n              while (animationsToCheck.length > 0) {\n                var currentAnimation = animationsToCheck.pop();\n                if (Array.isArray(currentAnimation)) {\n                  for (var element of currentAnimation) {\n                    animationsToCheck.push(element);\n                  }\n                } else if (typeof currentAnimation === 'object' && currentAnimation.onStart === undefined) {\n                  for (var value of Object.values(currentAnimation)) {\n                    animationsToCheck.push(value);\n                  }\n                } else {\n                  var currentStyleAnimation = currentAnimation;\n                  if (!currentStyleAnimation.finished && currentStyleAnimation.callback) {\n                    currentStyleAnimation.callback(false);\n                  }\n                }\n              }\n            }\n          };\n          return {\n            isHigherOrder: true,\n            onFrame,\n            onStart,\n            current: {},\n            styleAnimations,\n            callback\n          };\n        };\n        reactNativeReanimated_styleAnimationTs4.__closure = {\n          ColorProperties: _Colors.ColorProperties,\n          setPath,\n          processColor: _Colors.processColor,\n          styleAnimations,\n          resolvePath,\n          __DEV__: false,\n          logger: _logger.logger,\n          isValidLayoutAnimationProp: _util.isValidLayoutAnimationProp,\n          withTiming: _timing.withTiming\n        };\n        reactNativeReanimated_styleAnimationTs4.__workletHash = 7200670419559;\n        reactNativeReanimated_styleAnimationTs4.__initData = _worklet_7200670419559_init_data;\n        return reactNativeReanimated_styleAnimationTs4;\n      }());\n    };\n    withStyleAnimation.__closure = {\n      defineAnimation: _util.defineAnimation,\n      ColorProperties: _Colors.ColorProperties,\n      setPath,\n      processColor: _Colors.processColor,\n      resolvePath,\n      __DEV__: false,\n      logger: _logger.logger,\n      isValidLayoutAnimationProp: _util.isValidLayoutAnimationProp,\n      withTiming: _timing.withTiming\n    };\n    withStyleAnimation.__workletHash = 11964435102020;\n    withStyleAnimation.__initData = _worklet_11964435102020_init_data;\n    return withStyleAnimation;\n  }();\n});","lineCount":220,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"withStyleAnimation"],[7,28,1,13],[7,31,1,13,"undefined"],[7,40,1,13],[8,2,2,0],[8,6,2,0,"_Colors"],[8,13,2,0],[8,16,2,0,"require"],[8,23,2,0],[8,24,2,0,"_dependencyMap"],[8,38,2,0],[9,2,12,0],[9,6,12,0,"_logger"],[9,13,12,0],[9,16,12,0,"require"],[9,23,12,0],[9,24,12,0,"_dependencyMap"],[9,38,12,0],[10,2,14,0],[10,6,14,0,"_timing"],[10,13,14,0],[10,16,14,0,"require"],[10,23,14,0],[10,24,14,0,"_dependencyMap"],[10,38,14,0],[11,2,15,0],[11,6,15,0,"_util"],[11,11,15,0],[11,14,15,0,"require"],[11,21,15,0],[11,22,15,0,"_dependencyMap"],[11,36,15,0],[12,2,17,0],[13,2,18,0],[14,2,18,0],[14,6,18,0,"_worklet_3633598475652_init_data"],[14,38,18,0],[15,4,18,0,"code"],[15,8,18,0],[16,2,18,0],[17,2,18,0],[17,6,18,0,"resolvePath"],[17,17,18,0],[17,20,19,0],[18,4,19,0],[18,8,19,0,"resolvePath"],[18,19,19,0],[18,31,19,0,"resolvePath"],[18,32,20,2,"obj"],[18,35,20,22],[18,37,21,2,"path"],[18,41,21,43],[18,43,22,37],[19,6,24,2],[19,10,24,8,"keys"],[19,14,24,31],[19,17,24,34,"Array"],[19,22,24,39],[19,23,24,40,"isArray"],[19,30,24,47],[19,31,24,48,"path"],[19,35,24,52],[19,36,24,53],[19,39,24,56,"path"],[19,43,24,60],[19,46,24,63],[19,47,24,64,"path"],[19,51,24,68],[19,52,24,69],[20,6,25,2],[20,13,25,9,"keys"],[20,17,25,13],[20,18,25,14,"reduce"],[20,24,25,20],[20,25,25,56],[20,26,25,57,"acc"],[20,29,25,60],[20,31,25,62,"current"],[20,38,25,69],[20,43,25,74],[21,8,26,4],[21,12,26,8,"Array"],[21,17,26,13],[21,18,26,14,"isArray"],[21,25,26,21],[21,26,26,22,"acc"],[21,29,26,25],[21,30,26,26],[21,34,26,30],[21,41,26,37,"current"],[21,48,26,44],[21,53,26,49],[21,61,26,57],[21,63,26,59],[22,10,27,6],[22,17,27,13,"acc"],[22,20,27,16],[22,21,27,17,"current"],[22,28,27,24],[22,29,27,25],[23,8,28,4],[23,9,28,5],[23,15,28,11],[23,19,29,6,"acc"],[23,22,29,9],[23,27,29,14],[23,31,29,18],[23,35,30,6],[23,42,30,13,"acc"],[23,45,30,16],[23,50,30,21],[23,58,30,29],[23,62,31,7,"current"],[23,69,31,14],[23,73,31,38,"acc"],[23,76,31,41],[23,78,32,6],[24,10,33,6],[24,17,33,14,"acc"],[24,20,33,17],[24,21,34,8,"current"],[24,28,34,15],[24,29,35,7],[25,8,36,4],[26,8,37,4],[26,15,37,11,"undefined"],[26,24,37,20],[27,6,38,2],[27,7,38,3],[27,9,38,5,"obj"],[27,12,38,8],[27,13,38,9],[28,4,39,0],[28,5,39,1],[29,4,39,1,"resolvePath"],[29,15,39,1],[29,16,39,1,"__closure"],[29,25,39,1],[30,4,39,1,"resolvePath"],[30,15,39,1],[30,16,39,1,"__workletHash"],[30,29,39,1],[31,4,39,1,"resolvePath"],[31,15,39,1],[31,16,39,1,"__initData"],[31,26,39,1],[31,29,39,1,"_worklet_3633598475652_init_data"],[31,61,39,1],[32,4,39,1],[32,11,39,1,"resolvePath"],[32,22,39,1],[33,2,39,1],[33,3,19,0],[33,7,41,0],[34,2,41,0],[34,6,41,0,"_worklet_14348847970839_init_data"],[34,39,41,0],[35,4,41,0,"code"],[35,8,41,0],[36,2,41,0],[37,2,41,0],[37,6,41,0,"setPath"],[37,13,41,0],[37,16,43,0],[38,4,43,0],[38,8,43,0,"setPath"],[38,15,43,0],[38,27,43,0,"setPath"],[38,28,44,2,"obj"],[38,31,44,22],[38,33,45,2,"path"],[38,37,45,12],[38,39,46,2,"value"],[38,44,46,30],[38,46,47,8],[39,6,49,2],[39,10,49,8,"keys"],[39,14,49,18],[39,17,49,21,"Array"],[39,22,49,26],[39,23,49,27,"isArray"],[39,30,49,34],[39,31,49,35,"path"],[39,35,49,39],[39,36,49,40],[39,39,49,43,"path"],[39,43,49,47],[39,46,49,50],[39,47,49,51,"path"],[39,51,49,55],[39,52,49,56],[40,6,50,2],[40,10,50,6,"currObj"],[40,17,50,36],[40,20,50,39,"obj"],[40,23,50,42],[41,6,51,2],[41,11,51,7],[41,15,51,11,"i"],[41,16,51,12],[41,19,51,15],[41,20,51,16],[41,22,51,18,"i"],[41,23,51,19],[41,26,51,22,"keys"],[41,30,51,26],[41,31,51,27,"length"],[41,37,51,33],[41,40,51,36],[41,41,51,37],[41,43,51,39,"i"],[41,44,51,40],[41,46,51,42],[41,48,51,44],[42,8,52,4],[43,8,53,4,"currObj"],[43,15,53,11],[43,18,53,14,"currObj"],[43,25,53,65],[44,8,54,4],[44,12,54,8],[44,14,54,10,"keys"],[44,18,54,14],[44,19,54,15,"i"],[44,20,54,16],[44,21,54,17],[44,25,54,21,"currObj"],[44,32,54,28],[44,33,54,29],[44,35,54,31],[45,10,55,6],[46,10,56,6],[46,14,56,10],[46,21,56,17,"keys"],[46,25,56,21],[46,26,56,22,"i"],[46,27,56,23],[46,30,56,26],[46,31,56,27],[46,32,56,28],[46,37,56,33],[46,45,56,41],[46,47,56,43],[47,12,57,8,"currObj"],[47,19,57,15],[47,20,57,16,"keys"],[47,24,57,20],[47,25,57,21,"i"],[47,26,57,22],[47,27,57,23],[47,28,57,24],[47,31,57,27],[47,33,57,29],[48,10,58,6],[48,11,58,7],[48,17,58,13],[49,12,59,8,"currObj"],[49,19,59,15],[49,20,59,16,"keys"],[49,24,59,20],[49,25,59,21,"i"],[49,26,59,22],[49,27,59,23],[49,28,59,24],[49,31,59,27],[49,32,59,28],[49,33,59,29],[50,10,60,6],[51,8,61,4],[52,8,62,4,"currObj"],[52,15,62,11],[52,18,62,14,"currObj"],[52,25,62,21],[52,26,62,22,"keys"],[52,30,62,26],[52,31,62,27,"i"],[52,32,62,28],[52,33,62,29],[52,34,62,30],[53,6,63,2],[54,6,65,3,"currObj"],[54,13,65,10],[54,14,65,56,"keys"],[54,18,65,60],[54,19,65,61,"keys"],[54,23,65,65],[54,24,65,66,"length"],[54,30,65,72],[54,33,65,75],[54,34,65,76],[54,35,65,77],[54,36,65,78],[54,39,66,4,"value"],[54,44,66,9],[55,4,67,0],[55,5,67,1],[56,4,67,1,"setPath"],[56,11,67,1],[56,12,67,1,"__closure"],[56,21,67,1],[57,4,67,1,"setPath"],[57,11,67,1],[57,12,67,1,"__workletHash"],[57,25,67,1],[58,4,67,1,"setPath"],[58,11,67,1],[58,12,67,1,"__initData"],[58,22,67,1],[58,25,67,1,"_worklet_14348847970839_init_data"],[58,58,67,1],[59,4,67,1],[59,11,67,1,"setPath"],[59,18,67,1],[60,2,67,1],[60,3,43,0],[61,2,43,0],[61,6,43,0,"_worklet_11964435102020_init_data"],[61,39,43,0],[62,4,43,0,"code"],[62,8,43,0],[63,2,43,0],[64,2,43,0],[64,6,43,0,"_worklet_7200670419559_init_data"],[64,38,43,0],[65,4,43,0,"code"],[65,8,43,0],[66,2,43,0],[67,2,43,0],[67,6,43,0,"withStyleAnimation"],[67,24,43,0],[67,27,43,0,"exports"],[67,34,43,0],[67,35,43,0,"withStyleAnimation"],[67,53,43,0],[67,56,74,7],[68,4,74,7],[68,8,74,7,"withStyleAnimation"],[68,26,74,7],[68,38,74,7,"withStyleAnimation"],[68,39,75,2,"styleAnimations"],[68,54,75,37],[68,56,76,24],[69,6,78,2],[69,13,78,9],[69,17,78,9,"defineAnimation"],[69,38,78,24],[69,40,78,47],[69,41,78,48],[69,42,78,49],[69,44,78,51],[70,8,78,51],[70,12,78,51,"reactNativeReanimated_styleAnimationTs4"],[70,51,78,51],[70,63,78,51,"reactNativeReanimated_styleAnimationTs4"],[70,64,78,51],[70,66,78,57],[71,10,81,4],[71,14,81,10,"onFrame"],[71,21,81,17],[71,24,81,20,"onFrame"],[71,25,82,6,"animation"],[71,34,82,37],[71,36,83,6,"now"],[71,39,83,20],[71,44,84,18],[72,12,85,6],[72,16,85,10,"stillGoing"],[72,26,85,20],[72,29,85,23],[72,34,85,28],[73,12,86,6],[73,16,86,12,"entriesToCheck"],[73,30,86,64],[73,33,86,67],[73,34,87,8],[74,14,87,10,"value"],[74,19,87,15],[74,21,87,17,"animation"],[74,30,87,26],[74,31,87,27,"styleAnimations"],[74,46,87,42],[75,14,87,44,"path"],[75,18,87,48],[75,20,87,50],[76,12,87,53],[76,13,87,54],[76,14,88,7],[77,12,89,6],[77,19,89,13,"entriesToCheck"],[77,33,89,27],[77,34,89,28,"length"],[77,40,89,34],[77,43,89,37],[77,44,89,38],[77,46,89,40],[78,14,90,8],[78,18,90,14,"currentEntry"],[78,30,90,62],[78,33,91,10,"entriesToCheck"],[78,47,91,24],[78,48,91,25,"pop"],[78,51,91,28],[78,52,91,29],[78,53,91,68],[79,14,92,8],[79,18,92,12,"Array"],[79,23,92,17],[79,24,92,18,"isArray"],[79,31,92,25],[79,32,92,26,"currentEntry"],[79,44,92,38],[79,45,92,39,"value"],[79,50,92,44],[79,51,92,45],[79,53,92,47],[80,16,93,10],[80,21,93,15],[80,25,93,19,"index"],[80,30,93,24],[80,33,93,27],[80,34,93,28],[80,36,93,30,"index"],[80,41,93,35],[80,44,93,38,"currentEntry"],[80,56,93,50],[80,57,93,51,"value"],[80,62,93,56],[80,63,93,57,"length"],[80,69,93,63],[80,71,93,65,"index"],[80,76,93,70],[80,78,93,72],[80,80,93,74],[81,18,94,12,"entriesToCheck"],[81,32,94,26],[81,33,94,27,"push"],[81,37,94,31],[81,38,94,32],[82,20,95,14,"value"],[82,25,95,19],[82,27,95,21,"currentEntry"],[82,39,95,33],[82,40,95,34,"value"],[82,45,95,39],[82,46,95,40,"index"],[82,51,95,45],[82,52,95,46],[83,20,96,14,"path"],[83,24,96,18],[83,26,96,20,"currentEntry"],[83,38,96,32],[83,39,96,33,"path"],[83,43,96,37],[83,44,96,38,"concat"],[83,50,96,44],[83,51,96,45,"index"],[83,56,96,50],[84,18,97,12],[84,19,97,13],[84,20,97,14],[85,16,98,10],[86,14,99,8],[86,15,99,9],[86,21,99,15],[86,25,100,10],[86,32,100,17,"currentEntry"],[86,44,100,29],[86,45,100,30,"value"],[86,50,100,35],[86,55,100,40],[86,63,100,48],[86,67,101,10,"currentEntry"],[86,79,101,22],[86,80,101,23,"value"],[86,85,101,28],[86,86,101,29,"onFrame"],[86,93,101,36],[86,98,101,41,"undefined"],[86,107,101,50],[86,109,102,10],[87,16,103,10],[88,16,104,10],[88,21,104,15],[88,25,104,21,"key"],[88,29,104,24],[88,33,104,28,"Object"],[88,39,104,34],[88,40,104,35,"keys"],[88,44,104,39],[88,45,104,40,"currentEntry"],[88,57,104,52],[88,58,104,53,"value"],[88,63,104,58],[88,64,104,59],[88,66,104,61],[89,18,105,12,"entriesToCheck"],[89,32,105,26],[89,33,105,27,"push"],[89,37,105,31],[89,38,105,32],[90,20,106,14,"value"],[90,25,106,19],[90,27,106,21,"currentEntry"],[90,39,106,33],[90,40,106,34,"value"],[90,45,106,39],[90,46,106,40,"key"],[90,50,106,43],[90,51,106,44],[91,20,107,14,"path"],[91,24,107,18],[91,26,107,20,"currentEntry"],[91,38,107,32],[91,39,107,33,"path"],[91,43,107,37],[91,44,107,38,"concat"],[91,50,107,44],[91,51,107,45,"key"],[91,55,107,48],[92,18,108,12],[92,19,108,13],[92,20,108,14],[93,16,109,10],[94,14,110,8],[94,15,110,9],[94,21,110,15],[95,16,111,10],[95,20,111,16,"currentStyleAnimation"],[95,41,111,54],[95,44,112,12,"currentEntry"],[95,56,112,24],[95,57,112,25,"value"],[95,62,112,49],[96,16,113,10],[96,20,113,14,"currentStyleAnimation"],[96,41,113,35],[96,42,113,36,"finished"],[96,50,113,44],[96,52,113,46],[97,18,114,12],[98,16,115,10],[99,16,116,10],[99,20,116,16,"finished"],[99,28,116,24],[99,31,116,27,"currentStyleAnimation"],[99,52,116,48],[99,53,116,49,"onFrame"],[99,60,116,56],[99,61,117,12,"currentStyleAnimation"],[99,82,117,33],[99,84,118,12,"now"],[99,87,119,10],[99,88,119,11],[100,16,120,10],[100,20,120,14,"finished"],[100,28,120,22],[100,30,120,24],[101,18,121,12,"currentStyleAnimation"],[101,39,121,33],[101,40,121,34,"finished"],[101,48,121,42],[101,51,121,45],[101,55,121,49],[102,18,122,12],[102,22,122,16,"currentStyleAnimation"],[102,43,122,37],[102,44,122,38,"callback"],[102,52,122,46],[102,54,122,48],[103,20,123,14,"currentStyleAnimation"],[103,41,123,35],[103,42,123,36,"callback"],[103,50,123,44],[103,51,123,45],[103,55,123,49],[103,56,123,50],[104,18,124,12],[105,16,125,10],[105,17,125,11],[105,23,125,17],[106,18,126,12,"stillGoing"],[106,28,126,22],[106,31,126,25],[106,35,126,29],[107,16,127,10],[109,16,129,10],[110,16,130,10],[111,16,131,10],[111,20,131,16,"isAnimatingColorProp"],[111,40,131,36],[111,43,131,39,"ColorProperties"],[111,66,131,54],[111,67,131,55,"includes"],[111,75,131,63],[111,76,132,12,"currentEntry"],[111,88,132,24],[111,89,132,25,"path"],[111,93,132,29],[111,94,132,30],[111,95,132,31],[111,96,133,10],[111,97,133,11],[112,16,135,10,"setPath"],[112,23,135,17],[112,24,136,12,"animation"],[112,33,136,21],[112,34,136,22,"current"],[112,41,136,29],[112,43,137,12,"currentEntry"],[112,55,137,24],[112,56,137,25,"path"],[112,60,137,29],[112,62,138,12,"isAnimatingColorProp"],[112,82,138,32],[112,85,139,16],[112,89,139,16,"processColor"],[112,109,139,28],[112,111,139,29,"currentStyleAnimation"],[112,132,139,50],[112,133,139,51,"current"],[112,140,139,58],[112,141,139,59],[112,144,140,16,"currentStyleAnimation"],[112,165,140,37],[112,166,140,38,"current"],[112,173,141,10],[112,174,141,11],[113,14,142,8],[114,12,143,6],[115,12,144,6],[115,19,144,13],[115,20,144,14,"stillGoing"],[115,30,144,24],[116,10,145,4],[116,11,145,5],[117,10,147,4],[117,14,147,10,"onStart"],[117,21,147,17],[117,24,147,20,"onStart"],[117,25,148,6,"animation"],[117,34,148,37],[117,36,149,6,"value"],[117,41,149,31],[117,43,150,6,"now"],[117,46,150,20],[117,48,151,6,"previousAnimation"],[117,65,151,45],[117,70,152,15],[118,12,153,6],[118,16,153,12,"entriesToCheck"],[118,30,155,9],[118,33,155,12],[118,34,155,13],[119,14,155,15,"value"],[119,19,155,20],[119,21,155,22,"styleAnimations"],[119,36,155,37],[120,14,155,39,"path"],[120,18,155,43],[120,20,155,45],[121,12,155,48],[121,13,155,49],[121,14,155,50],[122,12,156,6],[122,19,156,13,"entriesToCheck"],[122,33,156,27],[122,34,156,28,"length"],[122,40,156,34],[122,43,156,37],[122,44,156,38],[122,46,156,40],[123,14,157,8],[123,18,157,14,"currentEntry"],[123,30,159,9],[123,33,159,12,"entriesToCheck"],[123,47,159,26],[123,48,159,27,"pop"],[123,51,159,30],[123,52,159,31],[123,53,161,9],[124,14,162,8],[124,18,162,12,"Array"],[124,23,162,17],[124,24,162,18,"isArray"],[124,31,162,25],[124,32,162,26,"currentEntry"],[124,44,162,38],[124,45,162,39,"value"],[124,50,162,44],[124,51,162,45],[124,53,162,47],[125,16,163,10],[125,21,163,15],[125,25,163,19,"index"],[125,30,163,24],[125,33,163,27],[125,34,163,28],[125,36,163,30,"index"],[125,41,163,35],[125,44,163,38,"currentEntry"],[125,56,163,50],[125,57,163,51,"value"],[125,62,163,56],[125,63,163,57,"length"],[125,69,163,63],[125,71,163,65,"index"],[125,76,163,70],[125,78,163,72],[125,80,163,74],[126,18,164,12,"entriesToCheck"],[126,32,164,26],[126,33,164,27,"push"],[126,37,164,31],[126,38,164,32],[127,20,165,14,"value"],[127,25,165,19],[127,27,165,21,"currentEntry"],[127,39,165,33],[127,40,165,34,"value"],[127,45,165,39],[127,46,165,40,"index"],[127,51,165,45],[127,52,165,46],[128,20,166,14,"path"],[128,24,166,18],[128,26,166,20,"currentEntry"],[128,38,166,32],[128,39,166,33,"path"],[128,43,166,37],[128,44,166,38,"concat"],[128,50,166,44],[128,51,166,45,"index"],[128,56,166,50],[129,18,167,12],[129,19,167,13],[129,20,167,14],[130,16,168,10],[131,14,169,8],[131,15,169,9],[131,21,169,15],[131,25,170,10],[131,32,170,17,"currentEntry"],[131,44,170,29],[131,45,170,30,"value"],[131,50,170,35],[131,55,170,40],[131,63,170,48],[131,67,171,10,"currentEntry"],[131,79,171,22],[131,80,171,23,"value"],[131,85,171,28],[131,86,171,29,"onStart"],[131,93,171,36],[131,98,171,41,"undefined"],[131,107,171,50],[131,109,172,10],[132,16,173,10],[132,21,173,15],[132,25,173,21,"key"],[132,30,173,24],[132,34,173,28,"Object"],[132,40,173,34],[132,41,173,35,"keys"],[132,45,173,39],[132,46,173,40,"currentEntry"],[132,58,173,52],[132,59,173,53,"value"],[132,64,173,58],[132,65,173,59],[132,67,173,61],[133,18,174,12,"entriesToCheck"],[133,32,174,26],[133,33,174,27,"push"],[133,37,174,31],[133,38,174,32],[134,20,175,14,"value"],[134,25,175,19],[134,27,175,21,"currentEntry"],[134,39,175,33],[134,40,175,34,"value"],[134,45,175,39],[134,46,175,40,"key"],[134,51,175,43],[134,52,175,44],[135,20,176,14,"path"],[135,24,176,18],[135,26,176,20,"currentEntry"],[135,38,176,32],[135,39,176,33,"path"],[135,43,176,37],[135,44,176,38,"concat"],[135,50,176,44],[135,51,176,45,"key"],[135,56,176,48],[136,18,177,12],[136,19,177,13],[136,20,177,14],[137,16,178,10],[138,14,179,8],[138,15,179,9],[138,21,179,15],[139,16,180,10],[139,20,180,16,"prevAnimation"],[139,33,180,29],[139,36,180,32,"resolvePath"],[139,47,180,43],[139,48,181,12,"previousAnimation"],[139,65,181,29],[139,67,181,31,"styleAnimations"],[139,82,181,46],[139,84,182,12,"currentEntry"],[139,96,182,24],[139,97,182,25,"path"],[139,101,183,10],[139,102,183,11],[140,16,184,10],[140,20,184,14,"prevVal"],[140,27,184,21],[140,30,184,24,"resolvePath"],[140,41,184,35],[140,42,184,36,"value"],[140,47,184,41],[140,49,184,43,"currentEntry"],[140,61,184,55],[140,62,184,56,"path"],[140,66,184,60],[140,67,184,61],[141,16,185,10],[141,20,185,14,"prevAnimation"],[141,33,185,27],[141,37,185,31],[141,38,185,32,"prevVal"],[141,45,185,39],[141,47,185,41],[142,18,186,12,"prevVal"],[142,25,186,19],[142,28,186,23,"prevAnimation"],[142,41,186,36],[142,42,186,45,"current"],[142,49,186,52],[143,16,187,10],[144,16,206,10,"setPath"],[144,23,206,17],[144,24,206,18,"animation"],[144,33,206,27],[144,34,206,28,"current"],[144,41,206,35],[144,43,206,37,"currentEntry"],[144,55,206,49],[144,56,206,50,"path"],[144,60,206,54],[144,62,206,56,"prevVal"],[144,69,206,63],[144,70,206,64],[145,16,207,10],[145,20,207,14,"currentAnimation"],[145,36,207,47],[145,39,207,47,"undefined"],[145,48,207,47],[146,16,208,10],[146,20,209,12],[146,27,209,19,"currentEntry"],[146,39,209,31],[146,40,209,32,"value"],[146,45,209,37],[146,50,209,42],[146,58,209,50],[146,62,210,12],[146,63,210,13,"currentEntry"],[146,75,210,25],[146,76,210,26,"value"],[146,81,210,31],[146,82,210,32,"onStart"],[146,89,210,39],[146,91,211,12],[147,18,212,12,"currentAnimation"],[147,34,212,28],[147,37,212,31],[147,41,212,31,"withTiming"],[147,59,212,41],[147,61,213,14,"currentEntry"],[147,73,213,26],[147,74,213,27,"value"],[147,79,213,32],[147,81,214,14],[148,20,214,16,"duration"],[148,28,214,24],[148,30,214,26],[149,18,214,28],[149,19,215,12],[149,20,215,32],[149,21,215,33],[149,22,215,34],[150,18,216,12,"setPath"],[150,25,216,19],[150,26,217,14,"animation"],[150,35,217,23],[150,36,217,24,"styleAnimations"],[150,51,217,39],[150,53,218,14,"currentEntry"],[150,65,218,26],[150,66,218,27,"path"],[150,70,218,31],[150,72,219,14,"currentAnimation"],[150,88,220,12],[150,89,220,13],[151,16,221,10],[151,17,221,11],[151,23,221,17],[152,18,222,12,"currentAnimation"],[152,34,222,28],[152,37,222,31,"currentEntry"],[152,49,222,43],[152,50,222,44,"value"],[152,55,222,79],[153,16,223,10],[154,16,224,10,"currentAnimation"],[154,32,224,26],[154,33,224,27,"onStart"],[154,40,224,34],[154,41,225,12,"currentAnimation"],[154,57,225,28],[154,59,226,12,"prevVal"],[154,66,226,19],[154,68,227,12,"now"],[154,71,227,15],[154,73,228,12,"prevAnimation"],[154,86,229,10],[154,87,229,11],[155,14,230,8],[156,12,231,6],[157,10,232,4],[157,11,232,5],[158,10,234,4],[158,14,234,10,"callback"],[158,22,234,18],[158,25,234,22,"finished"],[158,33,234,39],[158,37,234,50],[159,12,235,6],[159,16,235,10],[159,17,235,11,"finished"],[159,25,235,19],[159,27,235,21],[160,14,236,8],[160,18,236,14,"animationsToCheck"],[160,35,236,70],[160,38,236,73],[160,39,237,10,"styleAnimations"],[160,54,237,25],[160,55,238,9],[161,14,239,8],[161,21,239,15,"animationsToCheck"],[161,38,239,32],[161,39,239,33,"length"],[161,45,239,39],[161,48,239,42],[161,49,239,43],[161,51,239,45],[162,16,240,10],[162,20,240,16,"currentAnimation"],[162,36,240,69],[162,39,241,12,"animationsToCheck"],[162,56,241,29],[162,57,241,30,"pop"],[162,60,241,33],[162,61,241,34],[162,62,241,74],[163,16,242,10],[163,20,242,14,"Array"],[163,25,242,19],[163,26,242,20,"isArray"],[163,33,242,27],[163,34,242,28,"currentAnimation"],[163,50,242,44],[163,51,242,45],[163,53,242,47],[164,18,243,12],[164,23,243,17],[164,27,243,23,"element"],[164,34,243,30],[164,38,243,34,"currentAnimation"],[164,54,243,50],[164,56,243,52],[165,20,244,14,"animationsToCheck"],[165,37,244,31],[165,38,244,32,"push"],[165,42,244,36],[165,43,244,37,"element"],[165,50,244,44],[165,51,244,45],[166,18,245,12],[167,16,246,10],[167,17,246,11],[167,23,246,17],[167,27,247,12],[167,34,247,19,"currentAnimation"],[167,50,247,35],[167,55,247,40],[167,63,247,48],[167,67,248,12,"currentAnimation"],[167,83,248,28],[167,84,248,29,"onStart"],[167,91,248,36],[167,96,248,41,"undefined"],[167,105,248,50],[167,107,249,12],[168,18,250,12],[168,23,250,17],[168,27,250,23,"value"],[168,32,250,28],[168,36,250,32,"Object"],[168,42,250,38],[168,43,250,39,"values"],[168,49,250,45],[168,50,250,46,"currentAnimation"],[168,66,250,62],[168,67,250,63],[168,69,250,65],[169,20,251,14,"animationsToCheck"],[169,37,251,31],[169,38,251,32,"push"],[169,42,251,36],[169,43,251,37,"value"],[169,48,251,42],[169,49,251,43],[170,18,252,12],[171,16,253,10],[171,17,253,11],[171,23,253,17],[172,18,254,12],[172,22,254,18,"currentStyleAnimation"],[172,43,254,56],[172,46,255,14,"currentAnimation"],[172,62,255,49],[173,18,256,12],[173,22,257,14],[173,23,257,15,"currentStyleAnimation"],[173,44,257,36],[173,45,257,37,"finished"],[173,53,257,45],[173,57,258,14,"currentStyleAnimation"],[173,78,258,35],[173,79,258,36,"callback"],[173,87,258,44],[173,89,259,14],[174,20,260,14,"currentStyleAnimation"],[174,41,260,35],[174,42,260,36,"callback"],[174,50,260,44],[174,51,260,45],[174,56,260,50],[174,57,260,51],[175,18,261,12],[176,16,262,10],[177,14,263,8],[178,12,264,6],[179,10,265,4],[179,11,265,5],[180,10,267,4],[180,17,267,11],[181,12,268,6,"isHigherOrder"],[181,25,268,19],[181,27,268,21],[181,31,268,25],[182,12,269,6,"onFrame"],[182,19,269,13],[183,12,270,6,"onStart"],[183,19,270,13],[184,12,271,6,"current"],[184,19,271,13],[184,21,271,15],[184,22,271,16],[184,23,271,17],[185,12,272,6,"styleAnimations"],[185,27,272,21],[186,12,273,6,"callback"],[187,10,274,4],[187,11,274,5],[188,8,275,2],[188,9,275,3],[189,8,275,3,"reactNativeReanimated_styleAnimationTs4"],[189,47,275,3],[189,48,275,3,"__closure"],[189,57,275,3],[190,10,275,3,"ColorProperties"],[190,25,275,3],[190,27,131,39,"ColorProperties"],[190,50,131,54],[191,10,131,54,"setPath"],[191,17,131,54],[192,10,131,54,"processColor"],[192,22,131,54],[192,24,139,16,"processColor"],[192,44,139,28],[193,10,139,28,"styleAnimations"],[193,25,139,28],[194,10,139,28,"resolvePath"],[194,21,139,28],[195,10,139,28,"__DEV__"],[195,17,139,28],[196,10,139,28,"logger"],[196,16,139,28],[196,18,190,14,"logger"],[196,32,190,20],[197,10,190,20,"isValidLayoutAnimationProp"],[197,36,190,20],[197,38,199,15,"isValidLayoutAnimationProp"],[197,70,199,41],[198,10,199,41,"withTiming"],[198,20,199,41],[198,22,212,31,"withTiming"],[199,8,212,41],[200,8,212,41,"reactNativeReanimated_styleAnimationTs4"],[200,47,212,41],[200,48,212,41,"__workletHash"],[200,61,212,41],[201,8,212,41,"reactNativeReanimated_styleAnimationTs4"],[201,47,212,41],[201,48,212,41,"__initData"],[201,58,212,41],[201,61,212,41,"_worklet_7200670419559_init_data"],[201,93,212,41],[202,8,212,41],[202,15,212,41,"reactNativeReanimated_styleAnimationTs4"],[202,54,212,41],[203,6,212,41],[203,7,78,51],[203,9,275,3],[203,10,275,4],[204,4,276,0],[204,5,276,1],[205,4,276,1,"withStyleAnimation"],[205,22,276,1],[205,23,276,1,"__closure"],[205,32,276,1],[206,6,276,1,"defineAnimation"],[206,21,276,1],[206,23,78,9,"defineAnimation"],[206,44,78,24],[207,6,78,24,"ColorProperties"],[207,21,78,24],[207,23,131,39,"ColorProperties"],[207,46,131,54],[208,6,131,54,"setPath"],[208,13,131,54],[209,6,131,54,"processColor"],[209,18,131,54],[209,20,139,16,"processColor"],[209,40,139,28],[210,6,139,28,"resolvePath"],[210,17,139,28],[211,6,139,28,"__DEV__"],[211,13,139,28],[212,6,139,28,"logger"],[212,12,139,28],[212,14,190,14,"logger"],[212,28,190,20],[213,6,190,20,"isValidLayoutAnimationProp"],[213,32,190,20],[213,34,199,15,"isValidLayoutAnimationProp"],[213,66,199,41],[214,6,199,41,"withTiming"],[214,16,199,41],[214,18,212,31,"withTiming"],[215,4,212,41],[216,4,212,41,"withStyleAnimation"],[216,22,212,41],[216,23,212,41,"__workletHash"],[216,36,212,41],[217,4,212,41,"withStyleAnimation"],[217,22,212,41],[217,23,212,41,"__initData"],[217,33,212,41],[217,36,212,41,"_worklet_11964435102020_init_data"],[217,69,212,41],[218,4,212,41],[218,11,212,41,"withStyleAnimation"],[218,29,212,41],[219,2,212,41],[219,3,74,7],[220,0,74,7],[220,3]],"functionMap":{"names":["<global>","resolvePath","keys.reduce$argument_0","setPath","withStyleAnimation","defineAnimation$argument_1","onFrame","onStart","callback"],"mappings":"AAA;ACkB;wDCM;GDa;CDC;AGI;CHwB;OIO;mDCI;oBCG;KDgE;oBEE;KFqF;qBGE;KH+B;GDU;CJC"}},"type":"js/module"}]}