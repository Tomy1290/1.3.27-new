{"dependencies":[{"name":"./useEvent","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":111},"end":{"line":7,"column":38,"index":149}}],"key":"agcKO4KjKVVd8qmhkCqgPk8SZT0=","exportNames":["*"]}},{"name":"./useHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":150},"end":{"line":8,"column":42,"index":192}}],"key":"4fwTVy9JjjGj2GzFTCIyp4pa48c=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useAnimatedGestureHandler = useAnimatedGestureHandler;\n  var _useEvent = require(_dependencyMap[0]);\n  var _useHandler2 = require(_dependencyMap[1]);\n  var EVENT_TYPE = {\n    UNDETERMINED: 0,\n    FAILED: 1,\n    BEGAN: 2,\n    CANCELLED: 3,\n    ACTIVE: 4,\n    END: 5\n  };\n\n  // This type comes from React Native Gesture Handler\n  // import type { PanGestureHandlerGestureEvent as DefaultEvent } from 'react-native-gesture-handler';\n  var _worklet_5391498155146_init_data = {\n    code: \"function reactNativeReanimated_useAnimatedGestureHandlerTs1(e){const{useWeb,EVENT_TYPE,handlers,context}=this.__closure;const event=useWeb?e.nativeEvent:e;if(event.state===EVENT_TYPE.BEGAN&&handlers.onStart){handlers.onStart(event,context);}if(event.state===EVENT_TYPE.ACTIVE&&handlers.onActive){handlers.onActive(event,context);}if(event.oldState===EVENT_TYPE.ACTIVE&&event.state===EVENT_TYPE.END&&handlers.onEnd){handlers.onEnd(event,context);}if(event.oldState===EVENT_TYPE.BEGAN&&event.state===EVENT_TYPE.FAILED&&handlers.onFail){handlers.onFail(event,context);}if(event.oldState===EVENT_TYPE.ACTIVE&&event.state===EVENT_TYPE.CANCELLED&&handlers.onCancel){handlers.onCancel(event,context);}if((event.oldState===EVENT_TYPE.BEGAN||event.oldState===EVENT_TYPE.ACTIVE)&&event.state!==EVENT_TYPE.BEGAN&&event.state!==EVENT_TYPE.ACTIVE&&handlers.onFinish){handlers.onFinish(event,context,event.state===EVENT_TYPE.CANCELLED||event.state===EVENT_TYPE.FAILED);}}\"\n  };\n  /**\n   * @deprecated UseAnimatedGestureHandler is an old API which is no longer\n   *   supported.\n   *\n   *   Please check\n   *   https://docs.swmansion.com/react-native-gesture-handler/docs/guides/upgrading-to-2/\n   *   for information about how to migrate to `react-native-gesture-handler` v2\n   */\n  function useAnimatedGestureHandler(handlers, dependencies) {\n    var _useHandler = (0, _useHandler2.useHandler)(handlers, dependencies),\n      context = _useHandler.context,\n      doDependenciesDiffer = _useHandler.doDependenciesDiffer,\n      useWeb = _useHandler.useWeb;\n    var handler = function () {\n      var reactNativeReanimated_useAnimatedGestureHandlerTs1 = function (e) {\n        var event = useWeb ?\n        // On Web we get events straight from React Native and they don't have\n        // the `eventName` field there. To simplify the types here we just\n        // cast it as the field was available.\n        e.nativeEvent : e;\n        if (event.state === EVENT_TYPE.BEGAN && handlers.onStart) {\n          handlers.onStart(event, context);\n        }\n        if (event.state === EVENT_TYPE.ACTIVE && handlers.onActive) {\n          handlers.onActive(event, context);\n        }\n        if (event.oldState === EVENT_TYPE.ACTIVE && event.state === EVENT_TYPE.END && handlers.onEnd) {\n          handlers.onEnd(event, context);\n        }\n        if (event.oldState === EVENT_TYPE.BEGAN && event.state === EVENT_TYPE.FAILED && handlers.onFail) {\n          handlers.onFail(event, context);\n        }\n        if (event.oldState === EVENT_TYPE.ACTIVE && event.state === EVENT_TYPE.CANCELLED && handlers.onCancel) {\n          handlers.onCancel(event, context);\n        }\n        if ((event.oldState === EVENT_TYPE.BEGAN || event.oldState === EVENT_TYPE.ACTIVE) && event.state !== EVENT_TYPE.BEGAN && event.state !== EVENT_TYPE.ACTIVE && handlers.onFinish) {\n          handlers.onFinish(event, context, event.state === EVENT_TYPE.CANCELLED || event.state === EVENT_TYPE.FAILED);\n        }\n      };\n      reactNativeReanimated_useAnimatedGestureHandlerTs1.__closure = {\n        useWeb,\n        EVENT_TYPE,\n        handlers,\n        context\n      };\n      reactNativeReanimated_useAnimatedGestureHandlerTs1.__workletHash = 5391498155146;\n      reactNativeReanimated_useAnimatedGestureHandlerTs1.__initData = _worklet_5391498155146_init_data;\n      return reactNativeReanimated_useAnimatedGestureHandlerTs1;\n    }();\n    if (useWeb) {\n      return handler;\n    }\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return (0, _useEvent.useEvent)(handler, ['onGestureHandlerStateChange', 'onGestureHandlerEvent'], doDependenciesDiffer\n    // This is not correct but we want to make GH think it receives a function.\n    );\n  }\n});","lineCount":82,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"useAnimatedGestureHandler"],[7,35,1,13],[7,38,1,13,"useAnimatedGestureHandler"],[7,63,1,13],[8,2,7,0],[8,6,7,0,"_useEvent"],[8,15,7,0],[8,18,7,0,"require"],[8,25,7,0],[8,26,7,0,"_dependencyMap"],[8,40,7,0],[9,2,8,0],[9,6,8,0,"_useHandler2"],[9,18,8,0],[9,21,8,0,"require"],[9,28,8,0],[9,29,8,0,"_dependencyMap"],[9,43,8,0],[10,2,10,0],[10,6,10,6,"EVENT_TYPE"],[10,16,10,16],[10,19,10,19],[11,4,11,2,"UNDETERMINED"],[11,16,11,14],[11,18,11,16],[11,19,11,17],[12,4,12,2,"FAILED"],[12,10,12,8],[12,12,12,10],[12,13,12,11],[13,4,13,2,"BEGAN"],[13,9,13,7],[13,11,13,9],[13,12,13,10],[14,4,14,2,"CANCELLED"],[14,13,14,11],[14,15,14,13],[14,16,14,14],[15,4,15,2,"ACTIVE"],[15,10,15,8],[15,12,15,10],[15,13,15,11],[16,4,16,2,"END"],[16,7,16,5],[16,9,16,7],[17,2,17,0],[17,3,17,10],[19,2,21,0],[20,2,22,0],[21,2,22,0],[21,6,22,0,"_worklet_5391498155146_init_data"],[21,38,22,0],[22,4,22,0,"code"],[22,8,22,0],[23,2,22,0],[24,2,72,0],[25,0,73,0],[26,0,74,0],[27,0,75,0],[28,0,76,0],[29,0,77,0],[30,0,78,0],[31,0,79,0],[32,2,80,7],[32,11,80,16,"useAnimatedGestureHandler"],[32,36,80,41,"useAnimatedGestureHandler"],[32,37,84,2,"handlers"],[32,45,84,43],[32,47,84,45,"dependencies"],[32,59,84,74],[32,61,84,76],[33,4,87,2],[33,8,87,2,"_useHandler"],[33,19,87,2],[33,22,87,52],[33,26,87,52,"useHandler"],[33,49,87,62],[33,51,88,4,"handlers"],[33,59,88,12],[33,61,89,4,"dependencies"],[33,73,90,2],[33,74,90,3],[34,6,87,10,"context"],[34,13,87,17],[34,16,87,17,"_useHandler"],[34,27,87,17],[34,28,87,10,"context"],[34,35,87,17],[35,6,87,19,"doDependenciesDiffer"],[35,26,87,39],[35,29,87,39,"_useHandler"],[35,40,87,39],[35,41,87,19,"doDependenciesDiffer"],[35,61,87,39],[36,6,87,41,"useWeb"],[36,12,87,47],[36,15,87,47,"_useHandler"],[36,26,87,47],[36,27,87,41,"useWeb"],[36,33,87,47],[37,4,91,2],[37,8,91,8,"handler"],[37,15,91,15],[37,18,91,18],[38,6,91,18],[38,10,91,18,"reactNativeReanimated_useAnimatedGestureHandlerTs1"],[38,60,91,18],[38,72,91,18,"reactNativeReanimated_useAnimatedGestureHandlerTs1"],[38,73,91,19,"e"],[38,74,91,38],[38,76,91,43],[39,8,93,4],[39,12,93,10,"event"],[39,17,93,15],[39,20,93,18,"useWeb"],[39,26,93,24],[40,8,94,8],[41,8,95,8],[42,8,96,8],[43,8,97,10,"e"],[43,9,97,11],[43,10,97,22,"nativeEvent"],[43,21,97,33],[43,24,98,9,"e"],[43,25,98,37],[44,8,100,4],[44,12,100,8,"event"],[44,17,100,13],[44,18,100,14,"state"],[44,23,100,19],[44,28,100,24,"EVENT_TYPE"],[44,38,100,34],[44,39,100,35,"BEGAN"],[44,44,100,40],[44,48,100,44,"handlers"],[44,56,100,52],[44,57,100,53,"onStart"],[44,64,100,60],[44,66,100,62],[45,10,101,6,"handlers"],[45,18,101,14],[45,19,101,15,"onStart"],[45,26,101,22],[45,27,101,23,"event"],[45,32,101,28],[45,34,101,30,"context"],[45,41,101,37],[45,42,101,38],[46,8,102,4],[47,8,103,4],[47,12,103,8,"event"],[47,17,103,13],[47,18,103,14,"state"],[47,23,103,19],[47,28,103,24,"EVENT_TYPE"],[47,38,103,34],[47,39,103,35,"ACTIVE"],[47,45,103,41],[47,49,103,45,"handlers"],[47,57,103,53],[47,58,103,54,"onActive"],[47,66,103,62],[47,68,103,64],[48,10,104,6,"handlers"],[48,18,104,14],[48,19,104,15,"onActive"],[48,27,104,23],[48,28,104,24,"event"],[48,33,104,29],[48,35,104,31,"context"],[48,42,104,38],[48,43,104,39],[49,8,105,4],[50,8,106,4],[50,12,107,6,"event"],[50,17,107,11],[50,18,107,12,"oldState"],[50,26,107,20],[50,31,107,25,"EVENT_TYPE"],[50,41,107,35],[50,42,107,36,"ACTIVE"],[50,48,107,42],[50,52,108,6,"event"],[50,57,108,11],[50,58,108,12,"state"],[50,63,108,17],[50,68,108,22,"EVENT_TYPE"],[50,78,108,32],[50,79,108,33,"END"],[50,82,108,36],[50,86,109,6,"handlers"],[50,94,109,14],[50,95,109,15,"onEnd"],[50,100,109,20],[50,102,110,6],[51,10,111,6,"handlers"],[51,18,111,14],[51,19,111,15,"onEnd"],[51,24,111,20],[51,25,111,21,"event"],[51,30,111,26],[51,32,111,28,"context"],[51,39,111,35],[51,40,111,36],[52,8,112,4],[53,8,113,4],[53,12,114,6,"event"],[53,17,114,11],[53,18,114,12,"oldState"],[53,26,114,20],[53,31,114,25,"EVENT_TYPE"],[53,41,114,35],[53,42,114,36,"BEGAN"],[53,47,114,41],[53,51,115,6,"event"],[53,56,115,11],[53,57,115,12,"state"],[53,62,115,17],[53,67,115,22,"EVENT_TYPE"],[53,77,115,32],[53,78,115,33,"FAILED"],[53,84,115,39],[53,88,116,6,"handlers"],[53,96,116,14],[53,97,116,15,"onFail"],[53,103,116,21],[53,105,117,6],[54,10,118,6,"handlers"],[54,18,118,14],[54,19,118,15,"onFail"],[54,25,118,21],[54,26,118,22,"event"],[54,31,118,27],[54,33,118,29,"context"],[54,40,118,36],[54,41,118,37],[55,8,119,4],[56,8,120,4],[56,12,121,6,"event"],[56,17,121,11],[56,18,121,12,"oldState"],[56,26,121,20],[56,31,121,25,"EVENT_TYPE"],[56,41,121,35],[56,42,121,36,"ACTIVE"],[56,48,121,42],[56,52,122,6,"event"],[56,57,122,11],[56,58,122,12,"state"],[56,63,122,17],[56,68,122,22,"EVENT_TYPE"],[56,78,122,32],[56,79,122,33,"CANCELLED"],[56,88,122,42],[56,92,123,6,"handlers"],[56,100,123,14],[56,101,123,15,"onCancel"],[56,109,123,23],[56,111,124,6],[57,10,125,6,"handlers"],[57,18,125,14],[57,19,125,15,"onCancel"],[57,27,125,23],[57,28,125,24,"event"],[57,33,125,29],[57,35,125,31,"context"],[57,42,125,38],[57,43,125,39],[58,8,126,4],[59,8,127,4],[59,12,128,6],[59,13,128,7,"event"],[59,18,128,12],[59,19,128,13,"oldState"],[59,27,128,21],[59,32,128,26,"EVENT_TYPE"],[59,42,128,36],[59,43,128,37,"BEGAN"],[59,48,128,42],[59,52,129,8,"event"],[59,57,129,13],[59,58,129,14,"oldState"],[59,66,129,22],[59,71,129,27,"EVENT_TYPE"],[59,81,129,37],[59,82,129,38,"ACTIVE"],[59,88,129,44],[59,93,130,6,"event"],[59,98,130,11],[59,99,130,12,"state"],[59,104,130,17],[59,109,130,22,"EVENT_TYPE"],[59,119,130,32],[59,120,130,33,"BEGAN"],[59,125,130,38],[59,129,131,6,"event"],[59,134,131,11],[59,135,131,12,"state"],[59,140,131,17],[59,145,131,22,"EVENT_TYPE"],[59,155,131,32],[59,156,131,33,"ACTIVE"],[59,162,131,39],[59,166,132,6,"handlers"],[59,174,132,14],[59,175,132,15,"onFinish"],[59,183,132,23],[59,185,133,6],[60,10,134,6,"handlers"],[60,18,134,14],[60,19,134,15,"onFinish"],[60,27,134,23],[60,28,135,8,"event"],[60,33,135,13],[60,35,136,8,"context"],[60,42,136,15],[60,44,137,8,"event"],[60,49,137,13],[60,50,137,14,"state"],[60,55,137,19],[60,60,137,24,"EVENT_TYPE"],[60,70,137,34],[60,71,137,35,"CANCELLED"],[60,80,137,44],[60,84,138,10,"event"],[60,89,138,15],[60,90,138,16,"state"],[60,95,138,21],[60,100,138,26,"EVENT_TYPE"],[60,110,138,36],[60,111,138,37,"FAILED"],[60,117,139,6],[60,118,139,7],[61,8,140,4],[62,6,141,2],[62,7,141,3],[63,6,141,3,"reactNativeReanimated_useAnimatedGestureHandlerTs1"],[63,56,141,3],[63,57,141,3,"__closure"],[63,66,141,3],[64,8,141,3,"useWeb"],[64,14,141,3],[65,8,141,3,"EVENT_TYPE"],[65,18,141,3],[66,8,141,3,"handlers"],[66,16,141,3],[67,8,141,3,"context"],[68,6,141,3],[69,6,141,3,"reactNativeReanimated_useAnimatedGestureHandlerTs1"],[69,56,141,3],[69,57,141,3,"__workletHash"],[69,70,141,3],[70,6,141,3,"reactNativeReanimated_useAnimatedGestureHandlerTs1"],[70,56,141,3],[70,57,141,3,"__initData"],[70,67,141,3],[70,70,141,3,"_worklet_5391498155146_init_data"],[70,102,141,3],[71,6,141,3],[71,13,141,3,"reactNativeReanimated_useAnimatedGestureHandlerTs1"],[71,63,141,3],[72,4,141,3],[72,5,91,18],[72,7,141,3],[73,4,143,2],[73,8,143,6,"useWeb"],[73,14,143,12],[73,16,143,14],[74,6,144,4],[74,13,144,11,"handler"],[74,20,144,18],[75,4,145,2],[77,4,147,2],[78,4,148,2],[78,11,148,9],[78,15,148,9,"useEvent"],[78,33,148,17],[78,35,149,4,"handler"],[78,42,149,11],[78,44,150,4],[78,45,150,5],[78,74,150,34],[78,76,150,36],[78,99,150,59],[78,100,150,60],[78,102,151,4,"doDependenciesDiffer"],[79,4,152,4],[80,4,153,2],[80,5,153,3],[81,2,154,0],[82,0,154,1],[82,3]],"functionMap":{"names":["<global>","useAnimatedGestureHandler","handler"],"mappings":"AAA;OC+E;kBCW;GDkD;CDa"}},"type":"js/module"}]}